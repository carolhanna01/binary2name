\input texinfo   @c -*-texinfo-*-
@c Copyright (c) 1998, 1999 by Georg C. F.  Greve <greve@gnu.org>
@c
@c %**start of header
@setfilename xlogmaster.info
@settitle Xlogmaster
@setchapternewpage on
@c %**end of header
@dircategory Miscellaneous
@direntry
* Xlogmaster: (xlogmaster).		quick and easy monitoring of a UNIX system
@end direntry

@set EDITION 0.8
@set VERSION 1.6.0
@set UPDATED 13 March 1999
@set UPDATE-MONTH March 1999


@ifinfo
This file documents the Xlogmaster
@sp 1     
Copyright 1998 Georg C. F. Greve <greve@@gnu.org>
@sp 2
Contributers to this documentation also were:
@sp 1
Adrian Wontroba <aw1@@stade.co.uk>
@sp 2
Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.
@sp 1
@ignore
Permission is granted to process this file through TeX
and print the results, provided the printed document
carries a copying permission notice identical to this
one except for the removal of this paragraph (this
paragraph not being relevant to the printed manual).
@sp 1
@end ignore
Permission is granted to copy and distribute modified
versions of this manual under the conditions for
verbatim copying, provided also that the sections
entitled ``Copying'' and ``GNU General Public License''
are included exactly as in the original, and provided
that the entire resulting derived work is distributed
under the terms of a permission notice identical to this
one.
@sp 1     
Permission is granted to copy and distribute
translations of this manual into another language,
under the above conditions for modified versions,
except that this permission notice may be stated in a
translation approved by Georg C. F. Greve.
@sp 1
The Xlogmaster is a GNU program.
@sp 1
Free Software Foundation, Inc.,@*
59 Temple Place - Suite 330, Boston, MA  02111,  USA
@end ifinfo

@titlepage
@title The Xlogmaster Tutorial
@subtitle Edition @value{EDITION}, for the Xlogmaster @value{VERSION}
@subtitle @value{UPDATE-MONTH}
@author by Georg C. F. Greve

@c  The following two commands
@c  start the copyright page.
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1998,1999 Georg C. F. Greve
@sp 2
Contributers to this documentation also were:
@sp 1
Adrian Wontroba <aw1@@stade.co.uk>
@sp 2
Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.
@sp 1
Permission is granted to copy and distribute modified
versions of this manual under the conditions for
verbatim copying, provided also that the sections
entitled ``Copying'' and ``GNU General Public License''
are included exactly as in the original, and provided
that the entire resulting derived work is distributed
under the terms of a permission notice identical to this
one.
@sp 1     
Permission is granted to copy and distribute
translations of this manual into another language,
under the above conditions for modified versions,
except that this permission notice may be stated in a
translation approved by Georg C. F. Greve.
@end titlepage

@ifinfo
@node Top, Copying, (dir), (dir)
@top Xlogmaster

The Xlogmaster is a program to monitor @w{system activity (logfiles)} & 
@w{hardware status (devices)} and take actions if necessary.
@sp 1
This is edition @value{EDITION}, for the Xlogmaster version @value{VERSION}
@end ifinfo

@menu
* Copying::                     Your rights and freedoms.

* Introduction::                Introduction into the Xlogmaster

* Runtime Commands::            How to use the Xlogmaster

* Xlogmaster Concepts::         Internal Xlogmaster workings

* Configuration Files::         The file formats used for configuration

* FAQ::                         Frequently Answered Questions

* Concept Index::               Concept Index
@end menu

@node Copying, Introduction, Top, Top
@comment node-name, next, previous, up
@chapter Copying
@cindex Your rights and freedoms.
The Xlogmaster is a GTK+ based program to monitor 
@w{system activity (logfiles)} & @w{hardware status (devices)}
and take actions if necessary.
@sp 1
Copyright (C) 1998 Georg C. F. Greve
@sp 1
@b{The Xlogmaster is a GNU program.}
@sp 1
GNU xlogmaster is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
@sp 1
GNU xlogmaster is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
@sp 1
You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.
@sp 1


@node    Introduction, Runtime Commands, Copying, Top
@comment node-name,     next,           previous, up
@chapter Introduction into the Xlogmaster
@cindex Introduction into the Xlogmaster

Hint for people that are too impatient to read the full documentation
(as I usually am):

@cartouche
@sc{Right mouse button in text window brings up menu}
@sp 1
@sc{Middle mouse button in text window hides/shows buttons}
@end cartouche

@sp 2

The first version of the Xlogmaster has been written in 1996, using the
@sc{Xview} toolkit. I didn't like that toolkit too much so it all ended up in
a pretty messy piece of code that was only compile-time configurable and
not very stable --- I did use it for two years, though, always telling
myself ''I'll be writing a clean version soon''.
@sp 1
June 1998 I finally managed to actually keep this promise and completely
rewrote the Xlogmaster for the @sc{Gtk}+ toolkit (see 
@w{@file{http://www.gtk.org/}}). First I only intended to write it for
my private usage but when I got a lot of feedback from
people around the world I decided to make the Xlogmaster a real and
regular project. With version 1.4.0 the Xlogmaster then became an
official @sc{Gnu} program.
@sp 1
The Xlogmaster will allow you to monitor all your logfiles and all
devices that allow being read by @code{cat}. Furthermore it supplies
several filters that will do things from raising/hiding lines in the
text display to starting programs to send you a paging message about a
possible security breach.
@sp 1
If used wisely the Xlogmaster can make it very easy to keep track of
everything that happens on your system and it can increase your systems
security by quite a lot. This program has been written and published in
the hope that it will prove useful to you but I do 
@emph{ not guarantee for anything} but my best will.


@node    Runtime Commands, Xlogmaster Concepts, Introduction, Top
@comment node-name,     next,           previous, up
@chapter How to use the Xlogmaster
@cindex How to use the Xlogmaster

The Xlogmaster runtime usage is basically pretty simple. There is a
button on the side for each entry and as you might have guessed clicking
on the button will make the Xlogmaster display that entry.
@sp 1
There are more functions that are less obvious:

@example
@group

@code{right mouse button} will bring up the menu.

@code{middle mouse button} will toggle whether the buttons are being
shown/hidden.

@code{left mouse button} will pick the standard selection (for
cut&paste).

@end group
@end example

these do only work in the @emph{text window}, though.
@sp 1
Apart from that you can use the cursor-keys to move the standard
selection around and activate it by hitting @key{RET}.
@sp 1
The configuration should be self explanatory, if you keep the mouse
pointer over an object a small help window will pop up.


@node    Xlogmaster Concepts, Configuration Files, Runtime Commands, Top
@comment node-name,     next,           previous, up
@chapter Internal workings of the Xlogmaster
@cindex Internal workings of the Xlogmaster
@ifinfo

The two concepts you should definitely know about within the Xlogmaster
are

@end ifinfo
@menu
* Modes::                       Description of the main modes
* Filters::                     Information about the filters
* Audio Support::               Audio Support for @emph{Class 1} filters
@end menu

@node Modes, Filters, Xlogmaster Concepts, Xlogmaster Concepts
@comment  node-name,  next,  previous,  up
@section Modes
@cindex Modes

The Xlogmaster knows basically two modes of operation, the 
@emph{tail mode} and the @emph{cat mode}. Both modes are named after the
programs they emulate.

For both modes you can give an interval --- this is the time (in 1/10
seconds) between two calls of the interrupt function. This interval
directly  determines how often the Xlogmaster checks for changes in the
logfile (@emph{tail mode}) or how often it replaces the data in the
buffer with the current data (@emph{cat mode}).


@menu
* Tail mode::                   Details about the Tail mode
* Cat mode::                    Details about the Cat mode
* Run mode::                    Details about the Run mode
@end menu

@node Tail mode, Cat mode, Modes, Modes
@comment  node-name,  next,  previous,  up
@subsection Tail mode
@cindex Tail mode
The @emph{tail} mode basically works like using @code{tail -f} on a
logfile. It will read a file and then keep on reading whatever gets
appended to it over time. The Xlogmaster should also be able to catch
logfile rotations so you don't have to reopen it every time the logfiles
have been rotated.

@node Cat mode, Run mode, Tail mode, Modes
@comment  node-name,  next,  previous,  up
@subsection Cat mode
@cindex Cat mode
The @emph{cat} mode works like doing a @code{cat <filename>} so it reads
the whole file every time. This is necessary for reading things like
the @file{/proc} devices.

@node Run mode,  , Cat mode, Modes
@comment  node-name,  next,  previous,  up
@subsection Run mode
@cindex Run mode
The @emph{run} mode gives you the opportunity to execute any script or
program that you can think of to retrieve some data that is of interest
for you and process it's @emph{stdout} and @emph{stderr} with the
Xlogmaster.@*
The @emph{run} mode has one more parameter than the other modes, the
@dfn{DELAY} interval (given in tenth of seconds) that determines the
time between an end of the monitored process and it's restart.
@example
If you monitor the output of @code{w} (a very nice one to monitor, btw.)
and give it a @emph{delay} of 10 and an @emph{interval} of 3 it will
cause the Xlogmaster to do the following:
@itemize @bullet

@item 
execute @code{w}
@item 
look for output from it every 0.3 seconds
@item
process the output with Class 1 filters
@item
display if necessary
@item 
once the program terminated: 
wait 1 second
@item 
start at the beginning
@end itemize
@end example




@page
@node Filters, Audio Support, Modes, Xlogmaster Concepts
@comment  node-name,  next,  previous,  up
@section Filters
@cindex Filters

The Xlogmaster has two classes of filters, enumerated @emph{Class 0} and
@emph{Class 1} filters. The main difference is that the @emph{Class 0}
filters are filters being applied at @emph{display time} while the
@emph{Class 1} filters are being applied at @emph{read-time}.@*
Matching for the filters is @emph{always} done per line --- patterns
that would match more than one line will @emph{never} match anything !
@sp 1
The following filters are known:

@menu
* Class 0 filters::             Details about the Class 0 filters
* Class 1 filters::             Details about the Class 1 filters
@end menu



@node Class 0 filters, Class 1 filters, Filters, Filters
@comment  node-name,  next,  previous,  up
@subsection Class 0 filters
@cindex Class 0 filters
As mentioned before @emph{Class 0} filters are being applied at
@emph{display-time} --- if a line triggered multiple filters @b{only}
the one with the highest priority is being applied ! 

The filters are (from highest to lowest priority):

@menu
* Hide::                        Functionality of the @dfn{Hide} filter
* Raise::                       Functionality of the @dfn{Raise} filter
* Lower::                       Functionality of the @dfn{Lower} filter
@end menu

@node Hide, Raise, Class 0 filters, Class 0 filters
@comment  node-name,  next,  previous,  up
@subsubsection Hide
@cindex Hide filter (Class 0)
Lines that trigger this action will be hidden without paying attention
whether the line triggered other @emph{Class 0} filters or not. Lines
that do trigger any of these will be displayed the usual way.

@node Raise, Lower, Hide, Class 0 filters
@comment  node-name,  next,  previous,  up
@subsubsection Raise
@cindex Raise filter (Class 0)
Lines that triggered this acton will be raised (highlighted) without
paying attention whether they also triggered a @emph{Lower} action.


@node Lower,  , Raise, Class 0 filters
@comment  node-name,  next,  previous,  up
@subsubsection Lower
@cindex Lower filter (Class 0)
Lines that triggered this action will be lowered (lowlighted).



@node Class 1 filters,  , Class 0 filters, Filters
@comment  node-name,  next,  previous,  up
@subsection Class 1 filters
@cindex Class 1 filters
@emph{Class 1} filters are being applied at @emph{read-time}  ---
logfiles with @emph{Class 1} filters are being watched in the
background, the filters will do exactly the same thing regardless of
whether you are just looking at that logfile or not.

The @emph{Class 1} filters will be triggered for each line they can be
applied on, but each filter only once (even if the string would
theoretically match multiple times). They do @strong{not} exclude each
other, though. Each filter that can be applied will be applied !

@menu
* Alert::                       Functionality of the @dfn{Alert} filter
* Execute::                     Functionality of the @dfn{Execute} filter
* Notice::                      Functionality of the @dfn{Notice} filter
* Uniconify::                   Functionality of the @dfn{Uniconify} filter
@end menu

@node Alert, Execute, Class 1 filters, Class 1 filters
@comment  node-name,  next,  previous,  up
@subsubsection Alert
@cindex Alert filter (Class 1)
The button of the entry that triggered the alert will flash in the
@emph{alert color} and then slowly fades back
to it's normal color. The @emph{alert color}, the time it takes to fade
back and the smoothness of the fading can be controlled at
@emph{configure-time} as well as @emph{runtime}.

The purpose of this filter is to inform you of events that are of
interest right now but become less important over time --- the fading
back prevents a situation that you come back to your machine and find
all the buttons in @emph{alert color} additionally you get an impression
of how recent the alert was if you catch it while fading back.

@node Execute, Notice, Alert, Class 1 filters
@comment  node-name,  next,  previous,  up
@subsubsection Execute
@cindex Execute filter (Class 1)

This filter allows you to start programs and/or scripts when a certain
string shows up. This is potentially the most powerful of the
filters. Your program gets it's information via environment variables or
via command line. The following variables / environment variables are
known:
@table @samp
@item %F
@itemx XLM_FILENAME
absolute path to file/device of entry.
@item %H
@itemx XLM_HELP
help text of entry.
@item %L
@itemx XLM_LINE
line that actually triggered the Execute filter.
@item %M
@itemx XLM_MODE
mode of entry.
@item %N
@itemx XLM_NAME
name of the Logfile that triggered the Execute filter.
@end table
@sp 1
A word of warning: the execute entry will only process one command
and substitute the variables accordingly. If you want to create a more
complicated setup I'd recommend to write a small shell script. This
especially means that piping will @emph{not} work.

@node Notice, Uniconify, Execute, Class 1 filters
@comment  node-name,  next,  previous,  up
@subsubsection Notice
@cindex Notice filter (Class 1)

This filter has been implemented for events that are of extreme
importance regardless of when they have been triggered. A notice box
is being popped up at the current mouse position. This notice box
contains a list with the time and date of the triggering action as well
as the name of the entry that triggered it. If you click on an entry in
this list you'll see the triggering line in the text field below the list.

If you set @samp{--notice-follows-mouse} at startup the notice box will
move to the current mouse position every time something new has been
added.

@node Uniconify,  , Notice, Class 1 filters
@comment  node-name,  next,  previous,  up
@subsubsection Uniconify
@cindex Uniconify filter (Class 1)

For people who like to keep the Xlogmaster iconifed because of space
shortage. If you set this filter the Xlogmaster will uniconify automatically
when a matching line has been seen.

@node Audio Support,  , Filters, Xlogmaster Concepts
@comment  node-name,  next,  previous,  up
@section Audio Support
@cindex Audio Support

The Xlogmaster has Open Sound System (OSS) support. For every
@emph{Class 1} filter type (the only exception being execute) you can
define a sound that gets played whenever this filter type has been
triggered.
@*
The requirements that the sounds have to meet are simple: They need to
be playable via @code{cat <soundfile> > /dev/dsp}. This usually means
they should be about 8KHz and in a standard format (@samp{Wave},
@samp{ULaw} or @samp{SUN audio} for instance).
@*
Please check out the command line options for setting of the
sound files. If nothing is given the Xlogmaster will use the files in
@file{$prefix/etc/sound}. The standard is to play back the files
called @file{notice}, @file{alert} or @file{uniconify} --- I'd recommend
to make then symbolic links instead of actually copying the files there.

@node Configuration Files, FAQ, Xlogmaster Concepts, Top
@comment  node-name,  next,  previous,  up
@chapter Configuration Files
@cindex Configuration Files

@menu
* Configfile Introduction::     A short overview over the used formats
* Xlogmasterrc location::	Locations searched for configuration files
* Xlogmasterrc format::         The main configuration file for all entries
@end menu

@node Configfile Introduction, Xlogmasterrc location, Configuration Files, Configuration Files
@comment  node-name,  next,  previous,  up
@section Configfile Introduction
@cindex Configfile Introduction

There are two different file types used for configuration by the
Xlogmaster. 
One is the GTK+ special style file, the @dfn{gtkrc} file I do not want
to say too much about that one because it is documented with the GTK+
toolkit 
(@inforef{Resource Files, GTK+ style file, GTK})
and it's format is actually pretty simple. A look at
the sample files distributed along with the Xlogmaster should already
solve all questions, so feel free to check them out and try around with
them. They allow you to control the look of the Xlogmaster any way you
want and it's definitely worth risking a look.
@sp 1
The Xlogmaster internal configuration file is pure ASCII and can hence
be processed easily with any text editor although you will most probably
not need to do so because the customization menu is much nicer.
@sp 1

@node Xlogmasterrc location, Xlogmasterrc format, Configfile Introduction, Configuration Files
@comment  node-name,  next,  previous,  up
@section Xlogmaster configuration file location
@cindex Xlogmaster configuration file location

Xlogmaster looks for a configuration file in the following sequence,
using the first found. If no configuration file is found, a set of internal
defaults is used.

@itemize @bullet
@item
The file specified by the @samp{-f} command line option.

@item
A @file{.xlogmaster} file in the user's home directory.

@item
A @file{xlogmasterrc} file in the Xlogmaster style directory.
@*
E.g.
@file{/usr/X11R6/etc/xlogmaster/xlogmasterrc}
for some systems.
@end itemize

@node Xlogmasterrc format,  , Xlogmasterrc location, Configuration Files
@comment  node-name,  next,  previous,  up
@section Xlogmaster configuration file format
@cindex Xlogmaster configuration file format

The format is line oriented, this means every entry needs to use exactly
one line. Entries that do not follow this policy will be ignored.

There are two kinds of entries for the configuration file, the first is
a line that contains the @dfn{mode} of the entry along with it's name
and some more information. The format for this kind of entry is
@sp 1
@samp{MODE@{FILENAME,INTERVAL[/DELAY],BUTTONTEXT,HELPTEXT@}}
@sp 1
where the fields are the same as in the customization menu:
@*
@table @samp
@item MODE
The mode for the entry
(See @pxref{Modes, modes})
, either @dfn{TAIL} or @dfn{CAT}
@item FILENAME
The absolute path to the file or device that the entry is for.
@item INTERVAL
The interval (in tenth of seconds) for this entry. 
(See @pxref{Modes, mode descriptions})
@item DELAY
The delay (in tenth of seconds) for this entry. The delay is @emph{optional}
and @emph{only} applies to the @dfn{RUN} mode, anyways.
(See @pxref{Modes, mode descriptions})
@item BUTTONTEXT
The name to appear on the button for the entry.
@item HELPTEXT
The text that should pop up when the mouse pointer has been pending over
the button for a short while.
@end table
@sp 2
The second kind of entry is the one for the filters. A filter line looks
like
@sp 1
@samp{MODES@{REGEX@}}
@sp 1
the @samp{MODES} are a comma separated list of filter modes (only one
@emph{Class 0} filter is allowed) and the @samp{REGEX} is a standard
regular expression (see GNU Regex manual). The filter lines always apply
to the
@sp 1
Available strings for the @samp{MODES} are
@table @samp
@item RAISE
A display-time filter.
(See @pxref{Class 0 filters})
@item LOWER
A display-time filter.
(See @pxref{Class 0 filters})
@item HIDE
A display-time filter.
(See @pxref{Class 0 filters})
@item NOTICE
A background filter.
(See @pxref{Class 1 filters})
@item ALERT
A background filter.
(See @pxref{Class 1 filters})
@item UNICONIFY
A background filter.
(See @pxref{Class 1 filters})
@item EXECUTE
A background filter.
(See @pxref{Class 1 filters})
This filter requires another argument -- the command line that will be
executed when a line matches the @emph{REGEX}. The command line is just
appended in @samp{@{   @}} brackets.
(See @pxref{Execute})
@item INVERT
invert sense of matching --- all non-matching lines will trigger a
filter
@item CASE_SENSITIVE
matching is performed case sensitive
@end table
@sp 1
Here are some lines to give you an example of how a proper xlogmasterrc
file looks.
@sp 1
@example
TAIL@{/var/log/messages,3,System Messages,/var/log/messages@}
RAISE@{greve@}
HIDE@{accesswatch@}
HIDE@{faxqclean@}
HIDE@{uucpcontrol@}
HIDE@{touch.*/tmp/newsrun@}
TAIL@{/var/log/warn,3,Warning Messages,/var/log/warn@}
TAIL@{/var/adm/kernel,3,Kernel Messages,/var/adm/kernel@}
TAIL@{/var/adm/debug,3,Debugging Messages,/var/adm/debug@}
RAISE,NOTICE@{accesswatch@}
HIDE@{newsrun@}
EXECUTE,CASE_SENSITIVE@{uucpcontrol@}@{xlm-mail greve@}
RUN@{w,3/10,Who's Online,...tell me who's online...@}
ALERT@{root@}
@end example

@node FAQ, Concept Index, Configuration Files, Top
@c  node-name,  next,  previous,  up
@chapter Frequently Answered Questions
@cindex Frequently Answered Questions

This is a list of frequently asked questions (FAQ's)
about the Xlogmaster with answers.

If you know the answer of a question is in the FAQ list, please reply to
the question by e-mail instead of posting.  Help reduce noise!

Please suggest new questions, answers, wording changes, deletions, etc.
The most helpful form for suggestions is a context diff (i.e. the output
of @samp{diff -c}).  Include @samp{FAQ} in the subject of messages sent
to me about the FAQ list.

Please do not send questions to me just because you do not want to
disturb a lot of people and you think I would know the answer.  I do
not have time to answer questions individually and keep up with
everything else I have to get done. Questions to me that have been
answered before slow down development and that is bad for everyone.

@menu
* Introductory Questions::   
* Compiling Xlogmaster::  
@end menu


@node Introductory Questions, Compiling Xlogmaster, FAQ, FAQ 
@section Introductory Questions
@cindex Introductory Questions

@menu
* What::                         What is the Xlogmaster ?
* Current version::              What is the current version of the Xlogmaster ?
* Where::                        Where can I find it?
* Getting help::                 Where can I get help for using the Xlogmaster ?
* Regexp::                       What are Regular Expressions
@end menu

@node What, Current version, Introductory Questions, Introductory Questions
@subsection What is the Xlogmaster ?
@cindex What is the Xlogmaster ?

The Xlogmaster is a GTK+ (see the GIMP toolkit page under
http://www.gimp.org/ for more information) based program that helps you
to monitor all kinds of system activity. It allows monitoring and
background surveillance of all logfiles and devices that allow being
read by @code{cat} like the @file{/proc} devices. You can configure the
Xlogmaster graphically to take almost any action you can think of upon
certain events and it can certainly help you keeping track of everything
and increasing system security.

@node Current version, Where, What, Introductory Questions
@subsection What is the current version of the Xlogmaster ?
@cindex Current version

The current version is 1.6.0, yet to be released.

@node Where, Getting help, Current version, Introductory Questions
@subsection Where can I find it?
@cindex Obtaining Xlogmaster

The source can be found via anonymous FTP at
@ifinfo
@file{ftp.gnu.org:/pub/gnu/}.
@end ifinfo
@ifhtml
<A HREF="ftp://ftp.gnu.org/pub/gnu/">ftp.gnu.org:/pub/gnu/</A>
@end ifhtml
@iftex
@file{ftp.gnu.org:/pub/gnu/}.
@end iftex

@node Getting help, Regexp, Where, Introductory Questions
@subsection Where can I get help for using the Xlogmaster ?
@cindex Help

If you installed everything correctly the easiest ways are probably
@table @bullet
@item
the tutorial that should be in your info tree. Otherwise you can find it
in the @file{doc} directory of the distribution
@item
the man page.
@item
executing the Xlogmaster via @code{xlogmaster --help}
@end table
Other ways are to check out the home page at
@table @bullet
@ifinfo
@file{http://www.gnu.org/software/xlogmaster/xlogmaster.html}
@end ifinfo
@ifhtml
<A HREF="http://www.gnu.org/software/xlogmaster/xlogmaster.html">http://www.gnu.org/software/xlogmaster/xlogmaster.html</A>
@end ifhtml
@iftex
@file{http://www.gnu.org/software/xlogmaster/xlogmaster.html}
@end iftex
@end table
or the mailing lists
@cindex mailing lists
@table @bullet
@item
@ifinfo
@file{beta-xlogmaster@@gnu.org}
@end ifinfo
@ifhtml
<A HREF="mailto:beta-xlogmaster@@gnu.org">beta-xlogmaster@@gnu.org</A>
@end ifhtml
@iftex
@file{beta-xlogmaster@@gnu.org}
@end iftex
@sp 1
Subscription is done by sending a mail to@*
@ifinfo
@file{beta-xlogmaster-request@@gnu.org}
@end ifinfo
@ifhtml
<A HREF="mailto:beta-xlogmaster-request@@gnu.org">beta-xlogmaster-request@@gnu.org</A>
@end ifhtml
@iftex
@file{beta-xlogmaster-request@@gnu.org}
@end iftex
@* leave the @emph{subject} blank and enter @samp{subscribe} in the @emph{body}.
@item
@ifinfo
@file{help-xlogmaster@@gnu.org}
@end ifinfo
@ifhtml
<A HREF="mailto:help-xlogmaster@@gnu.org">help-xlogmaster@@gnu.org</A>
@end ifhtml
@iftex
@file{help-xlogmaster@@gnu.org}
@end iftex
@sp 1
Subscription is done by sending a mail to@*
@ifinfo
@file{help-xlogmaster-request@@gnu.org}
@end ifinfo
@ifhtml
<A HREF="mailto:help-xlogmaster-request@@gnu.org">help-xlogmaster-request@@gnu.org</A>
@end ifhtml
@iftex
@file{help-xlogmaster-request@@gnu.org}
@end iftex
@* leave the @emph{subject} blank and enter @samp{subscribe} in the @emph{body}.
@end table

@node Regexp, , Getting help, Introductory Questions
@subsection Regular Expressions
@cindex Regular Expressions

This is a brief and shallow outline. For more details, consult the
'ed' man page (man ed), or the GNU regex info file (if you have it
installed).

Regular expressions are a means of specifying a text pattern. Xlogmaster
uses them in its filter specifications, where lines containing the
pattern activate the filter.

There are however a number of characters and character sequences which
have a special meaning - which may change on the context.

@table @samp
@item ^
matches start of line.
@*
Negates a character class.

@item $
matches end of line.

@item .
matches any character.

@item \(
starts a subexpression.

@item \)
ends a subexpression.

@item \|
Alternation (OR) operator.

@item [
Starts a character class.

@item ]
Ends a character class.

@item *
Matches ZERO OR MORE occurrences of the preceding expression.

@item +
Matches ONE OR MORE occurrences of the preceding expression.
@end table

At their simplist, regular expressions are just text strings, for
example:

@table @samp
@item kernel
would match any line containing the string @samp{kernel} anywhere within it.
@end table

Slightly more complicated expressions, and their effects, are:

@table @samp
@item ^kernel.*link
would match any line starting @samp{kernel}, followed by any number of
characters (including zero), and @samp{link}.

@item \(kernel\)\|\(link\)
would match any line containing 'kernel' or 'link'.

@item [a-z][0-9a-z_]*
would match many languages' idea of an identifier, that is, starts with
a letter, followed by any number of letters, digits or the character
'_'.
@end table

@node Compiling Xlogmaster,  , Introductory Questions, FAQ
@section Compiling the Xlogmaster
@cindex Compiling Xlogmaster

@menu
* Installation::                         Normal installation
* Make problems::                        Make doesn't seem to understand the Makefiles
@end menu

@node Installation, Make problems, Compiling Xlogmaster, Compiling Xlogmaster
@subsection Normal installation
@cindex Normal Installation

Normal installation is done by unpacking the archive and then entering
it. @code{./configure ; make ; make install} should do everything
then. The default is to install it into the @file{/usr/local}
structure. If you want to change that and for other configuration
options, please see @code{./configure --help}.

@cindex FreeBSD
Note. If you are using a FreeBSD system and want to compile from source,
consider using the port @file{/usr/ports/sysutils/xlogmaster}. If you just
want to install an executable version, consider using the package.

@node Make problems,  , Installation, Compiling Xlogmaster
@subsection Make doesn't seem to understand the Makefiles
@cindex Make problems

This can happen on some systems (especially SunOS or old Solaris ones) --
the problem is easily fixed by using @code{gmake} instead of @code{make}.

@node    Concept Index, , FAQ, Top
@c        node-name,    next, previous,        up
@unnumbered Concept Index

@printindex cp
     
@contents
@bye
