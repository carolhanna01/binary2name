.TH XLOGMASTER 1
.SH NAME
xlogmaster \-   quick & easy monitoring of logfiles and devices
.SH SYNOPSIS
.B xlogmaster
[-activate <n>] [-alertcolor <r,g,b>] [-audio <on/off>] [-audio-alert
<filename>/<off>] [-audio-notice <filename>/<off>] [-audio-uniconify
<filename>/<off>] [-buffer <n>[bkm]] [-config <file>] [-fadeseconds
<n>] [-fadesteps <n>] [-geometry widthxheight+x+y] [-gtkrc <file>]
[-help] [-mlockall] [-notice-follows-mouse <yes/no>] [-silent]
[-smallicon <yes/no>] [-terse] [-version] [-wordwrap <yes/no>] 
.SH DESCRIPTION
.I  Xlogmaster
displays logfiles and/or devices that can be read via cat. It allows
for quick and easy control of all logfiles and most of the
hardware/device status within one program.
 Filters allow to highlight/lowlight/hide lines of higher/lower/no
interest. Click right mouse button in text window to bring up the
menu.
.SH OPTIONS
.TP
.B \-activate <n>
Activate entry nr <n> at startup
.TP
.B \-alertcolor <r,g,b>
The color a logfile button should flash to when an alert has been
triggered for this particular logfile. The color is in GTK+ standard,
this means values between 0 and 1 for red,green,blue.
 Example: A commandline option of -alertcolor 0,1.0,0 would mean that the
button will flash bright green.
 IMPORTANT: While values have to be seperated by a comma, the values
themselves have to be given with a decimal point (so 0.45 and NOT 0,45
for instance).
.TP
.B \-audio <on/off>
Generally turns audio support for the xlogmaster on/off. For audio
support you must have the OSS installed (/dev/dsp must exist).
.TP
.B \-audio-alert <filename>/<off>
Selects file to play whenever an "alert" filter has been triggered
(see tutorial). The file must be playable via "cat filename >
/dev/dsp" ( about 8KHz and a standard (WAVE, ULaw...) format ).
 If you give "off" as the filename, there will be no sound for alert
events.
.TP
.B \-audio-notice <filename>/<off>
Same as "-audio-alert", only for "notice" events (see tutorial).
.TP
.B \-audio-uniconify <filename>/<off>
Same as "-audio-alert", only for "uniconify" events (see tutorial).
.TP
.B \-buffer <n>[bkm]
Set the size of the buffered text to <n>[bytes/kilobytes/megabytes].
This gives the maximum number of bytes that can be reviewed at any
point.
.TP
.B \-config <file>
Use <file> as the config file for Xlogmaster
.TP
.B \-database <directory>
Use <directory> for the logfile database, overrides default &
environment variable
.TP
.B \-fadeseconds <n>
Amount of seconds it takes an alert-highlighted button to fade back
to normal. Something like 300 seconds is usually a good value.
.TP
.B \-fadesteps <n>
Number of steps taken when fading back from alertcolor to standard
background color of a button. Depending on how different the colors
are and how fast you letthe buttons fade back something between 20 and
200 should be a sane value.
.TP
.B \-geometry widthxheight+x+y
Standard X11 geometry statement
.TP
.B \-gtkrc <file>
Use <file> as the GTK+ rc file (controlling the color selection &
look). See GTK+ toolkit for details.
.TP
.B \-help
Prints short help message and exits.
.TP
.B \-mlockall
Try to lock the pages of the Xlogmaster in memory so they don't get
swapped out.
 This function is meant for admins of machines with heavy memory usage
and logfiles that are considered extremely important (like some
servers). It *only* works on machines that support the mlockall() call
and usually *only for root*. If the system allows locking and you use
more memory pages than the system likes to see locked a segfault is
pretty likely. This is definitely something that has to be called a
superuser feature !
 Usual users could request the locking but nothing would happen. You
could of course make the xlogmaster suid root, but *I TELL YOU: DON'T
!!!!!!!* You would allow everyone who could start it to save the
xlogmaster configuration over anything - even the kernel image, for
instance. The only clean way is probably a little wrapper that only
you have access to and if you don't know how to set that up you
definitely don't know enough to use this feature. Most people won't
need it, anyways - so once again:  USE WITH EXTREME CAUTION AND ONLY IF
YOU KNOW WHAT YOU ARE DOING ! THIS IS A SUPERUSER FEATURE !
.TP
.B \-notice-follows-mouse [YES/no]
Determines whether the notice box (see Class1 filters in tutorial)
should follow the mouse around. This doesn't mean the notice dialog
sticks to the mouse pointer, it rather lets the notice box move to
the current mouse position every time a new entry is added to the
notice dialog.
 Since most people will probably find it annoying this feature is
disabled as the default.
.TP
.B \-silent
Same as "-audio off".
.TP
.B \-smallicon [YES/no]
If set to yes Xlogmaster will use a standard 64x64 pixel icon instead
of the logo for iconify.
.TP
.B \-terse
Assume user know's what he's doing - no "are you sure ?" questions for
possibly critical tasks like leaving the Xlogmaster.
.TP
.B \-version
Prints version information and exits.
.TP
.B \-wordwrap [YES/no]
Should the words be cut in half or wrapped properly ? Give yes for
proper wrapping.
.SH "SEE ALSO"



.SH "BUGS"
Send all bug reports to:
             xlogmaster-bugs@gnu.org

.SH "AUTHORS"
.I Xlogmaster
was written by Georg C. F. Greve.

.SH "COPYING"
.I The Xlogmaster
 Copyright (C) 1998 by Georg C. F. Greve <greve@gnu.org>
This file is part of GNU xlogmaster.

GNU xlogmaster is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

GNU xlogmaster is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.

