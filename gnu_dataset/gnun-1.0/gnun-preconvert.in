#! @BASH@
# Invoke po4a-gettextize to convert an existing translation from
# HTML to PO.

# Copyright (C) 2012, 2014 Free Software Foundation, Inc.

# This file is part of GNUnited Nations.

# GNUnited Nations is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# GNUnited Nations is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNUnited Nations.  If not, see <http://www.gnu.org/licenses/>.

function version () {
cat <<EOF
gnun-preconvert (@PACKAGE_NAME@) @PACKAGE_VERSION@
Copyright (C) 2014 Free Software Foundation, Inc.
You may redistribute copies of @PACKAGE_NAME@
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING.
EOF
}

function usage () {
cat <<EOF
Usage: gnun-preconvert OPTION... TRANSLATION MASTER

Invoke po4a-gettextize to convert a TRANSLATION of
MASTER from HTML to PO format.

Options:
  -e, --encoding=ENC         Specify encoding for TRANSLATION (if not UTF-8)
  -v, --version              Display version info and exit
  -h, --help                 Display this help and exit

Report bugs to @PACKAGE_BUGREPORT@
@PACKAGE_NAME@ home page: <@PACKAGE_URL@>
General help using GNU software: <http://www.gnu.org/gethelp/>
EOF
}

function two_files_needed () {
  echo 1>&2 "$0:" Two FILE arguments are required.
}

encoding=utf-8
translation=
master=
function parse_option () {
  skip_option=
  trimmed_option=
  end_of_options=
  case "$1" in
      --help | -h* )
	  usage
	  exit 0
	  ;;
      --version | -v* )
	  version
	  exit 0
	  ;;
      -e | --encoding )
	  skip_option=yes
	  encoding="$2"
	  ;;
      --encoding=* )
	  encoding="${1#--encoding=}"
	  ;;
      -e* )
	  encoding="${1#-e}"
	  ;;
      -- )
          end_of_options=
	  ;;
      -* )
          echo 1>&2 "$0:" Invalid option -- \'$1\'.
          exit 1
	  ;;
      * )
         if test "x$translation" = x; then
            translation="$1"
          elif test "x$master" = x; then
            master="$1"
          else
            two_files_needed
          fi
	  ;;
  esac
}

while [ $# -ge 1 ]; do
  current_option="$1"
  while test -n "$current_option";do
    parse_option "$current_option" "$2"
    if test -n "$skip_option"; then
      shift
    fi
    if test -n "$trimmed_option"; then
      current_option=-"$trimmed_option"
    else
      current_option=
    fi
  done
  shift
  if test -n "$end_of_options"; then
    break
  fi
done

if test "x$translation" = x; then
  if test $# -gt 0; then
    translation="$1"
    shift
  else
    two_files_needed
  fi
fi
if test "x$master" = x; then
  if test $# -gt 0; then
    master="$1"
    shift
  else
    two_files_needed
  fi
fi
if test $# -gt 0; then
  two_files_needed
fi

po=${translation%.html}.po

@PO4A_GETTEXTIZE@ -f xhtml -M utf-8 -L "$encoding" \
  -l "$translation" -m "$master" -p "$po" \
  -o ontagerror=silent -o "attributes=<meta>content" -o "translated=W<pre>" \
  || exit 1
