#! @BASH@

# Copyright (C) 2011, 2012, 2013,
#   2014, 2016 Free Software Foundation, Inc.

# This file is part of GNUnited Nations.

# GNUnited Nations is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# GNUnited Nations is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNUnited Nations.  If not, see <https://www.gnu.org/licenses/>.

# Regenerate lists for localized URLs.

function version () {
cat <<EOF
update-localized-urls (@PACKAGE_NAME@) @PACKAGE_VERSION@
Copyright (C) 2014 Free Software Foundation, Inc.
You may redistribute copies of @PACKAGE_NAME@
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING.
EOF
}

function usage () {
cat <<'EOF'
Usage: update-localized-urls OPTION...

Options:
      --root=DIRECTORY       Specify top directory for working copy
                             (`../..' by default)
  -o, --output=FILE          Specify output file
                             (`localized-urls.mk' by default)
  -v, --version              Display version info and exit
  -h, --help                 Display this help and exit

Report bugs to @PACKAGE_BUGREPORT@
@PACKAGE_NAME@ home page: <@PACKAGE_URL@>
General help using GNU software: <https://www.gnu.org/gethelp/>
EOF
}

ROOT=../..
OUTPUT=localized-urls.mk

function parse_option () {
  skip_option=
  trimmed_option=
  end_of_options=
  case "$1" in
      --help | -h* )
	  usage
	  exit 0
	  ;;
      --version | -v* )
	  version
	  exit 0
	  ;;
      --root )
	  skip_option=yes
	  ROOT="$2"
	  ;;
      --root=* )
	  ROOT="${1#--root=}"
	  ;;
      --output | -o )
	  skip_option=yes
	  OUTPUT="$2"
	  ;;
      --output=* )
	  OUTPUT="${1#--output=}"
	  ;;
      * )
          echo 1>&2 "$0:" Invalid option -- \'$1\'
          usage
          exit 1
	  ;;
  esac
}

while [ $# -ge 1 ]; do
  current_option="$1"
  while test -n "$current_option";do
    parse_option "$current_option" "$2"
    if test -n "$skip_option"; then
      shift
    fi
    if test -n "$trimmed_option"; then
      current_option=-"$trimmed_option"
    else
      current_option=
    fi
  done
  shift
  if test -n "$end_of_options"; then
    break
  fi
done

if ! test -d "${ROOT}"; then
  echo 1>&2 "$0:" root directory \'$ROOT\' not found
  exit 1
fi

TMP=`@MKTEMP@ urls.XXXXXXXXXX`
trap "rm -f ${TMP}" EXIT

cat > ${TMP} <<EOF
# Generated by GNUN (update-localized-urls) on $(date)

localized-url-sources :=
EOF
find ${ROOT} -type f -name \*.pot -print \
  | while read pot; do
      article=${pot##*/}; article=${article%.pot};
      html_base=${pot%/po/*}/${article}
      html=${html_base}.html
      html_base=${html_base#${ROOT}/}
      test -f ${html} || continue
      urls="$(@SED@ -n '
/<!-- GNUN: localize URL/ {
 :egin; / -->/! { N; begin;}
 s/[[:space:]]\+/ /g; s/, / /g;
 s%.*<!-- GNUN: localize URL \+\(.*\) \+-->.*%\1%
 s/ [^.]\+ / /g; p;
}' ${html})"
      test -n "${urls}" || continue
      cat >> ${TMP} <<EOF
localized-url-sources += ${html_base}
define ${html_base}-localized-urls
$(echo ${urls} | @SED@ 's/ / \\\n/g;')
endef
EOF
  done
cp $TMP "$OUTPUT"
