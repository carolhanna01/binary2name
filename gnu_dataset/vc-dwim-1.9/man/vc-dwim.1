.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VC-DWIM 1"
.TH VC-DWIM 1 "2019-12-18" "perl v5.28.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
vc\-dwim \- use new ChangeLog entries to direct and cross\-check a
version\-control "diff" or "commit" command
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBvc-dwim\fR [\s-1OPTIONS\s0] [\s-1CHANGELOG_FILE...\s0]
.PP
\&\fBvc-dwim\fR [\s-1OPTIONS\s0] \-\-commit \s-1CHANGELOG_FILE...\s0
.PP
\&\fBvc-dwim\fR [\s-1OPTIONS\s0] \-\-diff [\s-1FILE...\s0]
.PP
\&\fBvc-dwim\fR [\s-1OPTIONS\s0] \-\-print\-vc\-list
.PP
\&\fBvc-dwim\fR [\s-1OPTIONS\s0] \-\-initialize
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
By default, each command line argument should specify a locally modified,
version-controlled ChangeLog file.  If there is no command line argument,
\&\fBvc-dwim\fR tries to use the ChangeLog file in the current directory.
In this default mode, \fBvc-dwim\fR works by first computing diffs of those
files and parsing the
diff output to determine which named files are being changed.
Then, it diffs the affected files and prints the resulting output.  One
advantage of using this tool is that before printing any diffs, it warns
you if it sees that a ChangeLog or an affected file has unsaved changes.
It detects that by searching for an editor temporary file corresponding
to each affected file.  Another common error you can avoid with this
tool is the one where you create a new file, add its name to Makefiles,
etc., mention the addition in ChangeLog, but forget to e.g., \*(L"git add\*(R"
(or \*(L"hg add\*(R", etc.) the file to the version control system.  \fBvc-dwim\fR
detects this discrepancy and fails with a diagnostic explaining the
probable situation.  You might also have simply mistyped the file name
in the ChangeLog.
.PP
Once you are happy with your ChangeLog-derived diffs, you can commit
those changes and the ChangeLog simply by rerunning the command with
the \-\-commit option.
.PP
But what if you'd like to use \fBvc-dwim\fR on a project that doesn't have
or want a ChangeLog file?  In that case, you can maintain your own,
private, version-controlled ChangeLog file in a different hierarchy.
Then just make a symlink to it from the top level directory of the
hierarchy in which you'd like to use it and everything should work.
Your private ChangeLog file need not even use the same version control
system as the rest of the project hierarchy.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-commit\fR" 4
.IX Item "--commit"
perform the commit, too
.ie n .IP "\fB\-\-author=""User Name <user@example.org>""\fR" 4
.el .IP "\fB\-\-author=``User Name <user@example.org>''\fR" 4
.IX Item "--author=User Name <user@example.org>"
Specify the user name and email address of the author
of this change set.
.IP "\fB\-\-diff\fR" 4
.IX Item "--diff"
Determine which version control system manages the first
\&\s-1FILE,\s0 then use that to print diffs of the named FILEs.
If no \s-1FILE\s0 is specified, print all diffs for the current
hierarchy.
.IP "\fB\-\-print\-vc\-list\fR" 4
.IX Item "--print-vc-list"
Print the list of recognized version control names, then exit.
.IP "\fB\-\-initialize\fR" 4
.IX Item "--initialize"
This option, or the equivalent operations, is needed in a project that
does not version-control a ChangeLog file. Use this option in the
top-level project directory to create your personal ChangeLog file \*(--
that file will be a symlink to a git-version-controlled ChangeLog file
in a just-created single-file repository residing in the \s-1VC\s0 admin
directory (.git, .hg, etc.). If there is an existing \f(CW\*(C`ChangeLog\*(C'\fR file
in the top-level directory, running \fBvc-dwim \-\-initialize\fR first
renames it to \f(CW\*(C`ChangeLog~\*(C'\fR.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display this help and exit.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Output version information and exit.
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
Generate verbose output.
.IP "\fB\-\-debug\fR" 4
.IX Item "--debug"
Generate debug output.
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
This tool can be useful to you only if you use a version control system.
It's most useful if you maintain a ChangeLog file and create a log entry
per file per \*(L"commit\*(R" operation.
.PP
Relies on fairly strict adherence to recommended ChangeLog syntax.
Detects editor temporaries created by Emacs and Vim.
Eventually, it will detect temporaries created by other editors.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jim Meyering <jim@meyering.net>
.PP
Report bugs and all other discussion to <bug\-vc\-dwim@gnu.org>.
.PP
\&\s-1GNU\s0 <@PACKAGE_NAME> home page: &lt;https://www.gnu.org/software/<@PACKAGE_NAME>/&gt;
.PP
General help using \s-1GNU\s0 software: <https://www.gnu.org/gethelp/>
