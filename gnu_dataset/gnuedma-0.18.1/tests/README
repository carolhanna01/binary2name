NOTES on the test Directory
---------------------------
This directory contains simple test for some GNU/EDMA features.

On each directory you will find one or more .mk makefiles. Just compile them using:

# make -f filename.mk

and run the test.

You will see some cryptic output in the console. To understand what's going on read the source code and try to follow the traces in the console.

The tests are quiet simple and unuseful, are just examples to test GNU/EDMA features.

Here is a list of the available test with a brief explanation:

* abstract_classes
  Examples on how to define Abstract Classes (classes without related implementation)
  See .IDF files and .INES files to note the differences with normal classes
* anchor_points
  Some simple tests using anchor points and on-demand inheritance
* aop
	Examples about simple Aspect Oriented Programming using GNU/EDMA SIU Proxies
* benchmark
	Very simplistic benchmarks for coarse time estimation of basic operations
* casting
  Tests for the casting primitives
* cloning
  Deep ans Shallow cloning simple examples
* com-like-interface
  Simple example about how to use the low-level GNU/EDMA API to provide COM-like interfaces
* datatypes
  A simple test for edma_wprop3 and edma_rprop3 and the basic datatypes
* exceptions
  Test for exception management
* inheritance
  General test on inheritance (dynamic and static mixed). 
  There are examples of SUPER-like and INNER-like inheritance hierarchies
* pap_test
  Simple test for Preferer Anchor Points. See IDF for PAP definitions
* patterns
	Some basic patterns implemented exploiting GNU/EDMA dynamic features
* serializer
	Simple tests of the SERIALIZER classes
* siu
  Simple examples on using SIU extension system
* static_methods
  Test for static method invokation primitives
* unit_tests
	A bunch of simplistic tests... evolving to a true unit suite test
* update
	Simple examples showing GNU/EDMA dynamic update features
* virtual_methods
	Simple examples on how to use virtual methods with GNU/EDMA

--- EOT --------------------------------------------------------------------
