%% Copyright (C) 2009-2014 David Sugar, Tycho Softworks.
%% Copyright (C) 2015 Cherokees of Idaho.
%%
%% This file is free software; as a special exception the author gives
%% unlimited permission to copy and/or distribute it, with or without
%% modifications, as long as this notice is preserved.
%%
%% This program is distributed in the hope that it will be useful, but
%% WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
%% implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

	check.ignore a="testing" b=%new #c d  # this is a comment
	nop  %% another comment
	check
	nop

@main
	var local="initial"
	var list={charlie='head',backer='middle',tail='john'}

	if $tail:list == "tail='john'" then check.manip
	set %tuple $tail:list
	if $key:tuple eq "tail" then check.manip
	if $val:tuple eq "john" then check.manip
	if $pop:list eq "tail='john'" then check.manip
	if $list == {charlie='head',backer='middle'} then check.manip
	if $pull:list == {charlie='head'} then check.manip
	if $list == {backer='middle'} then check.manip
	push %list last unicorn
	if $list == {backer='middle',last='unicorn'} then check.manip

	gosub @other
	gosub :other
	reftest vars="test of define 1"
	reftest vars="test of define 2" "arg 1 set"
	reftest vars="test of define 3" %local
	if %local == "result" then check.refs
	
	check.main
	nop
	exit
	check
	check.main

^#
	check.event
	var counter:int
	do
		if $inc:counter > 3 then break
		check.loop
	loop
	check

@exit
	check.exit

:exit-local
	check.exit

:other
	check

