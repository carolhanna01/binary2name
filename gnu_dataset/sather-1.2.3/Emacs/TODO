These are things I'd like to do eventually.  I'd appreciate any ideas
on how to get them done efficiently and robustly.

1.  Find a better way to highlight routines.  The method currently
    used requires that keyword highlighting be used, even if it's for
    the same color as regular text, just so lots of things don't get
    highlghted as routines.  It also requires that routines are
    indented only 3, 4, or 5 spaces.

2.  Indent manifest arrays correctly without using s-expressions.  The
    method used now is kludgey.  I'd like to use some of the code from
    `eiffel3.el', from Tower, but Eiffel uses `<<...>>' for manifest
    arrays, which is much easier for Emacs to handle.

3.  Use the Emacs desktop metaphor to create projects for Sather.  It
    would be cool if this could use some information from the
    `.module' files.

4.  Use the compiler front to create etags so that its easier to jump
    around in large systems (like the Sather Library).  Ben's cool
    browser has made this less pressing, but still desirable if you
    just want to check out a class or two, or you're one of those
    that's afraid to leave Emacs.

5.  Create a menu structure that duplicates the Sather Library: a menu
    for each module, and each class in the module, etc.

6.  Use previous statements to speed up indentation even more.  It's
    still slow as you get deep into a routine that has few blocks
    because it searches to the previous block to get its indentation.
