Sather Mode NEWS -- history of user-visible changes.  22 January 1996

Copyright (C) 1995 by International Computer Science Institute
This file is part of the GNU Sather package. It is free software; you may
redistribute  and/or modify it under the terms of the  GNU General Public
License (GPL)  as  published  by the  Free  Software  Foundation;  either
version 3 of the license, or (at your option) any later version.
This  program  is distributed  in the  hope that it will  be  useful, but
WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See Doc/GPL for more details.
The license text is also available from:  Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
----------->  Please email comments to <bug-sather@gnu.org>  <-----------


1 July 1999

* License has changed to GPL along with the license transition of the Sather
  distribution.


22 January 1996

* Editing Modules

** There is a new mode for editing Sather Module files, called
   `sather-module-mode'.  It supports similar things as `sather-mode',
   but is much simpler.  You can run the compiler or broswer, fill
   comments, etc.

** This mode is automatically tied to files ending in `.module' and
   `.pmodule' if you're using `sample.emacs'.


20 October 1995

* Bugs fixed

** Several of the hide/show functions were clobbering the mark.  They
   don't anymore.

** Discovered what "that weird place" was.  If you don't understand
   this, you probably don't care.  But I fixed it.

** The `end' wasn't being handled correctly, so that routines like
   `endl' were treated like `end'.  Fixed.

** Other fixes I can't remember.

* Hiding/Showing Comments

  You can now hide and show comments.  This only has very basic
  functionality: you can hide or show every comment in a file.  Note
  that you can always use the `sather-lib' functions
  `sather-hide-current-region' and `sather-show-current-region' to
  hide and show anything.

* Syntax Highlighting

** New Faces for Highlighting

   I've added several of new faces, especially for font-lock.  Here's a
   list:

     font-lock-private-face     : Highlights the `private' keyword.
     font-lock-attr-face        : Same for `attr'.
     font-lock-shared-face      : Same for `shared'.
     font-lock-include-face     : Same for `include'.
     font-lock-class-face       : Highlights opening `class' clauses.
                                  This should probably be used with
                                  the `keyword' and `type' faces off.

   These should all work for hl319, too (except the `class' face), but
   perhaps not as well.  Here's a list of new symbols for hl319:

     private
     attr
     shared
     include

   The `include' face is already supported in hl319.

** Some patterns may highlight differently because I rearranged the
   order of highlighting so that more patterns make sense together.

* Compiler and Browser Integration

** You can launch the compiler from sather-mode as always by using the
   Emacs `compile' or `recompile' commands (or with the keys or menu
   entries).  Set `sather-compile-command' to default the command used
   to compile.

** You can launch the browser from sather-mode using `sather-browse'
   or `sather-browse-now'.  Set `sather-browse-command' to default the
   command used to browse.

** You can run the resulting program from sather-mode using
   `sather-run-program' or `sather-run-program-now'.  Set
   `sather-program-name' to default the command used to execute the
   program.

* Comment Indentation

** Comment indentation has been sped up somewhat.  It's still not as
   fast as it could be.

** Support for ``design comment'' indentation has been added.  This is
   for comments like this:

   class A
      -- This is a design comment.
   is
      rout b
         -- This is, too.
      is
      ...
      end;
   end;

   If you set the variable, `sather-indent-design-comments-correctly'
   to `t', comments will be indented as above.  Otherwise (the
   default), the comments will be indented one block (`sather-indent')
   less.

* The `sample.emacs' file contains examples of setting up sather-mode,
  with a little bit of explanation, but not much.

* The sather-mode documentation has been updated to reflect all? of
  these changes.  You should read the documentation if you wish to
  learn how to effectively use sather-mode.  It is fully indexed, but
  I won't say it's well written.  It is included as
  `sather-mode.texinfo', and `sather-mode.info*'.
