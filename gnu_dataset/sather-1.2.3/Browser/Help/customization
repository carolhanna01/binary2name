Customization
=============
	Many of the standard options can be saved out to disk 
by choosing the save configuration option. This writes out a file
called ~/.bsConfig.tcl which will be read in the next time the browser
is used.

	The browser may be customized in various ways by redefining
routines and altering the values of various globals.  During startup,
the browser will source a file called ".bsCustom.tcl" in the user's home
directory, if such a file exists.  A sample version of this file may
be found in "help.ExampleCustomization" or in the Example Customization
item in the help menu.

	Most customization takes place *before* the browser's windows
are generated:
-----------------------------------------------------------------------
1) Various colors, fonts and other globals may be set in .bs.tcl
Since this file is sourced after the original definitions (and since
the last definition is used) but before browser.tcl is "run", the user's
definitions have precedence and will be used.  help.ExampleCustomization
contains all the globals that may be so set and valid values.
2) browser.tcl Routines may be redefined to behave differently by copying
the original routine, making a modification and adding the modified
routine (with the same name) to .bs.tcl. The modified routine will take
precedence over the original routine.


Some customization (such as adding new menu items) can only take place
*after* the browser's window's and panes have been created:
-----------------------------------------------------------------------
3) A special case of a modified routine is
proc afterInitHook 
	which is called *after* the browser has been configured.
Hence, this hook may be used to append items to existing menus in
the browser.
Eg:
proc afterInitHook { } {
    global gMenuFrame
    ${gMenuFrame}.graph.menu add command -label "my test" -command "tst" 
    puts "Executing after init hook"
}

proc tst { } {
	puts "This is a test addition to the graph menu"
}


# ############### Sather Browser Example Customization ###############
# This file should exist in the user's home directory and be named
# .bsCustom.tcl. These values over-ride anything saved in
# .bsConfig.tcl
###################################################################
# Files with more lines will not have comment highlighting - overrides
# what was saved in config file
set gCommentThreshold 500
# Change colors (look at browserFontsNColors.tcl)
set gSubtypeColor "green"
set gSubtypeRev   "white"

############## End of general variables #####################
# You can even redefine browser procedures to your liking 
# Since this is read after the procedures are defined in browser.tcl
# your definition here takes precedence.  For instance, you can
# turn on debugging messages by:
# proc debugPuts { a } {
#     puts "My special TCL debug: $a"
# }
# Of course, this will only turn on the debugging messages that
# happen *after* this file has been sourced.
############# below is color and font stuff #############
#
# Also take a look at fontsNcolors.tcl to see other variables that
# you could set in your .bs.tcl


