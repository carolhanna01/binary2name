------------------------->  GNU Sather - sourcefile  <-------------------------
-- Copyright (C) 199x by International Computer Science Institute            --
-- This file is part of the GNU Sather library. It is free software; you may --
-- redistribute  and/or modify it under the terms of the GNU Library General --
-- Public  License (LGPL)  as published  by the  Free  Software  Foundation; --
-- either version 3 of the license, or (at your option) any later version.   --
-- This  library  is distributed  in the  hope that it will  be  useful, but --
-- WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY --
-- or FITNESS FOR A PARTICULAR PURPOSE. See Doc/LGPL for more details.       --
-- The license text is also available from:  Free Software Foundation, Inc., --
-- 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA                     --
-------------->  Please email comments to <bug-sather@gnu.org>  <--------------

class TEST_FMUTEX is
   include R_TEST;

   other(l:$LOCK):BOOL is
      lock l then
         return true;
      else
	 return false;
      end;
   end;

   fmutex is
      class_name("FMUTEX");
      l::=#FMUTEX;

      lock l then
         test("lock",true,true);
	 lock l then
	    test("lock 2",true,true);
	    -- This test is incompatible with zones
	    --test("lock other cluster",other(l)@1%clusters,true);
	    --par
	    --   test("other thread",other(l),false);
	    --end;
	 else
	    test("lock 2",false,true);
	 end;
	 unlock l;
	 par
	    test("other thread 2",other(l),true);
	 end;
      else
         test("lock",false,true);
      end;
      finish;
   end;

   spin is
      class_name("FMUTEX_SPIN");
      l::=#FMUTEX_SPIN;

      lock l then
         test("lock",true,true);
	 lock l then
	    test("lock 2",true,true);
	    -- This test is incompatible with zones
	    --test("lock other cluster",other(l)@1%clusters,true);
	    --par
	    --   test("other thread",other(l),false);
	    --end;
	 else
	    test("lock 2",false,true);
	 end;
	 unlock l;
	 par
	    test("other thread 2",other(l),true);
	 end;
      else
         test("lock",false,true);
      end;
      finish;
   end;

   main is
      fmutex;
      spin;
   end;
end; -- class GATE_TEST

-------------------------------------------------------------------
-- vim:sw=3:nosmartindent
