These are easy to avoid once you know about them.
Send comments to "bug-sather@gnu.org",
(or "info-sather@gnu.org", if they are of general interest).

-----------------------------------------------------------------
Major functionality omissions:

    Dispatching of routine and iter closures is not implemented yet.
    The compiler will let you assign one closure to another only if
    they have exactly the same static types.


-----------------------------------------------------------------
Known Bugs

Bugs of libraries and library support:

    FLTX and FLTDX aren't implemented; it's difficult when most C
    compilers don't support them, either.

    IEEE "-0.0" literals become positive, because RATs are used
    internally to represent the mantissas and those don't have signed
    zero.  You can get the correct effect with 0.0.negate.

    Built-in INT operations such as "plus" don't work when you change
    asize in a descendent.  AVAL{BOOL} and AREF{BOOL} use bytes instead
    of bits for storage except in built-in classes.

Bugs affecting checking:

    IEEE exception handling isn't implemented.

    Unreachable methods aren't typechecked if they are private.

    Stack overflows are reported as void accesses under some
    circumstances, because they are just trapped seg faults.

Bugs affecting optimizations

Bugs affecting invocation/environment:

    Symbolic info generated by -debug or -g may occasionally point to a
    C file instead of Sather, but these should be ignored (it only happens
    if there isn't an appropriate Sather line that corresponds to the C
    statements, such as during automatic boxing of dispatched value types).

Known pSather bugs:
