%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
%	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
%		/FmPD2 /pdfmark load def
		
		
		
		
		
%		/FmPA { mark exch /Dest exch 5 3 roll
%				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD
%		}FmBD
%	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
%	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 15 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /Times-Italic FMFONTDEFINE
5 0 /Helvetica FMFONTDEFINE
6 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(J) 72 737.98 T
(une 20, 1996) 76.82 737.98 T
72 75.33 558 75.33 2 L
0.25 H
2 Z
N
0 10 Q
(1) 527.82 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
207 659 558 669 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 660 459 660 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
1 24 Q
0 X
0 0 0 1 0 0 0 K
-0.17 (SatherGui) 207 677 S
2 12 Q
-0.22 (Benedict Gomes, Da) 207 635 P
-0.22 (vid Bailey) 309.92 635 P
-0.22 (, Matthias Er) 360.05 635 P
-0.22 (nst and) 427.76 635 P
(Holger Klawitter) 207 619 T
0 9 Q
(SatherGui is a graphical user interface based on the Tc) 207 565 T
(l/Tk widg) 442.4 565 T
(et set.  SatherGui) 481.01 565 T
-0.14 (pr) 207 553 P
-0.14 (o) 215.82 553 P
-0.14 (vides a type saf) 221.14 553 P
-0.14 (e interface to the inherentl) 287.67 553 P
-0.14 (y unsaf) 399.51 553 P
-0.14 (e access functions of Tk. The) 430.79 553 P
-0.25 (SatherGui comes in tw) 207 541 P
-0.25 (o \337a) 303.1 541 P
-0.25 (v) 321.21 541 P
-0.25 (or) 325.95 541 P
-0.25 (s. The standar) 334.81 541 P
-0.25 (d ver) 395.15 541 P
-0.25 (sion  links directl) 416.27 541 P
-0.25 (y to Tc) 488.91 541 P
-0.25 (l/Tk.  The) 517.24 541 P
(other ver) 207 529 T
(sion uses a c) 245.38 529 T
(lient-ser) 301.73 529 T
(ver model adn is called Doub) 336.83 529 T
(leGui; the c) 461.28 529 T
(lient need) 510.11 529 T
(not be a) 207 517 T
(ware of Tc) 241.37 517 T
(l/Tk and comm) 285.7 517 T
(unicates with the ser) 348.54 517 T
(ver o) 437.66 517 T
(ver a soc) 458.99 517 T
(ket. Muc) 497.83 517 T
(h of) 533.75 517 T
(the Tk widg) 207 505 T
(et set has been implemented as a set of c) 256.6 505 T
(lasses in Sather) 433.48 505 T
(, whic) 501.48 505 T
(h) 526.4 505 T
(pr) 207 493 T
(o) 215.82 493 T
(vide similar con) 221.14 493 T
(venience and m) 288.81 493 T
(uc) 356.16 493 T
(h greater saf) 366.57 493 T
(ety) 420.5 493 T
(.) 432.78 493 T
0 12 Q
(1.0  Intr) 72 449.33 T
(oduction) 114.44 449.33 T
1 10 Q
-0 (The Sather Gui is a set of classes supporting to write graphical user interf) 72 421.67 P
-0 (aces in Sather) 365.39 421.67 P
-0 (. The Sather Gui comes in tw) 420.38 421.67 P
-0 (o \337a-) 537.17 421.67 P
(v) 72 409.67 T
(ors:) 76.8 409.67 T
3 11 Q
-0.21 (\245) 72 391 P
1 10 Q
-0.08 (The standard Library; also called single process Gui. Using this library no Sather code will be e) 91.38 391 P
-0.08 (x) 472.38 391 P
-0.08 (ecuted when the Tk) 477.23 391 P
(toolkit is doing something. V) 122.4 378.67 T
(ice v) 238.76 378.67 T
(ersa the user interf) 257.77 378.67 T
(ace will freeze as long as Sather code is being e) 331.81 378.67 T
(x) 522.16 378.67 T
(ecuted.) 527.01 378.67 T
3 11 Q
(\245) 72 363 T
1 10 Q
(The DualGui; also called tw) 91.8 363 T
(o or double process Gui. The abo) 204.46 363 T
(v) 337.34 363 T
(e restriction does not e) 342.19 363 T
(xist an) 432.58 363 T
(y more.) 458.82 363 T
(This docu) 72 335.67 T
(ment includes te) 111.72 335.67 T
(xt cobbled together from dif) 177.12 335.67 T
(ferent souces and is a rough introduction to some of the Gui func-) 289.63 335.67 T
(tionality) 72 322.33 T
(. Here are some pointers to additional information about the Sather Gui and related topics.) 104.69 322.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 F
(W) 72 167.67 T
(arning: The Gui does not implement the full interface of the Tk/Tcl toolkit, b) 79.41 167.67 T
(ut it pr) 384.21 167.67 T
(o) 410.99 167.67 T
(vides a good fr) 415.89 167.67 T
(ame) 475.46 167.67 T
(work, whic) 491.97 167.67 T
(h) 535.71 167.67 T
(should be easily completable) 72 155.67 T
(.) 187.67 155.67 T
0 12 Q
(2.0  Goals) 72 119.33 T
3 11 Q
(\245) 72 98 T
1 10 Q
(Simple programming model; application, not user) 91.8 98 T
(-interf) 291.04 98 T
(ace dri) 315.93 98 T
(v) 342.61 98 T
(en.) 347.46 98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(http://www) 150 303 T
(.icsi.ber) 186.86 303 T
(k) 214.54 303 T
(ele) 218.38 303 T
(y) 228.9 303 T
(.edu/~sather/) 232.1 303 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(  Docmentation/Gui/GuiBro) 150 289 T
(wser) 245.47 289 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(A bro) 315 302.33 T
(wser though the souce \336les of the) 335.52 302.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Sather Gui.) 315 291.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(http://www) 150 274.33 T
(.icsi.berk) 190.42 274.33 T
(ele) 223.32 274.33 T
(y) 233.68 274.33 T
(.edu/~sather/) 237.6 274.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(  Documentation/TclTkDocs) 150 259.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (A documentation of the Tk toolkit. This is) 315 274.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(alsmost essential to understand the beha) 315 263.33 T
(v-) 459.05 263.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(iour of the Sather Gui.) 315 252.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftp://ftp.icsi.berk) 150 237.33 T
(ele) 210.41 237.33 T
(y) 220.77 237.33 T
(.edu/pub/ai/gomes/) 224.68 237.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(  Sather/Gui/tklib) 150 222.33 T
(.tar) 212.15 222.33 T
(.Z) 223.4 222.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A place to do) 315 237.33 T
(wnload the Tk toolkit douc-) 363.02 237.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mentation.) 315 226.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Doc/Installation.html) 150 207.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 (A guide ho) 315 207.33 P
-0.22 (w to install the Sather compiler) 354.33 207.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and the Gui.) 315 196.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144 312.08 144 189.83 2 L
V
0.5 H
0 Z
N
309 312.58 309 192.83 2 L
V
N
472.75 312.08 472.75 192.83 2 L
V
N
475.25 312.08 475.25 190.33 2 L
V
N
143.75 312.33 475.5 312.33 2 L
V
N
144.25 192.58 473 192.58 2 L
V
N
144.25 190.08 475.5 190.08 2 L
V
N
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 189 739.85 T
(s Guide) 210.97 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(2) 54 60.29 T
0 9 Q
( of) 59.56 60.29 T
0 10 Q
( 14) 70.56 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
3 11 Q
(\245) 54 679.99 T
1 10 Q
(Easy to port to dif) 73.8 679.99 T
(ferent platforms.) 145.77 679.99 T
3 11 Q
(\245) 54 663.99 T
1 10 Q
(Easy to implement... :-\051) 73.8 663.99 T
3 11 Q
(\245) 54 647.99 T
1 10 Q
(Minimal interference with standard Sather code.) 73.8 647.99 T
3 11 Q
(\245) 54 631.99 T
1 10 Q
(Relati) 73.8 631.99 T
(v) 97.44 631.99 T
(ely type-safe.  The application programmer must not ha) 102.29 631.99 T
(v) 324.55 631.99 T
(e to deal with strings and the run-time errors that) 329.4 631.99 T
-0.05 (w) 104.4 619.66 P
-0.05 (ould result from doing so. T) 111.52 619.66 P
-0.05 (o quote Ale) 222.68 619.66 P
-0.05 (x Cozzi:  \322K) 269.08 619.66 P
-0.05 (eep the bad Tcl code a) 318.95 619.66 P
-0.05 (w) 408.22 619.66 P
-0.05 (ay from the good Sather code\323) 415.34 619.66 P
3 11 Q
(\245) 54 603.99 T
1 10 Q
(Add-on comple) 73.8 603.99 T
(xity: Functions ha) 136.14 603.99 T
(v) 208.17 603.99 T
(e \322nai) 213.02 603.99 T
(v) 236.37 603.99 T
(e\323 and \322full-\337edged\323 v) 241.22 603.99 T
(ersions.) 332.43 603.99 T
3 11 Q
(\245) 54 587.99 T
1 10 Q
(No Tk/Tcl modi\336cations. W) 73.8 587.99 T
(e don\325) 186.33 587.99 T
(t w) 211.42 587.99 T
(ant to ha) 223.82 587.99 T
(v) 258.06 587.99 T
(e to track distrib) 262.91 587.99 T
(utions.) 327.98 587.99 T
0 12 Q
(3.0  User\325) 54 551.33 T
(s Guide) 106.64 551.33 T
1 10 Q
(This section will focus on just the application end and is v) 54 530.66 T
(alid for both the standard and dual process v) 286.24 530.66 T
(ersions.  The Gui) 463.28 530.66 T
-0.2 (w) 54 518.66 P
-0.2 (orks quite similar lik) 61.12 518.66 P
-0.2 (e Tcl/Tk toolkit and you should be able to use the standard Tk man pages to determine the meaning) 143.49 518.66 P
(of v) 54 506.66 T
(arious options. Ho) 69.58 506.66 T
(we) 142.94 506.66 T
(v) 154.35 506.66 T
(er) 159.2 506.66 T
(, the widget creation protocols are f) 166.57 506.66 T
(airly dif) 308.38 506.66 T
(ferent.) 340.07 506.66 T
0 F
(3.1  Compiling with the Gui) 54 476.66 T
1 F
(Y) 54 449.66 T
(ou can get access to the Gui classes by using the -gui option when you compile.  F) 60.12 449.66 T
(or instance:) 389.38 449.66 T
6 8 Q
(cs -main PIZZA_MAIN -gui -o demo) 126 428.99 T
1 10 Q
(F) 54 404.66 T
(or startes there is a b) 59.41 404.66 T
(unch of demonstration programs in) 141.69 404.66 T
5 8 Q
(Libr) 284.73 404.66 T
(ar) 297.99 404.66 T
(y/System/Gui/Demos) 305.34 404.66 T
1 10 Q
(.) 380.47 404.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(File Name) 132 382.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Main Class) 203 382.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(What it does) 284 382.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(pizza.sa) 132 368.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PIZZA_MAIN) 203 368.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Demo with bells and whistles demonstra-) 284 368.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion an ordering tool for pizzas.) 284 357.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(demo1.sa) 132 342.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEMO1) 203 342.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Demo for tags bound to graphical objects.) 284 342.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(demo2.sa) 132 327.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEMO2) 203 327.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(More comple) 284 327.33 T
(x set of windo) 332.11 327.33 T
(ws. \050looks) 383.13 327.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(v) 284 316.33 T
(ery weird\051.) 288.36 316.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(demo_listbo) 132 301.99 T
(x.sa) 174.89 301.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEMO_LISTBO) 203 301.99 T
(X) 259.42 301.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Demonstrates the usage of listbox) 284 301.33 T
(es.) 405.85 301.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(demo_men) 132 286.99 T
(u.sa) 171.94 286.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEMO_MENU) 203 286.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(A small menu.) 284 286.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(demo_te) 132 271.99 T
(xt.sa) 162.89 271.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEMO_TEXT) 203 271.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Demo of insertion and deletion of te) 284 271.33 T
(xt) 414.35 271.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(demo_r) 132 256.99 T
(aster) 159.04 256.99 T
(.sa) 176.42 256.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEMO_RASTER) 203 256.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Cache simulation by Da) 284 256.33 T
(vid S.) 370.56 256.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 395.08 126 249.83 2 L
V
0.5 H
0 Z
N
197 395.58 197 252.83 2 L
V
N
278 395.58 278 252.83 2 L
V
N
440.75 395.08 440.75 252.83 2 L
V
N
443.25 395.08 443.25 250.33 2 L
V
N
125.75 395.33 443.5 395.33 2 L
V
N
125.75 378.33 440.5 378.33 2 L
V
2 H
N
126.25 252.58 441 252.58 2 L
V
0.5 H
N
126.25 250.08 443.5 250.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 207 739.85 T
(s Guide) 228.97 739.85 T
72 726.98 558 726.98 2 L
0.25 H
N
72 75.33 558 75.33 2 L
2 Z
N
(SatherGui) 207 60.29 T
0 10 Q
(3) 527.82 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
(3.2  Star) 72 680.66 T
(ting up) 111.11 680.66 T
1 F
(The Gui pro) 72 664.66 T
(vides it\325) 120.73 664.66 T
(s o) 152.68 664.66 T
(wn main routine. In normal cases the programmer just supplies an initialization routine called) 163.82 664.66 T
(\324init\325, which sets up the windo) 72 652.66 T
(ws and tells which e) 193.41 652.66 T
(v) 274.26 652.66 T
(ent results in a call to which routine.) 279.11 652.66 T
(The standard w) 72 634.66 T
(ay to use the Gui is to include the handy class GUI_UTIL which pro) 133.55 634.66 T
(vides a couple of simple functions to) 406.97 634.66 T
(start up the gui and to enter into the main loop.  A standard gui program will look lik) 72 622.66 T
(e the follo) 411.05 622.66 T
(wing:) 451.35 622.66 T
6 8 Q
(class MAIN is) 144 601.99 T
(    include GUI_UTIL;) 144 591.99 T
(    init is) 144 571.99 T
(        ... create widgets, bind events to routines, etc.) 144 561.99 T
(    end; -- init) 144 551.99 T
(end; -- class MAIN) 144 531.99 T
0 10 Q
(3.3  Creating widg) 72 512.66 T
(ets) 157.68 512.66 T
1 F
( Creation e) 72 496.66 T
(xamples) 115.73 496.66 T
6 8 Q
(c ::= #TK_CANVAS; -- Create a simple canvas) 144 475.99 T
(c ::= #TK_CANVAS\050root_window,TK_CANVAS_CFG::std\051;) 144 465.99 T
(-- when you include GUI_UTIL, root_window is predefined.) 144 455.99 T
(c ::= #TK_CANVAS\050root_window,) 144 445.99 T
(                 CANVAS_CFG::std.height\05050.0\051.width\05050.0\051,) 144 435.99 T
(                 TK_PACK::left\051;) 144 425.99 T
1 10 Q
-0.11 (The abo) 72 409.66 P
-0.11 (v) 104.23 409.66 P
-0.11 (e code fragment creates a can) 109.08 409.66 P
-0.11 (v) 226.13 409.66 P
-0.11 (as that is the left part of the root windo) 230.88 409.66 P
-0.11 (w and does not gro) 384.91 409.66 P
-0.11 (w from its initial size of) 460.32 409.66 P
(50 by 50.  All widgets \050e) 72 397.66 T
(xcept for the root windo) 171.01 397.66 T
(w widget\051 support se) 267.41 397.66 T
(v) 350.76 397.66 T
(eral creation protocols.) 355.61 397.66 T
(Please see also the \336le demo \336les in) 72 261.66 T
5 8 Q
(Libr) 218.1 261.66 T
(ar) 231.36 261.66 T
(y/System/Gui/Demos) 238.71 261.66 T
1 10 Q
( directory) 313.84 261.66 T
(.) 351.79 261.66 T
0 9 Q
(3.3.1  Con\336guration) 72 238.33 T
1 10 Q
(The options to a widget are all b) 72 225.66 T
(undled into a con\336g object, which speci\336es features such as the width, height etc. of the) 200.95 225.66 T
-0.25 (widget.  The con\336guration class for an) 72 213.66 P
-0.25 (y gi) 224.52 213.66 P
-0.25 (v) 239.3 213.66 P
-0.25 (en widget class usually has the name of the widget follo) 244.15 213.66 P
-0.25 (wed by an _CFG.  Y) 465.3 213.66 P
-0.25 (ou) 545.74 213.66 P
-0.21 (can create a \322standard\323 con\336guration object with def) 72 201.66 P
-0.21 (ault v) 281.23 201.66 P
-0.21 (alues, by calling the \322std\323 function on the con\336g class.  Starting) 303.27 201.66 P
(from this standard con\336guration, you can then modify v) 72 189.66 T
(arious parameters such as the width and height.) 295.34 189.66 T
-0.17 (The) 72 162.66 P
5 8 Q
-0.16 (CFG) 89.88 162.66 P
1 10 Q
-0.17 ( classes are implemented using a lar) 106.76 162.66 P
-0.17 (ge partial class) 249.39 162.66 P
5 8 Q
-0.16 (TK_WIDGET_CFG_INCL) 310.8 162.66 P
1 10 Q
-0.17 (, which de\336nes all the standard Tk con-) 401.48 162.66 P
(\336guration options, b) 72 150.66 T
(ut k) 152.64 150.66 T
(eeps them pri) 167.82 150.66 T
(v) 221.45 150.66 T
(ate.  An) 226.2 150.66 T
(y particular widget con\336guration class, such as) 257.43 150.66 T
5 8 Q
(TK_CANV) 447.4 150.66 T
(AS_CFG) 483.66 150.66 T
1 10 Q
( includes) 515.66 150.66 T
-0.26 (this partial class and mak) 72 138.66 P
-0.26 (es the rele) 171.97 138.66 P
-0.26 (v) 211.74 138.66 P
-0.26 (ant options public by renaming them.  Thus, you can tell what options are a) 216.49 138.66 P
-0.26 (v) 514.33 138.66 P
-0.26 (ailable in) 519.08 138.66 P
(a particular con\336guration class by looking at the list of routines that ha) 72 126.66 T
(v) 354.55 126.66 T
(e been renamed to be public.) 359.4 126.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Ar) 150 375.99 T
(guments to create) 158.77 375.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Meaning) 299.98 375.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(None) 150 361.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Plain create with the \324root_windo) 299.98 361.33 T
(w\325 as parent) 420.23 361.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(parent:$TK_WIDGET) 150 346.99 T
(, con\336g:CFG) 225.06 346.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
-0.03 (Specify parent \050containing\051 widget  and con\336guration) 299.98 346.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(parent: $TK_WIDGET) 150 331.99 T
(,) 227.29 331.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pac) 150 317.99 T
(k: TK_P) 162.74 317.99 T
(A) 190.23 317.99 T
(CK) 195.33 317.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Specify parent and packing information) 299.98 331.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(parent: $TK_WIDGET) 150 303.99 T
(,con\336g: CFG,) 227.29 303.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pac) 150 289.99 T
(k: TK_P) 162.74 289.99 T
(A) 190.23 289.99 T
(CK) 195.33 289.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Specify both con\336guration and packing.) 299.98 303.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144 388.08 144 283.83 2 L
V
0.5 H
0 Z
N
293.98 388.58 293.98 286.83 2 L
V
N
499.73 388.08 499.73 286.83 2 L
V
N
502.23 388.08 502.23 284.33 2 L
V
N
143.75 388.33 502.48 388.33 2 L
V
N
143.75 371.33 499.48 371.33 2 L
V
2 H
N
144.25 286.58 499.98 286.58 2 L
V
0.5 H
N
144.25 284.08 502.48 284.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 189 739.85 T
(s Guide) 210.97 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(4) 54 60.29 T
0 9 Q
( of) 59.56 60.29 T
0 10 Q
( 14) 70.56 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
1 10 Q
(Each widget class has a corresponding con\336guration class which can be used to specify v) 54 680.66 T
(arious con\336guration options.) 410.9 680.66 T
0 9 Q
(3.3.2  P) 54 454.33 T
(ac) 84.75 454.33 T
(king) 94.58 454.33 T
1 10 Q
( Ho) 54 441.66 T
(w the widget is located within its parent frame is speci\336ed by the packing widget with the) 68.47 441.66 T
5 8 Q
(TK_P) 429.82 441.66 T
(A) 448.87 441.66 T
(CK) 453.96 441.66 T
1 10 Q
( class. I ha) 465.08 441.66 T
(v) 507.09 441.66 T
(e) 511.94 441.66 T
(attempted to simplify the packing con\336guration options into the follo) 54 429.66 T
(wing sets of possibilities. First of all, each widget) 330.14 429.66 T
(attaches to a particular side \050left right top or bottom\051  of its parent and speci\336es its o) 54 417.66 T
(wn desired width and height \050in its) 389.54 417.66 T
-0.41 (con\336guration options\051.  If the widget should gro) 54 405.66 P
-0.41 (w with the parent then we must specify in which directions it should gro) 243.12 405.66 P
-0.41 (w) 526.74 405.66 P
-0.41 (.) 533.31 405.66 P
(The attached side determines the \322strong\323 dimension along which the widget is guaranteed to gro) 54 393.66 T
(w) 443.13 393.66 T
(, while the other) 449.7 393.66 T
(dimension is a \322weak) 54 381.66 T
(er\323 dimension. The widget may get left o) 139.72 381.66 T
(v) 303.99 381.66 T
(er space in the weak) 308.84 381.66 T
(er dimension..) 389.82 381.66 T
-0.08 (If the widget does not beha) 54 181.66 P
-0.08 (v) 162 181.66 P
-0.08 (e as you wish, I strongly recommend that you read the packing algorithm, either as described) 166.85 181.66 P
(in pack.sa or in the tk man page on the pack) 54 169.66 T
(er) 229.7 169.66 T
(.) 236.92 169.66 T
0 F
(3.4  Events \050TK_EVENT) 54 139.66 T
(,TK_MOUSE_EVENT) 163.79 139.66 T
(,TK_KEY_EVENT\051) 260.23 139.66 T
1 F
(X e) 54 123.66 T
(v) 67.91 123.66 T
(ents are used to trigger v) 72.76 123.66 T
(arious callbacks or other beha) 171.1 123.66 T
(viour by \322binding\323 them to a Sather closure \050also kno) 290.31 123.66 T
(wn as) 504.2 123.66 T
-0.33 (bound routine\051.  Ev) 54 111.66 P
-0.33 (ents are speci\336ed using the) 130.62 111.66 P
5 8 Q
-0.3 (TK_EVENT) 239.21 111.66 P
1 10 Q
-0.33 ( class.  Ev) 280.56 111.66 P
-0.33 (ents in Tcl/Tk are strongly compositonal and consist of) 319.96 111.66 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Widg) 132 658.99 T
(et Class) 151.63 658.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Con\336guration Class) 231 658.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 348 658.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(TK_FRAME) 132 644.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_FRAME_CFG) 231 644.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Frame to hold a collection of sub-widgets) 348 644.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_T) 132 629.99 T
(OPLEVEL) 151.24 629.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_T) 231 629.99 T
(OPLEVEL_CFG) 250.24 629.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(A special frame that is a top le) 348 629.33 T
(v) 457.5 629.33 T
(el windo) 461.87 629.33 T
(w) 492.89 629.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_B) 132 614.99 T
(UTT) 151.93 614.99 T
(ON) 167.16 614.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_B) 231 614.99 T
(UTT) 250.93 614.99 T
(ON_CFG) 266.16 614.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Simple b) 348 614.33 T
(uttons) 380.08 614.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_LABEL) 132 599.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_LABEL_CFG) 231 599.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Labelling widget \050similar to an inacti) 348 599.33 T
(v) 481.52 599.33 T
(e b) 485.88 599.33 T
(utton\051) 496.45 599.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_TEXT) 132 584.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_TEXT_CFG) 231 584.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 348 584.33 T
(e) 352.87 584.33 T
(xt widget with optinoal scrollbars) 356.73 584.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CANV) 132 569.99 T
(AS) 168.26 569.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_CANV) 231 569.99 T
(AS_CFG) 267.26 569.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Can) 348 569.33 T
(v) 362.14 569.33 T
(as widget with optional scrollbars) 366.41 569.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_LISTBO) 132 554.99 T
(X) 174.65 554.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_LISTBO) 231 554.99 T
(X_CFG) 273.65 554.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Listbox \050standard form has v) 348 554.33 T
(ertical scrollbar\051) 451.85 554.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_MENU) 132 539.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_MENU_CFG) 231 539.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Menus \050can be cascaded\051. No packing needed!) 348 539.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_MENUB) 132 524.99 T
(UTT) 175.48 524.99 T
(ON) 190.71 524.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_MENUB) 231 524.99 T
(UTT) 274.48 524.99 T
(ON_CFG) 289.71 524.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Buttons associated with menus) 348 524.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_ENTR) 132 509.99 T
(Y) 168.05 509.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_ENTR) 231 509.99 T
(Y_CFG) 267.05 509.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(W) 348 509.33 T
(idget for entering te) 356.14 509.33 T
(xt.) 427.24 509.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_RADIO) 132 494.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_RADIO_CFG) 231 494.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Radio b) 348 494.33 T
(uttons) 376.07 494.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK) 132 479.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_CHECK_CFG) 231 479.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Check b) 348 479.33 T
(uttons) 377.57 479.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(P) 132 359.99 T
(ac) 137.1 359.99 T
(ker con\336guration) 145.83 359.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 231 359.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(left) 132 345.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(P) 231 345.33 T
(ack object to the left, don\325) 235.87 345.33 T
(t let it gro) 330.19 345.33 T
(w to occup) 365.22 345.33 T
(y space) 404.62 345.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(r) 132 330.99 T
(ight,top) 134.78 330.99 T
(,bot) 160.74 330.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(P) 231 330.33 T
(ack object to the right, top or bottom,  similar to abo) 235.87 330.33 T
(v) 423.98 330.33 T
(e) 428.34 330.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(left_g) 132 315.99 T
(ro) 151.49 315.99 T
(w_v) 158.48 315.99 T
(er) 172.5 315.99 T
(t) 179.94 315.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Attach widget to the left and let it gro) 231 315.33 T
(w strongly in the v) 366.26 315.33 T
(ertical dimension) 433.63 315.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(r) 132 300.99 T
(ight_g) 134.78 300.99 T
(ro) 156.5 300.99 T
(w_v) 163.49 300.99 T
(er) 177.51 300.99 T
(t) 184.94 300.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Attach to the right and let it gro) 231 300.33 T
(w strongly in the v) 344.52 300.33 T
(ertical dimension) 411.88 300.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(top_g) 132 285.99 T
(ro) 151.94 285.99 T
(w_hor) 158.93 285.99 T
(iz) 180.83 285.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Attach to the top and let the widget gro) 231 285.33 T
(w strongly in the horizontal dimension) 371.76 285.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(bot_g) 132 270.99 T
(ro) 151.94 270.99 T
(w_hor) 158.93 270.99 T
(iz) 180.83 270.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Similar to the abo) 231 270.33 T
(v) 295.12 270.33 T
(e) 299.48 270.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(left_n_g) 132 255.99 T
(ro) 160.38 255.99 T
(w_hor) 167.38 255.99 T
(iz) 189.28 255.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Attach to the left and let the widget gro) 231 255.33 T
(w \050weakly\051 in the horizontal dimension) 372.26 255.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(top_n_g) 132 240.99 T
(ro) 160.83 240.99 T
(w_v) 167.82 240.99 T
(er) 181.85 240.99 T
(t) 189.28 240.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Lik) 231 240.33 T
(e) 243.41 240.33 T
(wise with) 247.18 240.33 T
5 8 Q
(bot_n_g) 284.18 240.33 T
(ro) 313.01 240.33 T
(w_v) 320.01 240.33 T
(er) 334.03 240.33 T
(t) 341.46 240.33 T
1 9 Q
( and) 343.68 240.33 T
5 8 Q
(r) 361.18 240.33 T
(ight_n_g) 363.96 240.33 T
(ro) 394.57 240.33 T
(w_hor) 401.57 240.33 T
(iz) 423.47 240.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(left_g) 132 225.99 T
(ro) 151.49 225.99 T
(w_v) 158.48 225.99 T
(er) 172.5 225.99 T
(t_n_hor) 179.94 225.99 T
(iz) 207.18 225.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Attach to the left, gro) 231 225.33 T
(w strongly v) 308.01 225.33 T
(ertically and weakly horizontally) 352.88 225.33 T
(.) 471.02 225.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(top_g) 132 210.99 T
(ro) 151.94 210.99 T
(w_hor) 158.93 210.99 T
(iz_n_v) 180.83 210.99 T
(er) 203.75 210.99 T
(t) 211.18 210.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Lik) 231 210.33 T
(e) 243.41 210.33 T
(wise with) 247.18 210.33 T
5 8 Q
(bot_g) 284.18 210.33 T
(ro) 304.12 210.33 T
(w_hor) 311.11 210.33 T
(iz_n_v) 333.01 210.33 T
(er) 355.93 210.33 T
(t) 363.36 210.33 T
1 9 Q
( and) 365.59 210.33 T
5 8 Q
(top_g) 383.08 210.33 T
(ro) 403.02 210.33 T
(w_v) 410.01 210.33 T
(er) 424.04 210.33 T
(t_n_hor) 431.47 210.33 T
(iz) 458.72 210.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 671.08 126 472.83 2 L
V
0.5 H
0 Z
N
225 671.58 225 475.83 2 L
V
2 H
N
342 671.58 342 475.83 2 L
V
0.5 H
N
526.73 671.08 526.73 475.83 2 L
V
N
529.23 671.08 529.23 473.33 2 L
V
N
125.75 671.33 529.48 671.33 2 L
V
N
125.75 654.33 526.48 654.33 2 L
V
2 H
N
126.25 475.58 526.98 475.58 2 L
V
0.5 H
N
126.25 473.08 529.48 473.08 2 L
V
N
126 372.08 126 203.83 2 L
V
N
223.75 372.08 223.75 206.83 2 L
V
N
226.25 372.08 226.25 206.83 2 L
V
N
538.75 372.08 538.75 206.83 2 L
V
N
541.25 372.08 541.25 204.33 2 L
V
N
125.75 372.33 541.5 372.33 2 L
V
N
125.75 355.33 538.5 355.33 2 L
V
N
126.25 206.58 539 206.58 2 L
V
N
126.25 204.08 541.5 204.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 207 739.85 T
(s Guide) 228.97 739.85 T
72 726.98 558 726.98 2 L
0.25 H
N
72 75.33 558 75.33 2 L
2 Z
N
(SatherGui) 207 60.29 T
0 10 Q
(5) 527.82 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
1 F
-0.1 (se) 72 680.66 P
-0.1 (v) 80.08 680.66 P
-0.1 (eral components which can be combined in arbitrary w) 84.93 680.66 P
-0.1 (ays. The components of the e) 303.98 680.66 P
-0.1 (v) 420.44 680.66 P
-0.1 (ent are speci\336ed using objects of) 425.29 680.66 P
(dif) 72 668.66 T
(ferent types - the types enforce the constraints in the manner in which the e) 82.86 668.66 T
(v) 383.1 668.66 T
(ents may be combined.) 387.95 668.66 T
(Ev) 72 641.66 T
(ents are of three types - generic e) 82.96 641.66 T
(v) 215.16 641.66 T
(ents, mouse clicks and b) 220.01 641.66 T
(utton e) 317.3 641.66 T
(v) 344.55 641.66 T
(ents.   Each e) 349.4 641.66 T
(v) 402.19 641.66 T
(ent has v) 407.04 641.66 T
(arious forms and each form) 442.34 641.66 T
(can ha) 72 629.66 T
(v) 97.62 629.66 T
(e an optional \322detail\323 \336eld that more precisely speci\336es the kind of e) 102.47 629.66 T
(v) 376.62 629.66 T
(ent, such as which mouse b) 381.47 629.66 T
(utton should be) 490.7 629.66 T
(pressed or which k) 72 617.66 T
(e) 147.16 617.66 T
(yboard character should be typed) 151.45 617.66 T
(Each e) 72 455.66 T
(v) 98.68 455.66 T
(ent can ha) 103.53 455.66 T
(v) 143.87 455.66 T
(e one of a set of e) 148.72 455.66 T
(v) 219 455.66 T
(ent modi\336ers - conditions that must be true for the e) 223.85 455.66 T
(v) 431.36 455.66 T
(ent to trigger) 436.21 455.66 T
(.  The e) 487.32 455.66 T
(v) 517.06 455.66 T
(ent mod-) 521.91 455.66 T
(i\336ers are) 72 443.66 T
3 11 Q
(\245) 72 424.99 T
4 10 Q
(Contr) 91.8 424.99 T
(ol, Meta, Shift, Alt, Caps_loc) 114.69 424.99 T
(k) 230.61 424.99 T
1 F
( which indicate that that k) 235.05 424.99 T
(e) 338.55 424.99 T
(yboard must be held do) 342.84 424.99 T
(wn during the e) 436.47 424.99 T
(v) 498.71 424.99 T
(ent.) 503.56 424.99 T
3 11 Q
-0.54 (\245) 72 408.99 P
4 10 Q
-0.2 (Mouse_1, Mouse_2, Mouse_3) 90.73 408.99 P
1 F
-0.2 (which indicate that the corresponding mouse b) 212.6 408.99 P
-0.2 (utton must be depressed for the e) 397.82 408.99 P
-0.2 (v) 528.55 408.99 P
-0.2 (ent to) 533.41 408.99 P
(trigger) 122.4 396.66 T
(.) 148.51 396.66 T
3 11 Q
(\245) 72 380.99 T
4 10 Q
(Double) 91.8 380.99 T
(, T) 121.14 380.99 T
(riple) 131.15 380.99 T
1 F
(which means that the e) 152.54 380.99 T
(v) 243.94 380.99 T
(ent must occur twice or three times quickly for the e) 248.79 380.99 T
(v) 457.39 380.99 T
(ent to trigger) 462.24 380.99 T
2 F
(Please the Tk man page on \322bind\323 f) 72 210.66 T
(or mor) 223.71 210.66 T
(e details) 253.24 210.66 T
1 F
(.) 287.96 210.66 T
(The) 72 183.66 T
5 8 Q
(GUI_UTIL) 90.05 183.66 T
1 10 Q
( pro) 126.06 183.66 T
(vides some basic e) 141.74 183.66 T
(v) 216.2 183.66 T
(ents lik) 221.05 183.66 T
(e) 250.12 183.66 T
5 8 Q
(quit_routine) 257.06 183.66 T
1 10 Q
(.) 298.86 183.66 T
0 F
(3.5  Can) 72 153.66 T
(v) 109.95 153.66 T
(as widg) 115.31 153.66 T
(et \050TK_CANV) 152.09 153.66 T
(AS\051) 213.51 153.66 T
1 F
(The Tk can) 72 137.66 T
(v) 117.14 137.66 T
(as widget is an e) 121.89 137.66 T
(xtremely v) 187.84 137.66 T
(erstaile dra) 230.74 137.66 T
(wing tool. The Sather) 274.74 137.66 T
5 8 Q
(TK_CANV) 363.9 137.66 T
(AS) 400.16 137.66 T
1 10 Q
( consists of an outer frame with) 410.83 137.66 T
(optional scroll bars, along with a Tk can) 72 125.66 T
(v) 232.69 125.66 T
(as widget.  Since we don\325) 237.44 125.66 T
(t \050yet\051 pro) 340.02 125.66 T
(vide direct access to Tk scrollbars, this) 379.86 125.66 T
(arrangement is more con) 72 113.66 T
(v) 170.74 113.66 T
(enient.) 175.59 113.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Class) 150 595.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Cr) 241 595.99 T
(eation Routines) 250.18 595.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Optional Detail) 349 595.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 418 595.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(TK_EVENT) 150 581.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Motion) 241 581.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(None) 349 581.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Mouse motion) 418 581.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(Widget_enter) 241 566.99 T
(, Lea) 288.18 566.99 T
(v) 305.81 566.99 T
(e) 309.61 566.99 T
(,) 313.94 566.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Destro) 241 556.99 T
(y) 264.32 556.99 T
(,Visibility) 267.52 556.99 T
(,Expose) 297.83 556.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(None) 349 566.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_B) 150 542.99 T
(UTT) 169.93 542.99 T
(ON_EVENT) 185.16 542.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Press) 241 542.99 T
1 F
( or) 261.45 542.99 T
5 F
(Release) 272.11 542.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(plus\050b) 349 542.99 T
(utton\051) 370.62 542.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Mouse clicks) 418 542.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(B1, B2, B3) 241 527.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(None) 349 527.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Shorthand for mouse clicks) 418 527.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_KEY_EVENT) 150 512.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Press) 241 512.99 T
1 F
( or) 261.45 512.99 T
5 F
(Release) 272.11 512.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(plus\050char\051) 349 512.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(K) 418 512.33 T
(e) 424.27 512.33 T
(yboard k) 428.13 512.33 T
(e) 459.79 512.33 T
(y) 463.65 512.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(Retur) 241 497.99 T
(n, Bac) 260.76 497.99 T
(kspace) 283.28 497.99 T
(,T) 308.5 497.99 T
(ab) 314.66 497.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Linef) 241 483.99 T
(eed,Up) 258.1 483.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(None) 349 497.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Short forms for special k) 418 497.33 T
(e) 507.4 497.33 T
(ys) 511.26 497.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Example) 150 358.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 294 358.99 T
(rig) 298.25 358.99 T
(g) 308.39 358.99 T
(er) 313.36 358.99 T
(s when:) 320.8 358.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(TK_EVENT) 150 344.99 T
(::Widget_enter) 191.18 344.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(The rele) 294 344.33 T
(v) 323.51 344.33 T
(ant widget is entered) 327.79 344.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_B) 150 329.99 T
(UTT) 169.93 329.99 T
(ON_EVENT) 185.16 329.99 T
(::Press+1) 228.12 329.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Mouse b) 294 329.33 T
(utton 1 is pressed) 325.07 329.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_B) 150 314.99 T
(UTT) 169.93 314.99 T
(ON_EVENT) 185.16 314.99 T
(::B1) 228.12 314.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
-0.13 (Short hand - mouse click with b) 294 314.33 P
-0.13 (utton 1 \050use this v) 408.04 314.33 P
-0.13 (ersion usually\051) 471.89 314.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_B) 150 299.99 T
(UTT) 169.93 299.99 T
(ON_EVENT) 185.16 299.99 T
(::B1.Doub) 228.12 299.99 T
(le) 263.54 299.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Double click with mouse b) 294 299.33 T
(utton 1) 390.81 299.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_KEY_EVENT) 150 284.99 T
(::Press+\325c\325) 211.64 284.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 294 284.33 T
(ype  the k) 298.78 284.33 T
(e) 333.93 284.33 T
(yboard character \324c\325) 337.79 284.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_KEY_EVENT) 150 269.99 T
(::Press) 211.64 269.99 T
(.Alt+\325c\325) 236.42 269.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 294 269.33 T
(ype Alt and the character \324c\325) 298.78 269.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_KEY_EVENT) 150 254.99 T
(::Retur) 211.64 254.99 T
(n) 235.85 254.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 294 254.33 T
(ype return) 298.78 254.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_KEY_EVENT) 150 239.99 T
(::Retur) 211.64 239.99 T
(n.Alt) 235.85 239.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 294 239.33 T
(ype return while holding do) 298.78 239.33 T
(wn the AL) 398.54 239.33 T
(T k) 436.21 239.33 T
(e) 448.37 239.33 T
(y) 452.23 239.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144 608.08 144 477.83 2 L
V
0.5 H
0 Z
N
235 608.58 235 480.83 2 L
V
2 H
N
343 608.58 343 480.83 2 L
V
0.5 H
N
412 608.58 412 480.83 2 L
V
N
524.75 608.08 524.75 480.83 2 L
V
N
527.25 608.08 527.25 478.33 2 L
V
N
143.75 608.33 527.5 608.33 2 L
V
N
143.75 591.33 524.5 591.33 2 L
V
N
143.75 552.33 524.5 552.33 2 L
V
N
143.75 522.33 524.5 522.33 2 L
V
N
144.25 480.58 525 480.58 2 L
V
N
144.25 478.08 527.5 478.08 2 L
V
N
144 371.08 144 232.83 2 L
V
N
288 371.58 288 235.83 2 L
V
N
529.75 371.08 529.75 235.83 2 L
V
N
532.25 371.08 532.25 233.33 2 L
V
N
143.75 371.33 532.5 371.33 2 L
V
N
143.75 354.33 529.5 354.33 2 L
V
N
144.25 235.58 530 235.58 2 L
V
N
144.25 233.08 532.5 233.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 189 739.85 T
(s Guide) 210.97 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(6) 54 60.29 T
0 9 Q
( of) 59.56 60.29 T
0 10 Q
( 14) 70.56 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
(3.5.1  Creation) 54 681.33 T
6 8 Q
(c ::= #TK_CANVAS;) 126 659.99 T
(c.draw_line\0500.0,0.0,10.0,10.0\051;) 126 649.99 T
(c.draw_text\050\322test\323,3.0,3.0\051;) 126 639.99 T
1 10 Q
(This will create a line and dra) 54 623.66 T
(w te) 172.71 623.66 T
(xt at the speci\336ed location. Locations are pix) 189.5 623.66 T
(el locations, with 0,0 being the upper left) 368.77 623.66 T
(corner) 54 611.66 T
(.) 78.99 611.66 T
0 9 Q
(3.5.2  Con\336guring and ta) 54 588.33 T
(g) 158.93 588.33 T
(ging items) 164.34 588.33 T
1 10 Q
(Lines and other can) 54 575.66 T
(v) 132.19 575.66 T
(as items may be con\336gured and tagged. Can) 136.94 575.66 T
(v) 313.18 575.66 T
(as tags are of the class) 317.93 575.66 T
5 8 Q
(TK_CT) 409.57 575.66 T
(A) 433.95 575.66 T
(G) 439.04 575.66 T
6 F
(my_line_) 126 554.99 T
(tag ::= #TK_CTAG; -- Canvas tag) 164.4 554.99 T
(config ::= TK_LINE_CFG::std.fill_color\050\322blue\323\051;) 126 544.99 T
(c.draw_line\0500.0,0.0,10.0,10.0,|my_line_tag|,config\051;) 126 534.99 T
1 10 Q
(Can) 54 518.66 T
(v) 69.71 518.66 T
(as items, lik) 74.46 518.66 T
(e standard widgets, each ha) 122.42 518.66 T
(v) 231.91 518.66 T
(e a con\336guration class which may be used to specify v) 236.76 518.66 T
(arious con\336guration) 454.25 518.66 T
(options which can be later changed:) 54 506.66 T
(Can) 54 381.66 T
(v) 69.71 381.66 T
(as items ha) 74.46 381.66 T
(v) 118.7 381.66 T
(e the follo) 123.55 381.66 T
(wing routines - a plain item creation routine, item creation along with con\336guration and tag) 163.85 381.66 T
(speci\336cation and item recon\336guration. F) 54 369.66 T
(or e) 215.78 369.66 T
(xample:) 230.9 369.66 T
6 8 Q
(draw_text\050text: STR, atx,aty: FLT\051;) 126 348.99 T
(draw_text\050text:STR,atx,aty: FLT,tags: ARRAY{TK_CTAG},config: TK_CTEXT_CFG\051) 126 338.99 T
(text_configure\050tag: TK_CTAG, config: TK_CTEXT_CFG\051;) 126 328.99 T
1 10 Q
(Just as with standard widget con\336guration classes, item con\336guration classes pro) 54 302.66 T
(vide a \322std\323 creation routine which) 377.43 302.66 T
(returns a useful set of def) 54 290.66 T
(aults.) 155.26 290.66 T
0 9 Q
(3.5.3  Setting up a can) 54 267.33 T
(v) 148.18 267.33 T
(as callbac) 153 267.33 T
(k) 195.85 267.33 T
1 10 Q
(The goal is to call function \322do_something\323 when you click on the line.Y) 54 239.66 T
(ou must \336rst associate a tag with the item. Ne) 346.48 239.66 T
(w) 528.44 239.66 T
(tags are created by a creating a) 54 227.66 T
5 8 Q
(TK_CT) 179.78 227.66 T
(A) 204.16 227.66 T
(G) 209.25 227.66 T
1 10 Q
(. F) 215.48 227.66 T
(or those of you f) 225.89 227.66 T
(amiliar with Tcl/Tk, each ne) 291.89 227.66 T
(w) 405.23 227.66 T
5 8 Q
(TK_CT) 414.95 227.66 T
(A) 439.32 227.66 T
(G) 444.42 227.66 T
1 10 Q
( corresponds to a) 450.64 227.66 T
(unique string.) 54 215.66 T
6 8 Q
(my_line_) 126 194.99 T
(tag ::= #TK_CTAG; -- Canvas tag) 164.4 194.99 T
(config ::= TK_LINE_CFG::std.fill_color\050\322blue\323\051;) 126 184.99 T
(c.draw_line\0500.0,0.0,10.0,10.0,|my_line_tag|,config\051;) 126 174.99 T
(c.item_bind\050TK_BUTTON_EVENT::B1,-- Event is a button 1 press) 126 164.99 T
(   my_line_tag,            -- For items tagged my_line_tag) 126 154.99 T
(   bind\050do_something\050_\051\051\051 -- Trigger this rotuine) 126 144.99 T
1 10 Q
(And here\325) 54 128.66 T
(s the actual callback routine:) 93.71 128.66 T
6 8 Q
(    do_something\050a: TK_CANVAS_CB\051 is) 126 107.99 T
(        -- Canvas callbacks get an argument of type CANVAS_CB) 126 97.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Item type) 132 484.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(CFGuration c) 231 484.99 T
(lass) 281.51 484.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 339 484.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Lines) 132 470.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_LINE_CFG) 231 470.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Lines, including lines with arro) 339 470.33 T
(ws and splines) 451.52 470.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Rectangles) 132 455.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_RECT_CFG) 231 455.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Rectangles) 339 455.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Ov) 132 440.33 T
(als) 142.77 440.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_O) 231 440.99 T
(V) 251.5 440.99 T
(AL_CFG) 256.19 440.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Circles and other o) 339 440.33 T
(v) 407.1 440.33 T
(als) 411.38 440.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Embedded windo) 132 425.33 T
(ws) 195.02 425.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CWIND_CFG) 231 425.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Arbitrary embedded windo) 339 425.33 T
(ws) 436.25 425.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 132 410.33 T
(e) 136.87 410.33 T
(xt) 140.73 410.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CTEXT_CFG) 231 410.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Embedded te) 339 410.33 T
(xt in the can) 386.11 410.33 T
(v) 429.99 410.33 T
(as) 434.27 410.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 497.08 126 403.83 2 L
V
0.5 H
0 Z
N
225 497.58 225 406.83 2 L
V
N
333 497.58 333 406.83 2 L
V
N
517.73 497.08 517.73 406.83 2 L
V
N
520.23 497.08 520.23 404.33 2 L
V
N
125.75 497.33 520.48 497.33 2 L
V
N
125.75 480.33 517.48 480.33 2 L
V
N
126.25 406.58 517.98 406.58 2 L
V
N
126.25 404.08 520.48 404.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 207 739.85 T
(s Guide) 228.97 739.85 T
72 726.98 558 726.98 2 L
0.25 H
N
72 75.33 558 75.33 2 L
2 Z
N
(SatherGui) 207 60.29 T
0 10 Q
(7) 527.82 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
6 8 Q
(        -- Please look at the class CANVAS_CB to see the information) 144 681.99 T
(        -- provided to the callback routine.) 144 671.99 T
(       #OUT+\323Reached here!\323;) 144 661.99 T
(   end;) 144 651.99 T
0 10 Q
(3.6  T) 72 632.66 T
(e) 96.97 632.66 T
(xt widg) 102.38 632.66 T
(ets \050TK_TEXT\051) 136.93 632.66 T
1 F
(T) 72 616.66 T
(e) 77.41 616.66 T
(xt widgets are slightly dif) 81.7 616.66 T
(ferent from the standard Tk te) 183.67 616.66 T
(xt widgets - the) 303.21 616.66 T
(y contain an outer frame with \050optional\051 scroll-) 365 616.66 T
(bars in addition to the te) 72 604.66 T
(xt widget itself. It is possible to access the Tk te) 168.79 604.66 T
(xt widget itself, if that is necessary) 360.57 604.66 T
(.) 499.07 604.66 T
0 9 Q
(3.6.1  Creation) 72 581.33 T
6 8 Q
(t ::= #TK_TEXT;) 144 559.99 T
(t+\323test1\323;) 144 549.99 T
1 10 Q
-0.15 (The plus routine basically appends te) 72 533.66 P
-0.15 (xt to the end of the te) 219.71 533.66 P
-0.15 (xt widget. Scroll bars may also be speci\336ed or a) 303.67 533.66 P
-0.15 (v) 493.78 533.66 P
-0.15 (oided. The fol-) 498.58 533.66 P
(lo) 72 521.66 T
(wing line creates a te) 79.53 521.66 T
(xt windo) 163.8 521.66 T
(w with no v) 198.83 521.66 T
(ertical scroll bar:) 246.18 521.66 T
6 8 Q
(t ::= #TK_TEXT\050root_window, TK_TEXT_CFG::std.vscroll\050false\051\051;) 144 500.99 T
0 9 Q
(3.6.2  Specifying te) 72 478.33 T
(xt at a par) 152.9 478.33 T
(ticular location) 195.6 478.33 T
1 10 Q
(Y) 72 465.66 T
(ou can specify te) 78.12 465.66 T
(xt at a particular location in a te) 145.45 465.66 T
(xt widget by using) 272.22 465.66 T
5 8 Q
(TK_INDEX) 348.89 465.66 T
1 10 Q
( to indicate te) 388.01 465.66 T
(xt locations) 442.02 465.66 T
6 8 Q
(t.insert_at\050TK_INDEX::at\05010,1\051,\323My insertion at 10,1\323\051;) 144 444.99 T
(t.delete\050TK_INDEX::at\05011,2\051,TK_INDEX::at\05011,10\051\051;) 144 434.99 T
1 10 Q
(TK_INDEX has the follo) 72 418.66 T
(wing protocol:) 173.12 418.66 T
(T) 72 282.66 T
(e) 77.41 282.66 T
(xt indices may also ha) 81.7 282.66 T
(v) 170.38 282.66 T
(e modi\336ers such as) 175.23 282.66 T
5 8 Q
(f) 254.11 282.66 T
(orw) 256.09 282.66 T
(ard_chars\050i: INT\051, bac) 268.86 282.66 T
(kw) 346.05 282.66 T
(ard_chars) 355.71 282.66 T
(, f) 391.16 282.66 T
(orw) 397.59 282.66 T
(ard_lines) 410.36 282.66 T
(,bac) 442.69 282.66 T
(kw) 457.65 282.66 T
(ard_lines) 467.31 282.66 T
(,line_star) 499.65 282.66 T
(t,) 532.42 282.66 T
(line_end, w) 72 270.66 T
(ord_star) 112.38 270.66 T
(t) 142.05 270.66 T
1 10 Q
( and) 144.27 270.66 T
5 8 Q
(w) 163.71 270.66 T
(ord_end) 169.41 270.66 T
1 10 Q
(.) 198.76 270.66 T
(F) 72 243.66 T
(or e) 77.41 243.66 T
(xample:) 92.53 243.66 T
6 8 Q
(TK_INDEX::at\05010,10\051.word_end;   -- End of word located at line 10, char 10) 144 222.99 T
(TK_INDEX::mark.line_start; -- Beginning of the line with the current mark) 144 212.99 T
0 9 Q
(3.6.3  T) 72 190.33 T
(e) 101.98 190.33 T
(xt ta) 106.85 190.33 T
(gs) 125.26 190.33 T
1 10 Q
-0.19 (T) 72 177.66 P
-0.19 (ags \050of type) 77.31 177.66 P
5 8 Q
-0.17 (TK_TEXT_T) 126.44 177.66 P
-0.17 (A) 169.94 177.66 P
-0.17 (G) 175.04 177.66 P
1 10 Q
-0.19 (\051 may be used to mark certain portions of te) 181.26 177.66 P
-0.19 (xt which may then be manipulated in v) 354.07 177.66 P
-0.19 (arious w) 508.3 177.66 P
-0.19 (ays.) 542.17 177.66 P
0 F
(3.7  Windo) 72 147.66 T
(w mana) 121.86 147.66 T
(g) 158.44 147.66 T
(er interface \050TK_WINDO) 164.65 147.66 T
(W_MGR\051) 277.5 147.66 T
1 F
(Some of the windo) 72 131.66 T
(w functionality is not part of an) 147.58 131.66 T
(y Tk widget. These calls are being handeled by the) 273.53 131.66 T
5 8 Q
(TK_WINDO) 479.32 131.66 T
(W_MGR) 521.3 131.66 T
1 10 Q
(class. Currently one can only set the title of a windo) 72 119.66 T
(w with it.) 279.78 119.66 T
6 8 Q
(TK_WINDOW_MGR::title\050tplevel_widget,\323Title\323\051;) 144 98.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Location speci\336cation) 150 396.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Meaning) 276 396.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(at\050line) 150 382.99 T
(,char) 171.66 382.99 T
(: INT\051) 189.69 382.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
-0.19 (Location at line \322line\323 \050starting from 1\051 and character \322char\323 \050start-) 276 382.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ing from 0\051) 276 371.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(end_pos) 150 356.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Last location in the te) 276 356.33 T
(xt) 353.86 356.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(\336rst\050tag: TK_TEXT_T) 150 341.99 T
(A) 224.62 341.99 T
(G\051) 229.71 341.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Location of \336rst character associated with a gi) 276 341.33 T
(v) 441.99 341.33 T
(en tag) 446.35 341.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(last\050tag:TK_ TEXT_T) 150 326.99 T
(A) 224.18 326.99 T
(G\051) 229.27 326.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Location of last character associated with a gi) 276 326.33 T
(v) 440.48 326.33 T
(en tag) 444.85 326.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(mar) 150 311.99 T
(k) 163.9 311.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Current location of the insert cursor) 276 311.33 T
(.) 404.23 311.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144 409.08 144 304.83 2 L
V
0.5 H
0 Z
N
270 409.58 270 307.83 2 L
V
N
520.75 409.08 520.75 307.83 2 L
V
N
523.25 409.08 523.25 305.33 2 L
V
N
143.75 409.33 523.5 409.33 2 L
V
N
143.75 392.33 520.5 392.33 2 L
V
N
144.25 307.58 521 307.58 2 L
V
N
144.25 305.08 523.5 305.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(User\325) 189 739.85 T
(s Guide) 210.97 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(8) 54 60.29 T
0 9 Q
( of) 59.56 60.29 T
0 10 Q
( 14) 70.56 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
0 10 Q
(3.8  Tk V) 54 662.66 T
(ariab) 93.98 662.66 T
(les \050TK_V) 117.78 662.66 T
(AR\051) 162.55 662.66 T
1 F
(Tk supports v) 54 646.66 T
(ariables which can be connected to particular widgets. The adv) 108.75 646.66 T
(antage of these ag) 360.1 646.66 T
(ains normal Sather v) 431.97 646.66 T
(ari-) 514.21 646.66 T
-0.31 (ables is that that Tk notices changes to them and updates the in) 54 634.66 P
-0.31 (v) 301.58 634.66 P
-0.31 (olv) 306.38 634.66 P
-0.31 (ed widget automatically) 319.01 634.66 P
-0.31 (. The) 413.85 634.66 P
5 8 Q
-0.27 (TK_RADIO) 436.29 634.66 P
1 10 Q
-0.31 ( and) 476.3 634.66 P
5 8 Q
-0.27 (TK_CHECK) 495.13 634.66 P
1 10 Q
(classes tahe hea) 54 622.66 T
(vy isage of them.) 117.11 622.66 T
0 F
(3.9  Chec) 54 592.66 T
(k b) 97.71 592.66 T
(uttons widg) 111.96 592.66 T
(et \050TK_CHECK\051) 168.17 592.66 T
1 F
-0.11 (A check b) 54 576.66 P
-0.11 (utton is a b) 94.13 576.66 P
-0.11 (utton which can be selected or deselected. The user can link a) 137.77 576.66 P
5 8 Q
-0.09 (TK_V) 385.59 576.66 P
-0.09 (AR) 404.95 576.66 P
1 10 Q
-0.11 ( to the check b) 416.07 576.66 P
-0.11 (utton so that the) 473.76 576.66 P
(v) 54 564.66 T
(alue of the b) 58.75 564.66 T
(utton get updated when the status of the b) 108.26 564.66 T
(utton changes.) 274.71 564.66 T
0 F
(3.10  Radio b) 54 395.66 T
(utton widg) 115.49 395.66 T
(et \050TK_RADIO\051) 166.14 395.66 T
1 F
(In opposite to the check b) 54 379.66 T
(uttons multiple radio b) 156.84 379.66 T
(uttons can share the same) 247.48 379.66 T
5 8 Q
(TK_V) 352.18 379.66 T
(AR) 371.55 379.66 T
1 10 Q
(. Only one of the radio b) 382.66 379.66 T
(uttons can be) 480.5 379.66 T
(selected at a time. The associated v) 54 367.66 T
(ariable has the v) 194.55 367.66 T
(alue associated to this radio b) 259.56 367.66 T
(utton.) 377.4 367.66 T
0 F
(3.11  Deb) 54 206.66 T
(ug) 97.71 206.66 T
(ging the interface) 109.83 206.66 T
1 F
-0.05 (If you really w) 54 179.66 P
-0.05 (ant to kno) 112.89 179.66 P
-0.05 (w what happenes between the Tk and Sather side of the program you can force the Sather Gui to) 152.52 179.66 P
(print the messages running between them. This can be done by setting the Tk v) 54 167.66 T
(ariables in the Tcl \336les in) 370.1 167.66 T
5 8 Q
(SA) 473.98 167.66 T
(THER_HOME/) 483.69 167.66 T
(System/Platf) 54 155.66 T
(or) 98.66 155.66 T
(m/gui/TclCode) 105.98 155.66 T
1 10 Q
(. One can set the follo) 157.54 155.66 T
(wing Tk v) 245.05 155.66 T
(ariables:) 285.91 155.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Acces r) 137.5 542.99 T
(outines) 166.24 542.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 288.5 542.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(TK_CHECK_CFG::v) 137.5 528.99 T
(ar) 209.76 528.99 T
(iab) 216.99 528.99 T
(le\050v:TK_V) 227.5 528.99 T
(AR\051) 261.98 528.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
-0.01 (Associate the v) 288.5 528.33 P
-0.01 (ariable v with the check b) 343.25 528.33 P
-0.01 (utton.) 435.75 528.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK_CFG::on_v) 137.5 513.99 T
(alue\050s:STR\051) 223.1 513.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Associate a v) 288.5 513.33 T
(alue when selected.) 336.26 513.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK_CFG::off_v) 137.5 498.99 T
(alue\050s:STR\051) 223.1 498.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Assocuate a v) 288.5 498.33 T
(alue when deselected.) 338.26 498.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK::select) 137.5 483.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Select the b) 288.5 483.33 T
(utton) 330.31 483.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK::deselect) 137.5 468.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Unselect the b) 288.5 468.33 T
(utton) 339.81 468.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK::toggle) 137.5 453.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Switch between selected and deselected.) 288.5 453.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(TK_CHECK::command\050r) 137.5 438.99 T
(:R) 225.31 438.99 T
(OUT\051) 233.15 438.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Associate an action for when the b) 288.5 438.33 T
(utton is) 412.79 438.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(being toggled.) 288.5 427.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Routine) 141.5 345.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 302.5 345.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(TK_RADIO_CFG::v) 141.5 331.33 T
(ariable\050v:TK_V) 217.77 331.33 T
(AR\051) 274.04 331.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Associate a v) 302.5 331.33 T
(ariable with the radio b) 350.26 331.33 T
(utton) 433.57 331.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_RADIO_CFG::v) 141.5 316.33 T
(al\050v:STR\051) 217.77 316.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Associate a v) 302.5 316.33 T
(alue for the v) 350.26 316.33 T
(ariable) 397.77 316.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_RADIO::select) 141.5 301.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (Select the radio b) 302.5 301.33 P
-0.11 (utton. Deselect all other) 364.72 301.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(readio b) 302.5 290.33 T
(uttons associated to the same) 331.56 290.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(v) 302.5 279.33 T
(ariable.) 306.77 279.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_RADIO::deselect) 141.5 264.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Delselect the radtio b) 302.5 264.33 T
(utton.) 379.05 264.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TK_RADIO::command\050r:R) 141.5 249.33 T
(OUT\051) 241.13 249.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.44 (Associate an action when the radio b) 302.5 249.33 P
-0.44 (utton) 432.18 249.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is selected.) 302.5 238.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Fla) 132 133.99 T
(g name) 143.48 133.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(In \336le) 201 133.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Action) 290 133.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(ser) 132 119.99 T
(v) 143.35 119.99 T
(er_deb) 147.15 119.99 T
(ug) 171.9 119.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gui_setup) 201 118.66 T
(.tcl) 235.41 118.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 290 119.33 T
(urn on serv) 295.09 119.33 T
(er end deb) 335.45 119.33 T
(ugging \050early\051) 372.76 119.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(ser) 132 103.99 T
(v) 143.35 103.99 T
(er_tcldeb) 147.15 103.99 T
(ug) 179.9 103.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gui_setup) 201 102.66 T
(.tcl) 235.41 102.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Print out tcl that reaches serv) 290 103.33 T
(er end) 394.6 103.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
131.5 555.08 131.5 420.83 2 L
V
0.5 H
0 Z
N
282.5 555.58 282.5 423.83 2 L
V
N
461.25 555.08 461.25 423.83 2 L
V
N
463.75 555.08 463.75 421.33 2 L
V
N
131.25 555.33 464 555.33 2 L
V
N
131.25 538.33 461 538.33 2 L
V
N
131.75 423.58 461.5 423.58 2 L
V
N
131.75 421.08 464 421.08 2 L
V
N
135.5 358.08 135.5 231.83 2 L
V
N
296.5 358.58 296.5 234.83 2 L
V
N
457.25 358.08 457.25 234.83 2 L
V
N
459.75 358.08 459.75 232.33 2 L
V
N
135.25 358.33 460 358.33 2 L
V
N
135.25 341.33 457 341.33 2 L
V
N
135.75 234.58 457.5 234.58 2 L
V
N
135.75 232.08 460 232.08 2 L
V
N
126 146.08 126 95.83 2 L
V
N
195 146.58 195 98.83 2 L
V
N
284 146.58 284 98.83 2 L
V
N
462.75 146.08 462.75 98.83 2 L
V
N
465.25 146.08 465.25 96.33 2 L
V
N
125.75 146.33 465.5 146.33 2 L
V
N
125.75 129.33 462.5 129.33 2 L
V
N
126.25 98.58 463 98.58 2 L
V
N
126.25 96.08 465.5 96.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(Some Implementation Details) 207 739.85 T
72 726.98 558 726.98 2 L
0.25 H
N
72 75.33 558 75.33 2 L
2 Z
N
(SatherGui) 207 60.29 T
0 10 Q
(9) 527.82 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
0 12 Q
(4.0  Some Implementation Details) 72 598.33 T
0 10 Q
(4.1  Directories) 72 567.66 T
1 F
(The follo) 72 551.66 T
(wing are the directories that consistute the Gui.) 108.69 551.66 T
0 F
(4.2  Diff) 72 375.66 T
(erences fr) 108.02 375.66 T
(om Tc) 155.62 375.66 T
(l/Tk) 184.87 375.66 T
3 11 Q
(\245) 72 358.99 T
1 10 Q
(T) 91.8 358.99 T
(e) 97.21 358.99 T
(xt and can) 101.5 358.99 T
(v) 142.2 358.99 T
(as widgets are not really tk te) 146.95 358.99 T
(xt and can) 264 358.99 T
(v) 304.7 358.99 T
(as widgets -) 309.45 358.99 T
(the) 359.72 358.99 T
(y ha) 371.79 358.99 T
(v) 388.53 358.99 T
(e an outer \322frame\323 which holds the real) 393.38 358.99 T
(widget) 122.4 346.66 T
(as well as optional scroll bars.) 152.12 346.66 T
3 11 Q
(\245) 72 330.99 T
1 10 Q
(W) 91.8 330.99 T
(e don\325) 100.44 330.99 T
(t rely on string names to identify objects.) 125.53 330.99 T
-0.36 (Ev) 291.91 330.99 P
-0.36 (en in places where the user can pro) 302.87 330.99 P
-0.36 (vide a string name, this) 440.44 330.99 P
-0.36 (name) 534.2 330.99 P
(is used for deb) 122.4 318.66 T
(ugging purposes only - internally) 180.8 318.66 T
(, it is) 312.92 318.66 T
(made unique. The sather object identity should be used.) 335.15 318.66 T
(T) 122.4 306.66 T
(A) 127.58 306.66 T
(G objects, for instance, are unique. W) 134.4 306.66 T
(e mak) 284.95 306.66 T
(e them unique in) 309.01 306.66 T
(Sather by appending a unique inte) 375.95 306.66 T
(ger) 512.17 306.66 T
(. If you) 524.39 306.66 T
(w) 122.4 294.66 T
(ant to use the) 129.52 294.66 T
(same tag in a couple of places, use the same sather tag object.) 185.07 294.66 T
0 F
(4.3  Widg) 72 264.66 T
(ets) 116 264.66 T
1 F
-0.15 (All widgets, directly or indirectly) 72 237.66 P
-0.15 (, include the) 204.37 237.66 P
5 8 Q
-0.13 (TK_WIDGET_INCL) 255.59 237.66 P
1 10 Q
-0.15 ( partial class. This partial class pro) 324.93 237.66 P
-0.15 (vides the basic creation) 462.49 237.66 P
(routines and has stubs for the name of the widget being created.  The actual widget class must \336ll in these names. Scroll-) 72 225.66 T
-0.27 (bar widgets ha) 72 213.66 P
-0.27 (v) 129.57 213.66 P
-0.27 (e not yet been implemented directly) 134.43 213.66 P
-0.27 (. Ho) 276 213.66 P
-0.27 (we) 292.7 213.66 P
-0.27 (v) 304.11 213.66 P
-0.27 (er) 308.96 213.66 P
-0.27 (, scroll bars are pro) 316.33 213.66 P
-0.27 (vided as a standard option on the te) 392.01 213.66 P
-0.27 (xt and) 531.33 213.66 P
(can) 72 201.66 T
(v) 85.48 201.66 T
(as widgets. These scrollable widgets include the partial class) 90.23 201.66 T
5 8 Q
(TK_SCR) 335.19 201.66 T
(OLL_WIDGET_INCL) 366.59 201.66 T
1 10 Q
( .) 440.83 201.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(app_deb) 150 660.99 T
(ug) 180.98 660.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gui_post_socet_int.tcl) 219 660.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(T) 308 660.33 T
(urn on application end deb) 313.09 660.33 T
(ug \050starts a bit) 408.9 660.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(late\051) 308 649.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(app_tcldeb) 150 634.99 T
(ug) 188.98 634.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gui_post_socet_int.tcl) 219 634.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Print out only tcl that the application sends) 308 634.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Director) 150 529.99 T
(y) 180.75 529.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Purpose/Contents) 274 529.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(Libr) 150 515.99 T
(ar) 163.26 515.99 T
(y/System/Gui) 170.61 515.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(The Sather code for the Gui.) 274 515.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(Libr) 150 500.99 T
(ar) 163.26 500.99 T
(y/System/Gui/Demos) 170.61 500.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(The demos described abo) 274 500.33 T
(v) 365.59 500.33 T
(e.) 369.96 500.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(System/Platf) 150 485.99 T
(or) 194.66 485.99 T
(ms/gui) 201.98 485.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Neccesary changes to the generation process of Sather) 274 485.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(programs using the Gui.) 274 474.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(System/Platf) 150 459.99 T
(or) 194.66 459.99 T
(ms/gui/TclCode) 201.98 459.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(The tcl code of the Gui.) 274 459.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(Libr) 150 444.99 T
(ar) 163.26 444.99 T
(y/System/DualGui) 170.61 444.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
-0.08 (Sather classes dif) 274 444.33 P
-0.08 (fering from the ones for the Single Gui.) 336.1 444.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(System/Platf) 150 429.99 T
(or) 194.66 429.99 T
(ms/dualgui) 201.98 429.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(Neccesary changes to the generation process of Sather) 274 429.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(programs using the DualGui. The Sather code of the) 274 418.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(serv) 274 407.33 T
(er is also here.) 288.86 407.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(Fla) 150 674.99 T
(g name) 161.48 674.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(In \336le) 219 674.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Action) 308 674.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144 687.08 144 627.83 2 L
V
0.5 H
0 Z
N
213 687.58 213 630.83 2 L
V
N
302 687.58 302 630.83 2 L
V
N
480.75 687.08 480.75 630.83 2 L
V
N
483.25 687.08 483.25 628.33 2 L
V
N
143.75 687.33 483.5 687.33 2 L
V
N
143.75 670.33 480.5 670.33 2 L
V
N
144.25 630.58 481 630.58 2 L
V
N
144.25 628.08 483.5 628.08 2 L
V
N
144 542.08 144 400.83 2 L
V
N
268 542.58 268 403.83 2 L
V
N
482.75 542.08 482.75 403.83 2 L
V
N
485.25 542.08 485.25 401.33 2 L
V
N
143.75 542.33 485.5 542.33 2 L
V
N
143.75 525.33 482.5 525.33 2 L
V
N
144.25 403.58 483 403.58 2 L
V
N
144.25 401.08 485.5 401.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(Some Implementation Details) 189 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(10) 54 60.29 T
0 9 Q
( of) 65.12 60.29 T
0 10 Q
( 14) 76.12 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
(4.3.1  TK_WIDGET_INCL) 54 469 T
1 10 Q
(An include class used by widgets. V) 54 456.33 T
(arious shortforms for) 198.15 456.33 T
( e) 282.58 456.33 T
(v) 289.27 456.33 T
(aluating using a b) 294.02 456.33 T
(unch of ar) 364.65 456.33 T
(guments \050concatenating ar) 405.01 456.33 T
(gu-) 510.36 456.33 T
(ments) 54 444.33 T
(is prone to the error of ommitting a space between) 80.39 444.33 T
(the ar) 284.24 444.33 T
(guments\051. It also pro) 306.55 444.33 T
(vides the basic creation structure for) 389.17 444.33 T
(widgets. The create routine is speci\336ed in the widget itself. It is recommended that one looks at a simple widget lik) 54 432.33 T
(e) 513.85 432.33 T
5 8 Q
(TK_LABEL) 54 420.33 T
1 10 Q
( or) 93.58 420.33 T
5 8 Q
(TK_B) 106.91 420.33 T
(UTT) 126.83 420.33 T
(ON) 142.07 420.33 T
1 10 Q
( to see ho) 154.07 420.33 T
(w the included code is used.) 191.87 420.33 T
0 9 Q
(4.3.2  TK_SCR) 54 397 T
(OLL_WIDGET_INCL) 114.84 397 T
1 10 Q
(An include class used for widgets which might ha) 54 384.33 T
(v) 253.22 384.33 T
(e scrollbars. This creates an outer frame which can hold the widget) 258.07 384.33 T
(proper as well as the scrollbars. T) 54 372.33 T
(ak) 187.89 372.33 T
(e a look at W) 197.23 372.33 T
(idgets/te) 250.15 372.33 T
(xt.sa) 283.89 372.33 T
5 8 Q
(TK_TEXT) 305 372.33 T
(.) 339.16 372.33 T
0 9 Q
(4.3.3  TK_WIDGET_CFG_INCL) 54 349 T
1 10 Q
(Each widget has a corresponding CFG class which is used to specify  and change con\336guration options. Most con\336gura-) 54 336.33 T
(tion options are actually speci\336ed in) 54 324.33 T
5 8 Q
(TK_WIDGET_CFG_INCL) 201.21 324.33 T
1 10 Q
( and are k) 291.89 324.33 T
(ept pri) 330.94 324.33 T
(v) 356.52 324.33 T
(ate. On inclusion, the con\336guration options) 361.27 324.33 T
(that are rele) 54 312.33 T
(v) 100.95 312.33 T
(ant to a particular widget are made accessible by making them public. All con\336guration options ha) 105.7 312.33 T
(v) 499.89 312.33 T
(e a v) 504.74 312.33 T
(er-) 523.47 312.33 T
(sion that returns self and one that does not, to permit con) 54 300.33 T
(v) 280.8 300.33 T
(enient dotting.) 285.65 300.33 T
0 9 Q
(4.3.4  TK_ARG_UTIL) 54 277 T
1 10 Q
(\322Macros\323 for concatenating strings, some of which might be v) 54 264.33 T
(oid.) 303.2 264.33 T
0 9 Q
(4.3.5  Global T) 54 241 T
(ab) 114.31 241 T
(le: TK_WIDGET_MAP) 124.72 241 T
1 10 Q
(Mapping from widget names to widget objects used by) 54 228.33 T
5 8 Q
(GUI_APP_END) 276.48 228.33 T
(.) 331.94 228.33 T
0 9 Q
(4.3.6  P) 54 205 T
(er) 84.75 205 T
(-widg) 93.08 205 T
(et T) 116.67 205 T
(ab) 131.95 205 T
(le:TK_WIDGET_CALLB) 142.36 205 T
(A) 241.09 205 T
(CKS) 247.23 205 T
1 10 Q
-0.09 (Mapping from action_id s to bound routines and also to) 54 192.33 P
-0.09 (the name of the action \050for deb) 278.09 192.33 P
-0.09 (ugging/error reporting\051.) 400.65 192.33 P
4 F
-0.09 (This class) 497.95 192.33 P
(should go away) 54 180.33 T
(, as during the de) 116.23 180.33 T
(velopment of the Gui the e) 185.8 180.33 T
(vent system had under) 290.91 180.33 T
(gome impr) 379.69 180.33 T
(o) 422.29 180.33 T
(vements whic) 427.19 180.33 T
(h mak) 480.64 180.33 T
(e this) 504.7 180.33 T
(class unneccessary) 54 168.33 T
(.) 129.82 168.33 T
0 F
(4.4  Events) 54 138.33 T
1 F
(Ev) 54 122.33 T
(ents are being processed in the follo) 64.96 122.33 T
(wing w) 208.57 122.33 T
(ay:) 238.19 122.33 T
0 0 0 1 0 0 0 K
54 489 540 677.33 C
0 0 0 1 0 0 0 K
5 8 Q
0 X
0 0 0 1 0 0 0 K
(TK_WIDGET_INCL) 316.24 651.83 T
(TK_SCR) 159 615.83 T
(OLL_WIDGET_INCL) 190.4 615.83 T
(TK_TEXT) 123 579.83 T
(TK_CANV) 199.91 579.83 T
(AS) 236.17 579.83 T
(TK_MENU) 397 618.92 T
(TK_MENUB) 397.57 603.15 T
(UTT) 441.05 603.15 T
(ON) 456.28 603.15 T
375 631.66 357 649.66 2 L
0.5 H
2 Z
N
231 631.66 339 649.66 2 L
N
150 595.66 204 613.66 2 L
N
213 613.66 240 595.66 2 L
N
(TK_T) 330 619.32 T
(OPLEVEL) 349.24 619.32 T
(TK_FRAME) 330 603.32 T
(TK_LISTBO) 330 587.32 T
(X) 372.65 587.32 T
(TK_LABEL) 330 571.32 T
(TK_ENTR) 330 555.32 T
(Y) 366.05 555.32 T
(TK_B) 330 539.32 T
(UTT) 349.93 539.32 T
(ON) 365.16 539.32 T
(TK_RADIO) 330 523.32 T
(TK_ENTR) 330 507.32 T
(Y) 366.05 507.32 T
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(The Dual Pr) 207 739.85 T
(ocess Gui \050DualGui\051) 256.83 739.85 T
72 726.98 558 726.98 2 L
0.25 H
N
72 75.33 558 75.33 2 L
2 Z
N
(SatherGui) 207 60.29 T
0 10 Q
(11) 522.26 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
0 9 Q
(1.) 108 680.66 T
1 10 Q
-0.02 (\050In) 122.4 680.66 P
5 8 Q
-0.01 ($TK_EVENT) 136.54 680.66 P
-0.01 (::create) 182.18 680.66 P
1 10 Q
-0.02 (\051 Each e) 208.86 680.66 P
-0.02 (v) 241.33 680.66 P
-0.02 (ent class has a dif) 246.18 680.66 P
-0.02 (ferent callback string called \322) 316.41 680.66 P
5 8 Q
-0.01 (cb_str) 434.09 680.66 P
1 10 Q
-0.02 (\323. This string encodes all) 455.87 680.66 P
(v) 122.4 668.66 T
(alid e) 127.15 668.66 T
(v) 148.84 668.66 T
(ent information which can be recei) 153.69 668.66 T
(v) 292.57 668.66 T
(ed when the e) 297.42 668.66 T
(v) 352.43 668.66 T
(ent occurs. Internally the callback string contains) 357.28 668.66 T
(all possible inforation options. The irrele) 122.4 656.66 T
(v) 285.47 656.66 T
(ant options are mask) 290.22 656.66 T
(ed out with an at-sign \050@\051.) 372.61 656.66 T
0 9 Q
(2.) 108 641.66 T
1 10 Q
-0.31 (\050In) 122.4 641.66 P
5 8 Q
-0.28 ($TK_WIDGET) 136.25 641.66 P
-0.28 (::bind_e) 187.21 641.66 P
-0.28 (v) 215.43 641.66 P
-0.28 (ent) 219.23 641.66 P
1 10 Q
-0.31 (\051 The widget to which the e) 230.35 641.66 P
-0.31 (v) 338.21 641.66 P
-0.31 (ent is being bound in \322bind_e) 343.06 641.66 P
-0.31 (v) 459.29 641.66 P
-0.31 (ent\323 stores all e) 464.14 641.66 P
-0.31 (v) 524.89 641.66 P
-0.31 (ents in) 529.73 641.66 P
(a list \050independantly from the Tk e) 122.4 629.66 T
(v) 261.02 629.66 T
(ent scheduling system\051. The inde) 265.87 629.66 T
(x of the e) 397.65 629.66 T
(v) 434.89 629.66 T
(ent within the listde\336nes the) 439.74 629.66 T
(e) 122.4 617.66 T
(v) 126.59 617.66 T
(ent class. \050Hence e) 131.44 617.66 T
(v) 206.16 617.66 T
(ents cannot be remo) 211.01 617.66 T
(v) 291.12 617.66 T
(ed right no) 295.97 617.66 T
(w) 339.05 617.66 T
(.\051) 345.62 617.66 T
0 9 Q
(3.) 108 602.66 T
1 10 Q
(When an e) 122.4 602.66 T
(v) 164.91 602.66 T
(ent occurs, Tk calls \322) 169.76 602.66 T
5 8 Q
(act_on) 254.46 602.66 T
1 10 Q
(\323 withing the widget and passes the e) 278.48 602.66 T
(v) 426.82 602.66 T
(ent class along with the list of) 431.67 602.66 T
(e) 122.4 590.66 T
(v) 126.59 590.66 T
(aluated callback string. The Tk side e) 131.34 590.66 T
(v) 280.78 590.66 T
(aluateds only ar) 285.53 590.66 T
(guments which ha) 348.67 590.66 T
(v) 421.24 590.66 T
(e not been mask) 426.09 590.66 T
(ed out.) 490.7 590.66 T
0 9 Q
(4.) 108 575.66 T
1 10 Q
(\050In) 122.4 575.66 T
5 8 Q
($TK_WIDGET) 136.56 575.66 T
(::act_on) 187.52 575.66 T
1 10 Q
(\051 The \322) 215.98 575.66 T
5 8 Q
(act_on) 244.3 575.66 T
1 10 Q
(\323 routine creates a) 268.32 575.66 T
5 8 Q
(TK_EVENT_INFO) 343.29 575.66 T
1 10 Q
( and \336lls the ar) 408.19 575.66 T
(guments into it. The) 467.45 575.66 T
(y) 547.86 575.66 T
(are not yet being e) 122.4 563.66 T
(v) 196.02 563.66 T
(aluated,  because the user probably will not use all of themand the computation time) 200.77 563.66 T
(w) 122.4 551.66 T
(ouldbe mostly w) 129.52 551.66 T
(asted.) 196.09 551.66 T
0 9 Q
(5.) 108 536.66 T
1 10 Q
(Then the associated routine from \322) 122.4 536.66 T
5 8 Q
(bind_e) 260.98 536.66 T
(v) 284.76 536.66 T
(ent) 288.56 536.66 T
1 10 Q
(\323 is being called. The routine recei) 299.68 536.66 T
(v) 437.45 536.66 T
(es the e) 442.3 536.66 T
(v) 472.04 536.66 T
(ent information for) 476.89 536.66 T
(further processing.) 122.4 524.66 T
0 F
(4.5  The Tc) 72 494.66 T
(l Code) 123.49 494.66 T
1 F
(The tcl code is in the) 72 467.66 T
5 8 Q
(System/Platf) 158.1 467.66 T
(or) 202.76 467.66 T
(m/gui/TclCode) 210.08 467.66 T
1 10 Q
( directory and consists of initialization \336les.) 261.64 467.66 T
(The *-system.init.tcl \336les are copieds of the ICSI Tk/Tcl installation. Y) 72 313.66 T
(Ou might w) 356.96 313.66 T
(ant to source yours instead or source) 404.64 313.66 T
(ours and these.) 72 301.66 T
0 12 Q
(5.0  The Dual Pr) 72 265.33 T
(ocess Gui \050DualGui\051) 161.8 265.33 T
1 10 Q
(The tw) 72 244.66 T
(o process v) 99.95 244.66 T
(ersion of the Gui mak) 144.79 244.66 T
(es it possible for application programs to support rapid updating of on-screen) 231.9 244.66 T
-0.13 (graphics without ha) 72 232.66 P
-0.13 (ving to litter the application code with calls to an e) 150.41 232.66 P
-0.13 (v) 351.6 232.66 P
-0.13 (ent-processing routine \050though you still need calls) 356.45 232.66 P
(to a polling routine to handle callbacks, these polls can be much less frequent since man) 72 220.66 T
(y simple e) 424.02 220.66 T
(v) 464.88 220.66 T
(ents are handled inde-) 469.73 220.66 T
-0.33 (pendantly\051.  This is accomplished by ha) 72 208.66 P
-0.33 (ving a separate process for maintaining the graphics.  Communication between the) 228.97 208.66 P
(application program process andthe GUI \322serv) 72 196.66 T
(er\323 process is done via sock) 258.19 196.66 T
(ets.  As a result, you ha) 369.45 196.66 T
(v) 462.57 196.66 T
(e to be a) 467.42 196.66 T
(w) 500.87 196.66 T
(are of a fe) 507.99 196.66 T
(w) 547.99 196.66 T
(choices which must be made when initializing the GUI.) 72 184.66 T
-0.27 (The essential bene\336t of the dual process v) 72 157.66 P
-0.27 (ersion is that you can retain control in your Sather program i.e. you need not call) 237.41 157.66 P
(gui_loop. It is suf) 72 145.66 T
(\336cient if you call gui_poll frequently enough to permit reasonable updates.) 142.31 145.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(File name) 150 445.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(What it does) 315 445.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(star) 150 431.99 T
(tup) 163.66 431.99 T
(.tcl) 174.5 431.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
(The \336rst \336le being sourced.) 315 430.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(tcl-system-init.tcl) 150 415.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
(Sourced by) 315 414.66 T
5 8 Q
(star) 362.77 414.66 T
(tup) 376.43 414.66 T
(.tcl) 387.27 414.66 T
1 10 Q
(.) 397.49 414.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(tk-system-init.tcl) 150 399.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
(Dito.) 315 398.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(gui_setup) 150 383.99 T
(.tcl) 184.41 383.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
(Sourced after) 315 382.66 T
5 8 Q
(star) 371.09 382.66 T
(tup) 384.75 382.66 T
(.tcl) 395.59 382.66 T
1 10 Q
(.) 405.81 382.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 8 Q
(gui_post_soc) 150 367.99 T
(k) 196.98 367.99 T
(et_int.tcl) 200.82 367.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
(After the asynchronous communica-) 315 366.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion has been enable this \336le is being) 315 354.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sourced.) 315 342.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144 458.08 144 335.83 2 L
V
0.5 H
0 Z
N
309 458.58 309 338.83 2 L
V
N
472.75 458.08 472.75 338.83 2 L
V
N
475.25 458.08 475.25 336.33 2 L
V
N
143.75 458.33 475.5 458.33 2 L
V
N
143.75 441.33 472.5 441.33 2 L
V
N
144.25 338.58 473 338.58 2 L
V
N
144.25 336.08 475.5 336.08 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(The SOCKET La) 189 739.85 T
(y) 257.83 739.85 T
(er) 262.75 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(12) 54 60.29 T
0 9 Q
( of) 65.12 60.29 T
0 10 Q
( 14) 76.12 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
0 10 Q
(5.1  Separate Mac) 54 680.66 T
(hine Method) 137.83 680.66 T
1 F
-0.06 (It is possible to run the GUI serv) 54 664.66 P
-0.06 (er process on a separate machine from the application program process.  This can be use-) 184.27 664.66 P
(ful if the application program runs on specialized hardw) 54 652.66 T
(are which does not support X W) 278.3 652.66 T
(indo) 407.32 652.66 T
(ws.  It is also useful when) 424.85 652.66 T
(running an application program on a remote machine o) 54 640.66 T
(v) 273.81 640.66 T
(er a slo) 278.66 640.66 T
(w link, since the bandwith used by the Sather GUI can be) 307.29 640.66 T
(orders of magnitude lo) 54 628.66 T
(wer than the corresponding X bandwidth, since man) 144.57 628.66 T
(y mouse and other e) 353.27 628.66 T
(v) 433.56 628.66 T
(ents are handled at the) 438.41 628.66 T
(serv) 54 616.66 T
(er end.) 70.51 616.66 T
( T) 54 589.66 T
(o start the GUI this w) 61.81 589.66 T
(ay) 148.09 589.66 T
(, your application program should call GUI) 156.88 589.66 T
5 8 Q
(_UTIL::star) 329.91 589.66 T
(tup_gui\050f) 369.8 589.66 T
(alse) 400.69 589.66 T
(,tr) 415.24 589.66 T
(ue\051) 422.47 589.66 T
1 10 Q
(, and you should arrange) 434.03 589.66 T
(that after that call is made, the program $) 54 577.66 T
5 8 Q
(SA) 218.69 577.66 T
(THER_HOME/System/Platf) 228.4 577.66 T
(or) 325.51 577.66 T
(ms/dualgui/dual_gui_ser) 332.83 577.66 T
(v) 419.77 577.66 T
(er  <application-host-name>) 423.57 577.66 T
1 10 Q
( is) 523.17 577.66 T
(run on the local machine.  \050Actually) 54 565.66 T
(, you can run the serv) 197.49 565.66 T
(er up to se) 283.43 565.66 T
(v) 324.56 565.66 T
(eral seconds before the applicationprogram and all) 329.41 565.66 T
(will still be well.\051  Internet-domain sock) 54 553.66 T
(ets are used in this case.) 214.72 553.66 T
0 F
(5.2  Deb) 54 523.66 T
(ug) 92.15 523.66 T
(ging Method) 104.27 523.66 T
1 F
(F) 54 496.66 T
(or deb) 59.41 496.66 T
(ugging, you may wish to separate GUI serv) 84.48 496.66 T
(er error messages from  your application program error messages.  T) 258.19 496.66 T
(o) 531.76 496.66 T
(do this, you may follo) 54 484.66 T
(w the instructions in the abo) 141.81 484.66 T
(v) 254.71 484.66 T
(e paragraph, using tw) 259.56 484.66 T
(o xterms logged into the same machine, and) 345.55 484.66 T
(using \322localhost\323 as the host name.) 54 472.66 T
(If it is important to retain the communication speed of the Unix-domain sock) 54 445.66 T
(ets, start the GUI with) 361.65 445.66 T
5 8 Q
(GUI_UTIL::star-) 452.75 445.66 T
(tup\050f) 54 433.66 T
(alse) 69.77 433.66 T
(,f) 84.32 433.66 T
(alse\051) 88.53 433.66 T
1 10 Q
( and omit the hostname when in) 105.86 433.66 T
(v) 233.23 433.66 T
(oking gui_serv) 238.03 433.66 T
(er_end.) 297.6 433.66 T
0 F
(5.3  For) 54 403.66 T
(cing Internet Soc) 89.37 403.66 T
(kets) 170.3 403.66 T
1 F
(Lastly) 54 387.66 T
(, should you wish to use the usual, serv) 78.35 387.66 T
(er) 234.86 387.66 T
(-forking, startup procedure b) 242.43 387.66 T
(ut w) 357.2 387.66 T
(ant to use Internet-domain sock) 374.6 387.66 T
(ets for) 500.59 387.66 T
(some reason, you can simply start the GUI with) 54 375.66 T
5 8 Q
(GUI_UTIL::star) 247.31 375.66 T
(tup\050tr) 301.42 375.66 T
(ue) 320.21 375.66 T
(,tr) 328.99 375.66 T
(ue\051) 336.22 375.66 T
1 10 Q
(.) 347.78 375.66 T
0 F
(5.4  Notes) 54 345.66 T
0 9 Q
(1.) 90 329.66 T
1 10 Q
-0.12 (When using Unix-domain sock) 104.4 329.66 P
-0.12 (ets, there is an e) 228.65 329.66 P
-0.12 (xtremely small b) 292.16 329.66 P
-0.12 (ut non-zero chance that an ill-timed interrupt) 358.94 329.66 P
(of your application program could lea) 104.4 317.66 T
(v) 255.56 317.66 T
(e some \322junk\323 in the \336lesystem pre) 260.41 317.66 T
(v) 400.7 317.66 T
(enting future runs of an) 405.55 317.66 T
(y Sather) 499.27 317.66 T
-0.13 (GUI program on the machine.  In this case, delete the \336les /) 104.4 305.66 P
5 8 Q
-0.12 (tmp/GUI_SYNCH) 341.13 305.66 P
1 10 Q
-0.13 (and) 405.47 305.66 P
5 8 Q
-0.12 (/tmp/GUI_ASYNCH) 422.28 305.66 P
1 10 Q
-0.13 (, and report) 492.07 305.66 P
(the problem to dbaile) 104.4 293.66 T
(y@icsi.berk) 189.52 293.66 T
(ele) 237.79 293.66 T
(y) 249.3 293.66 T
(.edu.) 253.65 293.66 T
0 9 Q
(2.) 90 278.66 T
1 10 Q
(If you suspect you\325) 104.4 278.66 T
(v) 180.83 278.66 T
(e got sock) 185.68 278.66 T
(et-related problems, refer to the \336les) 226.13 278.66 T
5 8 Q
(soc) 374.15 278.66 T
(k) 386.44 278.66 T
(et.sa) 390.28 278.66 T
1 10 Q
( and) 407.62 278.66 T
5 8 Q
(soc) 427.06 278.66 T
(k) 439.35 278.66 T
(et_suppor) 443.19 278.66 T
(t.c) 479.09 278.66 T
1 10 Q
( in) 487.53 278.66 T
($) 104.4 266.66 T
5 8 Q
(SA) 109.4 266.66 T
(THER_HOME/Libr) 119.11 266.66 T
(ar) 184.82 266.66 T
(y/System/Soc) 192.17 266.66 T
(k) 240.91 266.66 T
(et) 244.75 266.66 T
1 10 Q
(, or contact dbaile) 251.42 266.66 T
(y@icsi.berk) 322.92 266.66 T
(ele) 371.19 266.66 T
(y) 382.7 266.66 T
(.edu.) 387.05 266.66 T
0 12 Q
(6.0  The SOCKET La) 54 230.33 T
(y) 169.13 230.33 T
(er) 175.68 230.33 T
1 10 Q
(The basic communication between the user interf) 54 209.66 T
(ace client and the actual display will usually tak) 251.08 209.66 T
(e place o) 442.62 209.66 T
(v) 478.01 209.66 T
(er a sock) 482.86 209.66 T
(et) 518.3 209.66 T
(based interf) 54 197.66 T
(ace.) 100.83 197.66 T
0 F
(6.1  Reasons f) 54 167.66 T
(or using soc) 121.05 167.66 T
(kets) 180.31 167.66 T
1 F
(This sock) 54 140.66 T
(et interf) 92.51 140.66 T
(ace might seem an arcane structure, b) 123.79 140.66 T
(ut there were se) 273.82 140.66 T
(v) 336.6 140.66 T
(eral reasons for it. This setup w) 341.45 140.66 T
(as designed by) 467.16 140.66 T
(Da) 54 128.66 T
(vid Baile) 65.46 128.66 T
(y and these are mostly his moti) 101.7 128.66 T
(v) 225.89 128.66 T
(ations:) 230.64 128.66 T
3 11 Q
-0.32 (\245) 54 109.99 P
1 10 Q
-0.12 (The programming model is cleaner) 73.17 109.99 P
-0.12 (, and application rather than interf) 212.82 109.99 P
-0.12 (ace  dri) 348.2 109.99 P
-0.12 (v) 377.14 109.99 P
-0.12 (en.  The application runs and generates) 381.99 109.99 P
-0.16 (the user interf) 104.4 97.66 P
-0.16 (ace and sets up callbacks. Occassionally the application  has to poll to allo) 159.53 97.66 P
-0.16 (w the callbacks to be) 454.41 97.66 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(The SOCKET La) 207 739.85 T
(y) 275.83 739.85 T
(er) 280.75 739.85 T
72 726.98 558 726.98 2 L
0.25 H
N
72 75.33 558 75.33 2 L
2 Z
N
(SatherGui) 207 60.29 T
0 10 Q
(13) 522.26 60.29 T
0 9 Q
( of) 533.38 60.29 T
0 10 Q
(14) 546.88 60.29 T
1 F
(serviced. The standard approach is to dri) 122.4 680.66 T
(v) 284.61 680.66 T
(e the application from the user) 289.46 680.66 T
(-interf) 411.18 680.66 T
(ace, which is not appropriate) 436.07 680.66 T
-0.06 (for visualization of a principally computational task. This approach essentially gi) 122.4 668.66 P
-0.06 (v) 445.71 668.66 P
-0.06 (es you multi \050tw) 450.57 668.66 P
-0.06 (o!\051 thread-) 515.58 668.66 P
(ing.) 122.4 656.66 T
3 11 Q
(\245) 72 640.99 T
1 10 Q
(This model permits communication between a gui that runs on a serv) 91.8 640.99 T
(er machine and communicates with an applica-) 368.01 640.99 T
-0.09 (tion on a dif) 122.4 628.66 P
-0.09 (ferent machine, which possibly does not understand X. This w) 170.5 628.66 P
-0.09 (as particularly important when we) 419.3 628.66 P
(were considering a GUI for use with Sather running on specialized hardw) 122.4 616.66 T
(are.) 416.95 616.66 T
(This could pro) 434.16 616.66 T
(v) 492.34 616.66 T
(e quite useful) 497.19 616.66 T
(for using X from home o) 122.4 604.66 T
(v) 221.96 604.66 T
(er a  \050relati) 226.81 604.66 T
(v) 270.15 604.66 T
(ely\051 slo) 275 604.66 T
(w modem. Da) 304.47 604.66 T
(vid already reports that his thesis interf) 360.65 604.66 T
(ace runs) 516.64 604.66 T
(v) 122.4 592.66 T
(ery well \050much f) 127.25 592.66 T
(aster than X\051 when used from home while running at ICSI. I w) 193.52 592.66 T
(ould be v) 444.21 592.66 T
(ery interested in) 481.28 592.66 T
(seeing the performance of a simple editor that uses this philosoph) 122.4 580.66 T
(y - it should be much f) 384.54 580.66 T
(aster than standard) 474.99 580.66 T
(editors, since all scrolling etc. will be local.) 122.4 568.66 T
3 11 Q
(\245) 72 552.99 T
1 10 Q
( And this is perhaps a tri) 91.8 552.99 T
(vial reason, b) 189.32 552.99 T
(ut w) 242.72 552.99 T
(as a major reason for me!  I found that on some occassions gdb w) 260.12 552.99 T
(ould not) 522.19 552.99 T
(run on the bro) 122.4 540.66 T
(wser - I could only conclude that it w) 178.53 540.66 T
(as due to some interaction with tcl, maybe with the tw) 327.85 540.66 T
(o) 544.12 540.66 T
(g) 122.4 528.66 T
(arbage collectors? This sock) 127.35 528.66 T
(et v) 240.83 528.66 T
(ersion seems much safer) 255.4 528.66 T
(, since tcl/tk is separate from the application.) 353.03 528.66 T
3 11 Q
-0.46 (\245) 72 512.99 P
1 10 Q
-0.17 ( The sock) 90.89 512.99 P
-0.17 (et interf) 129.33 512.99 P
-0.17 (ace is hidden and quite small; if someone kno) 160.43 512.99 P
-0.17 (ws  ho) 341.57 512.99 P
-0.17 (w to get the same programming model and safe) 367.08 512.99 P
(gdb usage without  separating out the processes \050threads in pSather) 122.4 500.66 T
(, for instance\051,   it should be possible to) 390.29 500.66 T
(create a drop-in non-sock) 122.4 488.66 T
(et replacement   with just a couple of hundred lines of code.) 224.21 488.66 T
3 11 Q
(\245) 72 472.99 T
1 10 Q
( Linking time is some) 91.8 472.99 T
(what reduced, and the e) 178.78 472.99 T
(x) 273.32 472.99 T
(ecutable for the tk end can be distrib) 278.17 472.99 T
(uted.) 423.77 472.99 T
(On the minus side, this design is some) 72 445.66 T
(what more comple) 225.09 445.66 T
(x and quite a bit less ef) 299.37 445.66 T
(\336cient than a single process solution.) 391.33 445.66 T
0 F
(6.2  Soc) 72 415.66 T
(ket mana) 109.6 415.66 T
(g) 152.85 415.66 T
(ement) 159.06 415.66 T
1 F
-0.04 (At the sather end, the sock) 72 399.66 P
-0.04 (et communication is managed by) 177.8 399.66 P
5 8 Q
-0.03 (GUI_APP_END) 312.32 399.66 P
1 10 Q
-0.04 (, whose main routines are \322startup\323 and \322poll\323.) 368.34 399.66 P
(There is a corresponding) 72 387.66 T
5 8 Q
(GUI_SER) 173.64 387.66 T
(VER_END) 208.36 387.66 T
1 10 Q
(  in the tk code.The serv) 246.14 387.66 T
(er end consists of an interf) 342.36 387.66 T
(ace to Tcl \050tak) 448.07 387.66 T
(en from Tk/) 505.45 387.66 T
(Tcl Kit by Matthias Ernst and Ale) 72 375.66 T
(x Cozzi\051 and an interf) 207.95 375.66 T
(ace to a pair of sock) 295.05 375.66 T
(ets \050Da) 375.2 375.66 T
(vid Baile) 403.6 375.66 T
(y\051.  The sock) 439.84 375.66 T
(et le) 491.95 375.66 T
(v) 508.64 375.66 T
(el consists) 513.49 375.66 T
(of tw) 72 363.66 T
(o sock) 92.73 363.66 T
(ets) 118.46 363.66 T
(Creation of the application end consists of spa) 72 336.66 T
(wning of) 256.55 336.66 T
(f the serv) 292.13 336.66 T
(er and then creating the asynch and synch sock) 329.19 336.66 T
(ets. The) 516.82 336.66 T
(serv) 72 324.66 T
(er connects to the client sock) 88.51 324.66 T
(ets and then sources gui_init.tcl and gui_setup.tcl which sources other tcl \336les and sets) 204.22 324.66 T
(the v) 72 312.66 T
(alue of v) 91.47 312.66 T
(arious deb) 126.21 312.66 T
(ug \337ags.) 167.39 312.66 T
(A callback is sent by) 72 285.66 T
5 8 Q
(GUI_SER) 157.82 285.66 T
(VER_END::e) 192.54 285.66 T
(x) 238.98 285.66 T
(ec_callbac) 242.74 285.66 T
(k) 280.37 285.66 T
1 10 Q
( o) 284.37 285.66 T
(v) 291.72 285.66 T
(er the synch sock) 296.57 285.66 T
(et to the sather process.  There it will w) 365.62 285.66 T
(ait until) 523.27 285.66 T
(the sather program does a \322) 72 273.66 T
5 8 Q
(GUI_APP_END::poll) 181.69 273.66 T
1 10 Q
(\323 command.  The poll command will process the ar) 254.6 273.66 T
(guments) 459.39 273.66 T
3 11 Q
(\245) 72 254.99 T
1 10 Q
(The \336rst ar) 91.8 254.99 T
(gument is the widget name \050or possibly a special deb) 135.5 254.99 T
(ug \337ag\051) 347.22 254.99 T
3 11 Q
(\245) 72 238.99 T
1 10 Q
(The second ar) 91.8 238.99 T
(gument is the number of ar) 147.71 238.99 T
(guments. Then comes action id and the actual ar) 255.57 238.99 T
(guments) 448.41 238.99 T
3 11 Q
(\245) 72 222.99 T
1 10 Q
(The appropriate sather widget is found using the callback_map) 91.8 222.99 T
3 11 Q
-0.72 (\245) 72 206.99 P
5 8 Q
-0.24 (act_on) 90.36 206.99 P
1 10 Q
-0.27 ( is called on the tar) 114.37 206.99 P
-0.27 (get widget with the action id and the ar) 188.65 206.99 P
-0.27 (gument array) 342.37 206.99 P
-0.27 (, which starts with the action id. W) 394.49 206.99 P
-0.27 (idgets) 531.88 206.99 P
(will usually con) 122.4 194.66 T
(v) 185.89 194.66 T
(ert this structure into something such as) 190.74 194.66 T
5 8 Q
(TK_CANV) 352.12 194.66 T
(AS_CB) 388.38 194.66 T
1 10 Q
( in which the ar) 414.61 194.66 T
(guments ha) 476.64 194.66 T
(v) 522.27 194.66 T
(e been) 527.12 194.66 T
(processed.  The interpretation may dif) 122.4 182.66 T
(fer from widget to widget \050and possibly from e) 274.34 182.66 T
(v) 461.84 182.66 T
(ent to e) 466.69 182.66 T
(v) 495.88 182.66 T
(ent\051) 500.73 182.66 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(Ac) 189 739.85 T
(kno) 200.32 739.85 T
(wleg) 216.19 739.85 T
(ements) 236.29 739.85 T
54 726.98 540 726.98 2 L
0.25 H
N
54 75.33 540 75.33 2 L
2 Z
N
0 10 Q
(14) 54 60.29 T
0 9 Q
( of) 65.12 60.29 T
0 10 Q
( 14) 76.12 60.29 T
0 9 Q
(SatherGui) 189 60.29 T
3 11 Q
(\245) 54 541.67 T
5 8 Q
(act_on) 73.8 541.67 T
1 10 Q
( will then locate an appropriate bound routine corresponding to that action id and call that bound routine with) 97.82 541.67 T
(the processed callback ar) 104.4 529.33 T
(guments.) 204.46 529.33 T
3 11 Q
(\245) 54 513.67 T
1 10 Q
(All widget classes ha) 73.8 513.67 T
(v) 158.31 513.67 T
(e se) 163.16 513.67 T
(v) 178.18 513.67 T
(eral) 183.03 513.67 T
5 8 Q
(e) 200.52 513.67 T
(v) 204.73 513.67 T
(al) 208.53 513.67 T
1 10 Q
( routines which call the asynchronous interf) 214.75 513.67 T
(ace to Tk.) 389.62 513.67 T
0 12 Q
(7.0  Ac) 54 477 T
(kno) 92.45 477 T
(wleg) 113.6 477 T
(ements) 140.4 477 T
3 11 Q
(\245) 54 455.67 T
1 10 Q
(Ale) 73.8 455.67 T
(x Cozzi \050TclKit comments and suggestions\051) 88.09 455.67 T
3 11 Q
(\245) 54 439.67 T
1 10 Q
(Da) 73.8 439.67 T
(vid Stoutamire \050e) 85.26 439.67 T
(xamples and feedback\051) 154.55 439.67 T
0 0 0 1 0 0 0 K
54 549 540 687.33 C
0 0 0 1 0 0 0 K
4 10 Q
0 X
0 0 0 1 0 0 0 K
(handle_pending_app_commands) 320.08 643.06 T
1 F
(Asynchronous:) 104.07 643.06 T
4 F
(e) 169.62 643.06 T
(val\050s: STR\051) 173.91 643.06 T
1 F
(Synchronous:) 104.07 616.06 T
4 F
(e) 161.57 616.06 T
(val\050s: STR\051: STR) 165.87 616.06 T
1 F
(\050this is in) 320.08 634.06 T
(v) 356.9 634.06 T
(ok) 361.7 634.06 T
(ed by the  \322poll\323 command in) 371.61 634.06 T
(gui_setup.tcl\051) 320.08 625.06 T
299.79 649.89 299.79 652.87 310.17 649.89 299.79 646.92 4 Y
0.5 H
0 Z
N
299.79 649.89 299.79 652.87 310.17 649.89 299.79 646.92 4 Y
V
239.07 649.89 299.54 649.89 2 L
2 Z
N
299.79 622.89 299.79 625.87 310.17 622.89 299.79 619.92 4 Y
0 Z
N
299.79 622.89 299.79 625.87 310.17 622.89 299.79 619.92 4 Y
V
239.07 622.89 299.54 622.89 2 L
2 Z
N
(asynch_sock) 239.07 652.06 T
(et) 290.08 652.06 T
(synch_sock) 239.07 625.06 T
(et) 285.64 625.06 T
4 F
(e) 329.08 595.89 T
(xec_callbac) 333.32 595.89 T
(k) 380.88 595.89 T
1 F
(     if it is a poll then call handle ....) 329.08 585.89 T
(     else send the callback to sather) 329.08 575.89 T
(.) 464.61 575.89 T
241.36 577.89 241.36 574.92 230.98 577.89 241.36 580.87 4 Y
0 Z
N
241.36 577.89 241.36 574.92 230.98 577.89 241.36 580.87 4 Y
V
329.08 577.89 241.61 577.89 2 L
2 Z
N
4 F
(poll) 203.07 579.94 T
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 14
%%DocumentFonts: Helvetica-Bold
%%+ Times-Roman
%%+ Times-Bold
%%+ Courier-Bold
%%+ Times-Italic
%%+ Helvetica
%%+ Courier
%%EOF
