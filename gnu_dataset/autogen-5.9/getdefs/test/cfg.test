#! /bin/sh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
# cfg.test --- test config file processing
#
## Time-stamp:      "2002-09-21 10:05:11 bkorb"
## Author:          Bruce Korb <bkorb@gnu.org>
## Maintainer:      Bruce Korb <bkorb@gnu.org>
## Created:         Sat Sep 21, 2002
#
# $Id: cfg.test,v 4.1 2005/01/01 17:46:14 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test -z "$srcdir" && srcdir=.
    test "$srcdir" = "$0" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# Create the files we need in the test environment
cat > ${testname}.c <<-	_EOSource_

	/*=* global
	 *
	 *  test:  subblock
	 *  doc:  we want to see
	 *        just what happens
	=*/

	/*=gfunc in_p
	 *
	 * exparg: test-string   , string to look for
	           + arg-name    + arg-desc                + arg-opt + arg-list +
	 * exparg: @ string-list @ list of strings to check,,       @@ list
	 *
	 * opt:  1
	 * doc:
	 *      Return SCM_BOOL_T if the first argument is duplicated
	 *      in the second (list) argument.
	=*/
	    SCM
	ag_scm_in_p( SCM obj, SCM list )
	{
	}
	_EOSource_

cat > ${testname}.cfg <<-	_EOCfg_
	output          ${testname}.out
	common-assign   stumble = grumble
	assign          mumble = stumble ; mumble = grumble
	template        test${testname}
	subblock        exparg=arg_name,arg_desc,arg_optional,arg_list
	_EOCfg_

cat > ${testname}.test <<- _EOTestOut_
	/*  -*- buffer-read-only: t -*- vi: set ro:
	 *
	 *
	 *  DO NOT EDIT THIS FILE   (cfg.out)
	 *
	 *  It has been extracted by getdefs from the following files:
	 *
	 *      cfg.c
	 */
	autogen definitions testcfg;
	mumble = stumble ; mumble = grumble;


	/* GLOBALDEFS */

	#line 2 "cfg.c"
	    test = 'subblock';
	    doc = 'we want to see
	just what happens';


	#line 9 "cfg.c"
	gfunc = {
	    name    = 'in_p';
	    exparg = {
	        arg_name = 'test-string';
	        arg_desc = 'string to look for';
	    };
	    exparg = {
	        arg_name = 'string-list';
	        arg_desc = 'list of strings to check,,';
	        arg_list = 'list';
	    };
	    opt = '1';
	    doc =
	'Return SCM_BOOL_T if the first argument is duplicated
	in the second (list) argument.';
	    stumble = grumble;
	};
	_EOTestOut_

set -x
${GDexe} load=${testname}.cfg ${testname}.c || \
    failure running ${GDexe}
cmp -s ${testname}.test ${testname}.out || \
	failure "`diff ${testname}.test ${testname}.out`"

# cfg.test ends here
