#! /bin/sh
#  -*- Mode: Shell-script -*-
# gperf.test --- test functionality of `for' function
#
# Time-stamp:        "2006-10-14 16:36:38 bkorb"
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:31 PDT 1999
# Last Modified:     $Date: 2006/10/14 23:40:29 $
#            by: bkorb
#
# $Id: gperf.test,v 4.7 2006/10/14 23:40:29 bkorb Exp $
# ----------------------------------------------------------------------

if gperf --version > /dev/null 2>&1
then :
else
  echo gperf functionality does not work without gperf >&2
  exit 0
fi

. ./defs

# # # # # # # # # # TEMPLATE FILE # # # # # # # # #

echo creating ${testname}.tpl
cat > ${testname}.tpl <<_EOF_
<= AutoGen5 template test =>
<=

(if (not (make-gperf "${testname}" (stack "foo.bar")))
    (error "cannot make gperf")) =><=

FOR foo "\n" =><=

  FOR bar  =>
<=bar=>	yields: <=(gperf "${testname}" (get "bar"))=><=
  ENDFOR   =><=

ENDFOR =><=
\`tar cf - .${testname}.* > ${testname}-prog.tar || \
  die 'cannot save gperf files'\`=><=
(out-push-new "${testname}-code.c")
(emit (gperf-code "${testname}")) (emit "\n")
(out-pop)
=>
_EOF_


# Create the files we need in the test environment
cat > ${testname}.def <<_EOF_
AutoGen Definitions ${testname};
foo = { bar = first; bar = second; };
foo = { bar = third; bar = fourth; };
_EOF_

# this is the output we should expect to see
cat > ${testname}.base <<_EOF_

first	yields: 0x01
second	yields: 0x02

third	yields: 0x03
fourth	yields: 0x04
_EOF_

${AGexe} --trace=server-shell ${testname}.def || failure AutoGen failed
cmp -s ${testname}.base ${testname}.test || \
  failure "`diff ${testname}.base ${testname}.test`"

cleanup

## Local Variables:
## Mode: shell-script
## indent-tabs-mode: nil
## sh-indentation: 2
## End:

# end of gperf.test
