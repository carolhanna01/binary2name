
'''
''' Part of the ht://Dig package   <http://www.htdig.org/>
''' Copyright (c) 1999, 2000, 2001 The ht://Dig Group
''' For copyright details, see the file COPYING in your distribution
''' or the GNU General Public License version 2 or later
''' <http://www.gnu.org/copyleft/gpl.html>
''' 
''' 
.TH WordRecord 3 local
.SH NAME
WordRecord \-
inverted index record.


.SH SYNOPSIS
.nf
.ft CW

#include <WordRecord.h>

WordContext* context;
WordRecord* record = context->Record();
if(record->DefaultType() == WORD_RECORD_DATA) {
  record->info.data = 120;
} else if(record->DefaultType() == WORD_RECORD_STR) {
  record->info.str = "foobar";
}
delete record;
.ft R
.fi

.SH DESCRIPTION

The record can contain an integer, if the default record
type (see CONFIGURATION in
.I WordKeyInfo
) is set to
.I DATA
or a string if set to
.I STR.
If the type is set to
.I NONE
the record does not contain
any usable information.

Although constructors may be used, the prefered way to create a 
WordRecord object is by using the
.B WordContext::Record
method.


.SH ASCII FORMAT

If default type is
.I DATA
it is the decimal representation of
an integer. If default type is
.I NONE
it is the empty string.


.SH METHODS
.TP
.B   inline WordRecord(WordContext* ncontext) 
Constructor. Build an empty record.
The
.B ncontext
argument must be a pointer to a valid
WordContext object.
.TP
.B   inline void Clear() 
Reset to empty and set the type to the default specified
in the configuration.
.TP
.B   inline int DefaultType() 
Return the default type WORD_RECORD_{DATA,STR,NONE}
.TP
.B   inline int Pack(String& packed) const 
Convert the object to a representation for disk storage written
in the
.B packed
string.
Return OK on success, NOTOK otherwise.
.TP
.B   inline int Unpack(const char* string, int length) 

Alias for Unpack(String(string, length))
.TP
.B   inline int Unpack(const String& packed) 
Read the object from a representation for disk storage contained
in the
.B packed
argument.
Return OK on success, NOTOK otherwise.
.TP
.B   int Set(const String& bufferin)
Set the whole structure from ASCII string description stored
in the
.B bufferin
argument.
Return OK on success, NOTOK otherwise.
.TP
.B   int Get(String& bufferout) const
Convert the whole structure to an ASCII string description
and return it in the
.B bufferout
argument.
Return OK on success, NOTOK otherwise.
.TP
.B   String Get() const
Convert the whole structure to an ASCII string description
and return it.
.TP
.B   inline WordContext* GetContext() 
Return a pointer to the WordContext object used to create
this instance.
.TP
.B   inline const WordContext* GetContext() const 
Return a pointer to the WordContext object used to create
this instance as a const.
.TP
.B   int Write(FILE* f) const
Print object in ASCII form on descriptor
.B f
using the
Get method.
.PP

.SH AUTHORS
Loic Dachary loic@gnu.org

The Ht://Dig group http://dev.htdig.org/


.SH SEE ALSO
htdb_dump(1), htdb_stat(1), htdb_load(1), mifluzdump(1), mifluzload(1), mifluzsearch(1), mifluzdict(1), WordContext(3), WordList(3), WordDict(3), WordListOne(3), WordKey(3), WordKeyInfo(3), WordType(3), WordDBInfo(3), WordRecordInfo(3), WordReference(3), WordCursor(3), WordCursorOne(3), WordMonitor(3), Configuration(3), mifluz(3)

