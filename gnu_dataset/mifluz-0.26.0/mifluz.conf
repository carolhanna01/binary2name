#
# mifluz(3) configuration file
#
# All the configuration parameter known by mifluz are listed
# here with their default values. To change a value, uncomment
# the corresponding line and set your own value. If the value
# is ... it means that there is no default value for this parameter.
#
# A digit is considered a valid character within a word if
# this configuration parameter is set to 'true' otherwise
# it is an error to insert a word containing digits.
# See the "Normalize" method for more information.
#
#wordlist_allow_numbers: false
#
#
# If true all "Insert" calls are cached in memory. When the 
# WordList object is closed or a different access method is called
# the cached entries are flushed in the inverted index.
#
#wordlist_cache_inserts: false
#
#
# Maximum size of the cumulated cache files generated when doing bulk
# insertion with the "BatchStart()" function. When this limit is
# reached, the cache files are all merged into the inverted index. 
# The value 0 means infinite size allowed.
# See WordList(3) for the rationale behind cache file handling.
#
#wordlist_cache_max: 0
#
#
# Berkeley DB cache size (see Berkeley DB documentation)
# Cache makes a huge difference in performance. It must be at least 2%
# of the expected total data size. Note that if compression is activated
# the data size is eight times larger than the actual file size. In this
# case the cache must be scaled to 2% of the data size, not 2% 
# of the file size. See "Cache tuning" in the mifluz guide for
# more hints.
# See WordList(3) for the rationale behind cache file handling.
#
#wordlist_cache_size: 512000
#
#
# Activate compression of the index. The resulting index is eight times
# smaller than the uncompressed index.
#
#wordlist_compress: false
#
#
# Only valid if 'wordlist_env_share' set to 'true.'
# Specify the directory in which the sharable environment will 
# be created. All
# inverted indexes specified with a non-absolute pathname will be
# created relative to this directory.
#
#wordlist_env_dir: .
#
#
# If true a sharable environment is open or created if none exist.
#
#wordlist_env_share: false
#
#
# If true no environment is created at all. This must never 
# be used if a 'WordList' object is created. It may be
# useful if only 'WordKey' objects are used, for instance.
#
#wordlist_env_skip: false
#
#
# If "true" maintain reference count of unique 
# words. The "Noccurrence" method gives access to this count.
#
#wordlist_extend: false
#
#
# If a word contains upper case letters it is converted to lowercase
# if this configuration parameter is true, otherwise it is left
# untouched.
#
#wordlist_lowercase: true
#
#
# The maximum length of a word.
# See the "Normalize" method for more information.
#
#wordlist_maximum_word_length: 25
#
#
# The minimum length of a word.
# See the "Normalize" method for more information.
#
#wordlist_mimimun_word_length: 3
#
#
# If true create a 'WordMonitor' instance to gather statistics and 
# build reports.
#
#wordlist_monitor: false
#
#
# Print reports on "file" instead of the default "stderr".
# If "type" is set to "rrd" the output is fit for the
# 'benchmark-report" script. Otherwise it a (hardly :-) readable
# string.
#
#wordlist_monitor_output: stderr
#
#
# If the value "sec" is a positive integer, set a timer to
# print reports every "sec" seconds. The timer is set using
# the ALRM signal and will fail if the calling application already
# has a handler on that signal.
#
#wordlist_monitor_period: 0
#
#
# Berkeley DB page size (see Berkeley DB documentation)
#
#wordlist_page_size: 8192
#
#
# If a word is too long according to
# the 'wordlist_maximum_word_length' it is truncated
# if this configuration parameter is 'true' otherwise it
# is considered an invalid word.
#
#wordlist_truncate: true
#
#
# A list of punctuation characters that may appear in a word. 
# These characters will be removed from the word before insertion
# in the index.
#
#wordlist_valid_punctuation: ...
#
#
# Set the verbosity level of the WordList class. 
#
# 1 walk logic
#
# 2 walk logic details
#
# 3 walk logic lots of details
#
#wordlist_verbose: 0
#
#
# Describe the structure of the inverted index key.
# In the following explanation of the '<desc>' format,
# mandatory words are
# in bold and values that must be replaced in italic.
#
# "Word" 'bits/name bits'[/...]
#
# The 'name' is an alphanumerical symbolic name for the key field.
# The 'bits' is the number of bits required to store this field.
# Note that all values are stored in unsigned integers (unsigned int).
# Example:
#
# Word 8/Document 16/Location 8
#
#
#wordlist_wordkey_description: ...
#
#
# A white space separated list of field numbers that define a document.
# The field number list must not contain gaps. For instance 1 2 3 is 
# valid but 1 3 4 is not valid.
# This configuration parameter is not used by the mifluz library
# but may be used by a query application to define the semantic of 
# a document. In response to a query, the application will return a
# list of results in which only distinct documents will be shown.
#
#wordlist_wordkey_document: ...
#
#
# NONE: the record is empty
#
# DATA: the record contains an integer (unsigned int)
#
# STR: the record contains a string (String)
#
#wordlist_wordrecord_description: ...
#
#
