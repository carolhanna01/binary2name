 /*
**	    // F1 //
**	Panorama format
**
** Copyright (C) 2000 MEDERNACH Emmanuel <medernac@isty-info.uvsq.fr>
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
**  
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**  
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**  
*/

#include "materials.inc"

define material body
{
  bsdf : class BsdfPhong
  {
    exponent    50
  }
  ambient       0.4
  diffuse       0.3
  specular      0.2
}


define camera c
{
  translate	<-30, 40, -80>
  //translate	<-30, 40, -80>
  look_at	  <0, 0, 0>
}

define light l 
{
  translate <0, 20, -30>
  intensity    5
}

define cylinder roue
{
  scale         <8, 3, 8>
  rotate	<0, 0, 90>
  material : extends body
  {
    color	{ red .3 green .3 blue .3 }
  }
}

/*

eye :
[0 ; 40 ; -80]

object :
[-16 .. +16 ; 0 ; -16 .. +48]

*/

rectangle
{
  <-20, 6, -20>
  < 20, 6, -20>
  < 20, 6, -16>
  <-20, 6, -16>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  <-20, 0, -20>
  < 20, 0, -20>
  < 20, 0, -16>
  <-20, 0, -16>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  <-8, 0, 60>
  < 8, 0, 60>
  < 8, 0, -16>
  <-8, 0, -16>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  <-16, 0, 40>
  < 16, 0, 40>
  < 16, 0, -6>
  <-16, 0, -6>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  <-24, 0, 20>
  < 24, 0, 20>
  < 24, 0, 6>
  <-24, 0, 6>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  < -8, 0, 40>
  < -4, 8, 20>
  < -4, 8, -6>
  < -8, 0, -6>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  < 8, 0, 40>
  < 4, 8, 20>
  < 4, 8, -6>
  < 8, 0, -6>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  < -8, 0, 40>
  < -4, 8, 20>
  < 4,  8, 20>
  < 8,  0, 40>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

rectangle
{
  < -8, 0, -6>
  < -4, 8, -6>
  < 4,  8, -6>
  < 8,  0, -6>
  one_sided	off
  material : extends body
  {
    color	CRed
  }
}

define cylinder c1
{
  scale		<0.5, 16, 0.5>
  rotate	<0, 0, 90>
  material : extends body
  {
    color	CWhite
  }
}

/*
cylinder 
{
  scale		<8, 1, 48>
  translate	<0,2,16>
  material : extends body
  {
    color	CRed
  }
}

cylinder 
{
  scale		<8, 8, 4>
  translate	<0, 2, 16>
  rotate	<90, 0, 0>
  material : extends body
  {
    color	CWhite
  }
}
*/

cylinder : extends roue
{
  translate	<20, 0, 48>
}

cylinder : extends roue
{
  translate	<20, 0, -16>
}

cylinder : extends roue
{
  translate	<-20, 0, 48>
}

cylinder : extends roue
{
  translate	<-20, 0, -16>
}

cylinder : extends c1
{
  translate	<0, 0, 48>
}

cylinder : extends c1
{
  translate	<0, 0, -16>
}


scene
{
  camera	c
  light		l
  width		100
  height	100
  background  CBlack //CWhite //CBlack
  output
  {
    type        "png"
    name	"f1_1_3.png"
  }
  renderer : class Raytracer
  {
    sampling    "uniform"
  }
}
