Things we plan to do, but either didn't have time yet or want to put more
thought into it:

* getclose.c - rewrite to use dates from expanded index instead of parsing the 
  Audit-Trail.
* pr-age.c - rewrite to use dates from expanded index instead of parsing
  Arrival-Date.
* pr-stat.c - rewrite to use dates from expanded index instead of parsing the 
  Audit-Trail and Arrival-Date.
* make the elisp mode for edit-pr track the Synopsis, the way the script does
* allow multiple -t options
* compile the regexps in query-pr earlier
* make the field names configurable at build time
* Generalize the system so it can have a stub to handle mail that comes
  in without a PR form enclosed.  For example, regexps to glean what
  the category should be given the available information.
* totally rework the $(libdir)/gnats/SITE files
* clean up the logging stuff in file-pr
* make category changes more intelligent -- send notification to involved
  parties, understand replies to old categories, treat pending less like a
  real category 
* deja-gnu regression tests
* allow specification of ACKNOWLEDGE on a submitter basis
* support category aliases
* make gnats-adm/index a dbm file for speed
* make gnats-mode's locking more like emacs' locking of files in general 
  (i.e. only when modified); first-change-hook in Emacs 19 should be useful
* add logical negation of the search rules for query-pr
* dist targets in the Makefiles
* fixup "//" in paths

Things we'd like to see happen (using the routines in libgnats should help):
* a GNATS administration front-end, to make coordination of the files and other
  things more useful

Things we're thinking about:
* use forms mode for the elisp send-pr?
* cache query-pr results?
* allow PRs to reside in multiple categories
