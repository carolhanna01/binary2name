This is libavl.info, produced by makeinfo version 4.0b from libavl.texi.


File: libavl.info,  Node: Catalogue of Algorithms,  Next: Index,  Prev: Answers to All the Exercises,  Up: Top

Appendix E Catalogue of Algorithms
**********************************

   This appendix lists all of the algorithms described and implemented
in this book, along with page number references.  Each algorithm is
listed under the least-specific type of tree to which it applies, which
is not always the same as the place where it is introduced.  For
instance, rotations on threaded trees can be used in any threaded tree,
so they appear under "Threaded Binary Search Tree Algorithms", despite
their formal introduction later within the threaded AVL tree chapter.

   Sometimes multiple algorithms for accomplishing the same task are
listed.  In this case, the different algorithms are qualified by a few
descriptive words.  For the algorithm used in `libavl', the description
is enclosed by parentheses, and the description of each alternative
algorithm is set off by a comma.

Binary Search Tree Algorithms
=============================

Advancing a traverser:
                                         *Note catalogue-entry-bst-17::

Backing up a traverser:
                                         *Note catalogue-entry-bst-18::

Balancing:
                                         *Note catalogue-entry-bst-27::

Copying (iterative; robust):
                                         *Note catalogue-entry-bst-23::

Copying, iterative:
                                         *Note catalogue-entry-bst-22::

Copying, recursive:
                                         *Note catalogue-entry-bst-21::

Copying, recursive; robust, version 1:
                                         *Note catalogue-entry-bst-46::

Copying, recursive; robust, version 2:
                                         *Note catalogue-entry-bst-47::

Copying, recursive; robust, version 3:
                                         *Note catalogue-entry-bst-48::

Creation:
                                          *Note catalogue-entry-bst-0::

Deletion (iterative):
                                          *Note catalogue-entry-bst-4::

Deletion, by merging:
                                          *Note catalogue-entry-bst-5::

Deletion, special case for no left child:
                                         *Note catalogue-entry-bst-40::

Deletion, with data modification:
                                         *Note catalogue-entry-bst-41::

Destruction (by rotation):
                                         *Note catalogue-entry-bst-24::

Destruction, iterative:
                                         *Note catalogue-entry-bst-26::

Destruction, recursive:
                                         *Note catalogue-entry-bst-25::

Getting the current item in a traverser:
                                         *Note catalogue-entry-bst-19::

Initialization of traverser as copy:
                                         *Note catalogue-entry-bst-15::

Initialization of traverser to found item:
                                         *Note catalogue-entry-bst-13::

Initialization of traverser to greatest item:
                                         *Note catalogue-entry-bst-12::

Initialization of traverser to inserted item:
                                         *Note catalogue-entry-bst-14::

Initialization of traverser to least item:
                                         *Note catalogue-entry-bst-11::

Initialization of traverser to null item:
                                         *Note catalogue-entry-bst-10::

Insertion (iterative):
                                          *Note catalogue-entry-bst-2::

Insertion, as root:
                                          *Note catalogue-entry-bst-3::

Insertion, as root, of existing node in arbitrary subtree:
                                         *Note catalogue-entry-bst-38::

Insertion, as root, of existing node in arbitrary subtree, robustly:
                                         *Note catalogue-entry-bst-39::

Insertion, using pointer to pointer:
                                         *Note catalogue-entry-bst-36::

Join, iterative:
                                         *Note catalogue-entry-bst-49::

Join, recursive:
                                         *Note catalogue-entry-bst-31::

Refreshing of a traverser (general):
                                          *Note catalogue-entry-bst-9::

Refreshing of a traverser, optimized:
                                         *Note catalogue-entry-bst-45::

Replacing the current item in a traverser:
                                         *Note catalogue-entry-bst-20::

Rotation, left:
                                         *Note catalogue-entry-bst-35::

Rotation, left double:
                                         *Note catalogue-entry-bst-32::

Rotation, right:
                                         *Note catalogue-entry-bst-34::

Rotation, right double:
                                         *Note catalogue-entry-bst-33::

Search:
                                          *Note catalogue-entry-bst-1::

Traversal (iterative; convenient, reliable):
                                         *Note catalogue-entry-bst-16::

Traversal, iterative:
                                          *Note catalogue-entry-bst-7::

Traversal, iterative; convenient:
                                          *Note catalogue-entry-bst-8::

Traversal, iterative; convenient, reliable:
                                         *Note catalogue-entry-bst-44::

Traversal, iterative; with dynamic stack:
                                         *Note catalogue-entry-bst-43::

Traversal, level order:
                                         *Note catalogue-entry-bst-37::

Traversal, recursive:
                                          *Note catalogue-entry-bst-6::

Traversal, recursive; with nested function:
                                         *Note catalogue-entry-bst-42::

Vine compression:
                                         *Note catalogue-entry-bst-30::

Vine from tree:
                                         *Note catalogue-entry-bst-28::

Vine to balanced tree:
                                         *Note catalogue-entry-bst-29::

AVL Tree Algorithms
===================

Advancing a traverser:
                                          *Note catalogue-entry-avl-7::

Backing up a traverser:
                                          *Note catalogue-entry-avl-8::

Copying (iterative):
                                          *Note catalogue-entry-avl-9::

Deletion (iterative):
                                          *Note catalogue-entry-avl-2::

Deletion, with data modification:
                                         *Note catalogue-entry-avl-11::

Initialization of traverser to found item:
                                          *Note catalogue-entry-avl-6::

Initialization of traverser to greatest item:
                                          *Note catalogue-entry-avl-5::

Initialization of traverser to inserted item:
                                          *Note catalogue-entry-avl-3::

Initialization of traverser to least item:
                                          *Note catalogue-entry-avl-4::

Insertion (iterative):
                                          *Note catalogue-entry-avl-0::

Insertion, recursive:
                                          *Note catalogue-entry-avl-1::

Insertion, with bitmask:
                                         *Note catalogue-entry-avl-10::

Red-Black Tree Algorithms
=========================

Deletion (iterative):
                                           *Note catalogue-entry-rb-2::

Deletion, with data modification:
                                           *Note catalogue-entry-rb-3::

Insertion (iterative):
                                           *Note catalogue-entry-rb-0::

Insertion, initial black:
                                           *Note catalogue-entry-rb-1::

Threaded Binary Search Tree Algorithms
======================================

Advancing a traverser:
                                        *Note catalogue-entry-tbst-10::

Backing up a traverser:
                                        *Note catalogue-entry-tbst-11::

Balancing:
                                        *Note catalogue-entry-tbst-15::

Copying:
                                        *Note catalogue-entry-tbst-13::

Copying a node:
                                        *Note catalogue-entry-tbst-12::

Creation:
                                         *Note catalogue-entry-tbst-0::

Deletion (parent tracking):
                                         *Note catalogue-entry-tbst-3::

Deletion, with data modification:
                                        *Note catalogue-entry-tbst-21::

Deletion, with parent node algorithm:
                                        *Note catalogue-entry-tbst-20::

Destruction:
                                        *Note catalogue-entry-tbst-14::

Initialization of traverser as copy:
                                         *Note catalogue-entry-tbst-9::

Initialization of traverser to found item:
                                         *Note catalogue-entry-tbst-7::

Initialization of traverser to greatest item:
                                         *Note catalogue-entry-tbst-6::

Initialization of traverser to inserted item:
                                         *Note catalogue-entry-tbst-8::

Initialization of traverser to least item:
                                         *Note catalogue-entry-tbst-5::

Initialization of traverser to null item:
                                         *Note catalogue-entry-tbst-4::

Insertion:
                                         *Note catalogue-entry-tbst-2::

Parent of a node:
                                        *Note catalogue-entry-tbst-19::

Rotation, left:
                                        *Note catalogue-entry-tbst-23::

Rotation, right:
                                        *Note catalogue-entry-tbst-22::

Search:
                                         *Note catalogue-entry-tbst-1::

Vine compression:
                                        *Note catalogue-entry-tbst-18::

Vine from tree:
                                        *Note catalogue-entry-tbst-16::

Vine to balanced tree:
                                        *Note catalogue-entry-tbst-17::

Threaded AVL Tree Algorithms
============================

Copying a node:
                                         *Note catalogue-entry-tavl-4::

Deletion (without stack):
                                         *Note catalogue-entry-tavl-3::

Deletion, with data modification:
                                         *Note catalogue-entry-tavl-6::

Deletion, with stack:
                                         *Note catalogue-entry-tavl-7::

Insertion:
                                         *Note catalogue-entry-tavl-0::

Rotation, left double, version 1:
                                         *Note catalogue-entry-tavl-1::

Rotation, left double, version 2:
                                         *Note catalogue-entry-tavl-5::

Rotation, right double:
                                         *Note catalogue-entry-tavl-2::

Threaded Red-Black Tree Algorithms
==================================

Deletion (with stack):
                                          *Note catalogue-entry-trb-1::

Deletion, with data modification:
                                          *Note catalogue-entry-trb-3::

Deletion, without stack:
                                          *Note catalogue-entry-trb-4::

Insertion (with stack):
                                          *Note catalogue-entry-trb-0::

Insertion, without stack:
                                          *Note catalogue-entry-trb-2::

Right-Threaded Binary Search Tree Algorithms
============================================

Advancing a traverser:
                                        *Note catalogue-entry-rtbst-7::

Backing up a traverser:
                                        *Note catalogue-entry-rtbst-8::

Balancing:
                                       *Note catalogue-entry-rtbst-12::

Copying:
                                       *Note catalogue-entry-rtbst-10::

Copying a node:
                                        *Note catalogue-entry-rtbst-9::

Deletion (left-looking):
                                        *Note catalogue-entry-rtbst-3::

Deletion, right-looking:
                                        *Note catalogue-entry-rtbst-2::

Deletion, with data modification, left-looking:
                                       *Note catalogue-entry-rtbst-16::

Deletion, with data modification, right-looking:
                                       *Note catalogue-entry-rtbst-15::

Destruction:
                                       *Note catalogue-entry-rtbst-11::

Initialization of traverser to found item:
                                        *Note catalogue-entry-rtbst-6::

Initialization of traverser to greatest item:
                                        *Note catalogue-entry-rtbst-5::

Initialization of traverser to least item:
                                        *Note catalogue-entry-rtbst-4::

Insertion:
                                        *Note catalogue-entry-rtbst-1::

Rotation, left:
                                       *Note catalogue-entry-rtbst-18::

Rotation, right:
                                       *Note catalogue-entry-rtbst-17::

Search:
                                        *Note catalogue-entry-rtbst-0::

Vine compression:
                                       *Note catalogue-entry-rtbst-14::

Vine from tree:
                                       *Note catalogue-entry-rtbst-13::

Right-Threaded AVL Tree Algorithms
==================================

Copying:
                                        *Note catalogue-entry-rtavl-2::

Copying a node:
                                        *Note catalogue-entry-rtavl-3::

Deletion (left-looking):
                                        *Note catalogue-entry-rtavl-1::

Deletion, right-looking:
                                        *Note catalogue-entry-rtavl-4::

Deletion, with data modification:
                                        *Note catalogue-entry-rtavl-5::

Insertion:
                                        *Note catalogue-entry-rtavl-0::

Right-Threaded Red-Black Tree Algorithms
========================================

Deletion:
                                         *Note catalogue-entry-rtrb-1::

Insertion:
                                         *Note catalogue-entry-rtrb-0::

Binary Search Tree with Parent Pointers Algorithms
==================================================

Advancing a traverser:
                                         *Note catalogue-entry-pbst-6::

Backing up a traverser:
                                         *Note catalogue-entry-pbst-7::

Balancing (with later parent updates):
                                         *Note catalogue-entry-pbst-9::

Balancing, with integrated parent updates:
                                        *Note catalogue-entry-pbst-12::

Copying:
                                         *Note catalogue-entry-pbst-8::

Deletion:
                                         *Note catalogue-entry-pbst-1::

Initialization of traverser to found item:
                                         *Note catalogue-entry-pbst-4::

Initialization of traverser to greatest item:
                                         *Note catalogue-entry-pbst-3::

Initialization of traverser to inserted item:
                                         *Note catalogue-entry-pbst-5::

Initialization of traverser to least item:
                                         *Note catalogue-entry-pbst-2::

Insertion:
                                         *Note catalogue-entry-pbst-0::

Rotation, left:
                                        *Note catalogue-entry-pbst-16::

Rotation, right:
                                        *Note catalogue-entry-pbst-15::

Update parent pointers:
                                        *Note catalogue-entry-pbst-11::

Vine compression (with parent updates):
                                        *Note catalogue-entry-pbst-14::

Vine to balanced tree (without parent updates):
                                        *Note catalogue-entry-pbst-10::

Vine to balanced tree, with parent updates:
                                        *Note catalogue-entry-pbst-13::

AVL Tree with Parent Pointers Algorithms
========================================

Copying:
                                         *Note catalogue-entry-pavl-2::

Deletion:
                                         *Note catalogue-entry-pavl-1::

Insertion:
                                         *Note catalogue-entry-pavl-0::

Red-Black Tree with Parent Pointers Algorithms
==============================================

Deletion:
                                          *Note catalogue-entry-prb-1::

Insertion:
                                          *Note catalogue-entry-prb-0::

