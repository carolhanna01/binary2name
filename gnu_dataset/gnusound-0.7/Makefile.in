#
# GNUsound main Makefile.
# Copyright (C) 2002-2004  Pascal Haakmat <a.haakmat@chello.nl>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
export CFLAGS=@CFLAGS@ \
	-DLIBDIR="${libdir}" \
	-DGUIDIR="${libdir}/gui" \
	-DSYSCONFDIR="${sysconfdir}" \
	-DPREFIX="${prefix}" \
	-DDATADIR="${datadir}" 
export LDFLAGS=@LIBS@ @LDFLAGS@

name=@PACKAGE@
version=@VERSION@
prefix=@prefix@
sysconfdir=@sysconfdir@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@/$(name)
datadir=@datadir@

owner_user ?= root
owner_group ?= root

gnusounddir=@GNUSOUNDDIR@
guidir=$(libdir)/gui
docdir=$(datadir)/gnome/help/$(name)
docdir_C=$(docdir)/C
desktopdir=$(datadir)/gnome/apps/Multimedia
desktop_files=$(name).desktop
pkgconfigdir=$(libdir)/pkgconfig
pkgconfig_files=gnusound-module.pc
clean_files=$(objects) core core.* src/$(name) src/tests.o src/tests .build-program .build-tests
gui_files=gui/*.xpm gui/*.glade gui/*.rc
ifeq (@HAVE_GNOME2@,yes)
gtk=gtk2
else
gtk=gtk1
endif
CFLAGS:=$(CFLAGS) -Isrc -Isrc/$(gtk)
objects=$(gtk)/combo_box.o		\
	$(gtk)/timeline.o		\
	$(gtk)/gui_letterbox.o		\
	$(gtk)/gui_file_selector.o	\
	$(gtk)/gui_dialogs.o		\
	$(gtk)/gui_gtk.o		\
	lib/minmax.o	\
	lib/aclib.o	\
	lib/cpudetect.o \
	lib/misc.o	\
	emergency.o	\
	error.o		\
	rwlock.o	\
	mem.o		\
	pref.o		\
	region.o	\
	constraints.o	\
	marker.o	\
	module.o	\
	sample.o	\
	resample.o	\
	cache.o		\
	block.o		\
	blocklist.o	\
	track.o		\
	snd.o		\
	mixer.o		\
	clip.o		\
	grid.o		\
	history.o	\
	draw.o		\
	draw_hooks.o	\
	player.o	\
	player_dummy.o	\
	msg.o		\
	cmd.o		\
	cmd_shell.o	\
	cmd_file.o	\
	cmd_edit.o	\
	cmd_markers.o	\
	cmd_select.o	\
	cmd_view.o	\
	cmd_play.o	\
	cmd_events.o	\
	cmd_mixer.o	\
	tool.o		\
	gui.o		\
	pane.o		\
	dialog.o	\
	dialog_pref.o		\
	dialog_props.o		\
	dialog_mixdown.o	\
	dialog_format.o		\
	dialog_format_save.o	\
	dialog_format_mixdown.o	\
	view.o			\
	view_callbacks.o	\
	shell.o		\
	clipboard.o	\
	file.o		\
	arbiter.o	\
	main.o
objects:=$(addprefix src/,$(objects))

dist_files=config doc modules gui src *.in *.ac *.desktop \
	NOTES README LICENSE INSTALL CHANGES TODO configure autogen.sh 
install_files=$(bindir)/$(name) \
	$(addprefix $(desktopdir)/,$(notdir $(desktop_files))) \
	$(addprefix $(guidir)/,$(notdir $(gui_files))) 

distclean_files=*.gladep *.bak *~ .\\\#* \\\#* config.log config.status config.cache defines.h config/stamp-h stamp-h1 $(name)-*.tar.bz2 $(name)-*.tar doc/Makefile modules/Makefile .cflags .ldflags *.spec *.pc *.desktop aclocal.m4 

all: program mods

tests: .build-tests .ldflags buildcore src/tests.o
	rm -f tests
	$(CC) `cat .ldflags` $(filter-out main.o,$(objects)) src/tests.o -o src/tests

program: .build-program .cflags $(objects) src/$(name)

.build-program:
	rm -f .cflags .build-tests
	touch .build-program

.build-tests:
	rm -f .cflags .build-program
	echo '$(CFLAGS) -DTESTING' > .cflags
	touch .build-tests

.cflags: Makefile
	echo '$(CFLAGS)' > .cflags

.ldflags: Makefile
	echo '$(LDFLAGS)' > .ldflags

mods:
	$(MAKE) -C modules

$(objects): %.o: %.c src/config.h src/defines.h .cflags
	$(CC) `cat .cflags` -c $< -o $@

src/$(name): $(objects) .ldflags
	rm -f src/$(name)
	$(CC) `cat .ldflags` $(objects) -o src/$(name)

install: all 
	$(MAKE) -C doc install owner_user=$(owner_user) owner_group=$(owner_group)
	$(MAKE) -C modules install owner_user=$(owner_user) owner_group=$(owner_group)
	mkdir -p $(bindir)
	mkdir -p $(guidir)
	mkdir -p $(desktopdir)
	install -m 755 -o $(owner_user) -g $(owner_group) src/$(name) $(bindir)
	install -m 644 -o $(owner_user) -g $(owner_group) $(gui_files) $(guidir)
	install -m 644 -o $(owner_user) -g $(owner_group) $(desktop_files) $(desktopdir)

uninstall:
	$(MAKE) -C modules uninstall
	$(MAKE) -C doc uninstall
	@rm -fv $(install_files)
	rmdir $(guidir)
	rmdir $(libdir)
	rmdir --ignore-fail-on-non-empty $(desktopdir)

clean:
	$(MAKE) -C modules clean
	$(MAKE) -C doc clean
	rm -f $(clean_files)

veryclean: clean
	$(MAKE) -C modules veryclean
	$(MAKE) -C doc veryclean
	rm -rf autom4te*.cache
	rm -rf distcheck
	$(foreach rubbish,$(distclean_files), \
		$(shell find -name '$(rubbish)' \
		-exec rm -vf \{\} > /dev/null \;))

distclean: veryclean
	rm -rf $(name)-$(version)
	$(MAKE) -C modules distclean
	$(MAKE) -C doc distclean
# The Makefile itself has to be the last file we delete.
	rm -f Makefile

dist: clean
	$(MAKE) -C doc clean
	$(MAKE) -C modules clean
	$(MAKE) -C doc dist
	rm -rf $(name)-$(version)
	mkdir $(name)-$(version)
	cp -a $(dist_files) $(name)-$(version)
	tar cf $(name)-$(version).tar $(name)-$(version)
	rm -f $(name)-$(version).tar.bz2
	bzip2 -9 $(name)-$(version).tar
	rm -rf $(name)-$(version)

distcheck: dist
	rm -rf distcheck
	mkdir -p distcheck/install
	cp $(name)-$(version).tar.bz2 distcheck
	(cd distcheck && \
		tar xjf $(name)-$(version).tar.bz2 && \
		cd $(name)-$(version) && \
		./configure --prefix=`pwd`/../install CFLAGS= && \
		make && \
		make install owner_user=`whoami` owner_group=`whoami`)

maintainer-install: dist
	tar xjf $(name)-$(version).tar.bz2 
	cd $(name)-$(version) && ./configure; make; su -c 'make install'

.PHONY=all program mods clean distclean veryclean dist distcheck install uninstall maintainer-install
