/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Thu Apr  8 09:13:15 2004
 */

#include <config.h>
#include <gnome.h>
#include "view.h"

#ifndef VIEW_CALLBACKS_H

void
view_infocanvas_size_request(GtkWidget *widget, 
                             GtkRequisition *requisition,
                             struct view *view);

gboolean
view_infocanvas_expose_event ( GtkWidget *widget, GdkEventExpose *event, struct view *view );
gboolean
view_infocanvas_button_press_event ( GtkWidget *widget, GdkEventButton *event, struct view *view );
gboolean
view_mixercanvas_expose_event ( GtkWidget *widget, GdkEventExpose *event, struct view *view );
gint
view_mixercanvas_configure_event ( GtkWidget *widget, GdkEventConfigure *event, struct view *view );
gboolean
view_mixercanvas_button_press_event ( GtkWidget *widget, GdkEventButton *event, struct view *view );
gboolean
view_mixercanvas_motion_notify_event ( GtkWidget *widget, GdkEventMotion *event, struct view *view );
gboolean
view_mixercanvas_button_release_event ( GtkWidget *widget, GdkEventButton *event, struct view *view );
void
view_vadjust_value_changed ( GtkAdjustment *adj, struct view *view );
void
view_hadjust_value_changed ( GtkAdjustment *adj, struct view *view );
void
view_shell_size_allocate ( GtkWidget *widget, GtkAllocation *allocation, struct view *view );
gboolean
view_shell_focus_in_event ( GtkWidget *widget, GdkEventFocus *event, struct view *view );
gboolean
view_shell_focus_out_event ( GtkWidget *widget, GdkEventFocus *event, struct view *view );
void
view_shell_destroy ( GtkWidget *w, struct view *view );

gboolean
view_shell_delete_event(GtkWidget *w,
                        GdkEvent *ev,
                        shell *shl);

gboolean
view_wavecanvas_expose_event ( GtkWidget *widget, GdkEventExpose *event, struct view *view );
gint
view_wavecanvas_configure_event ( GtkWidget *widget, GdkEventConfigure *event, struct view *view );
gboolean
view_wavecanvas_key_press_event ( GtkWidget *w, GdkEventKey *event, struct view *view );
gboolean
view_wavecanvas_key_release_event ( GtkWidget *w, GdkEventKey *event, struct view *view );
gboolean
view_wavecanvas_button_press_event ( GtkWidget *widget, GdkEventButton *event, struct view *view );
gboolean
view_wavecanvas_motion_notify_event ( GtkWidget *widget, GdkEventMotion *event, struct view *view );
gboolean
view_wavecanvas_button_release_event ( GtkWidget *widget, GdkEventButton *event, struct view *view );

gboolean 
view_wavecanvas_enter_notify_event(GtkWidget *widget,
                                   GdkEventCrossing *event,
                                   struct view *view);
 
gboolean 
view_wavecanvas_leave_notify_event(GtkWidget *widget,
                                   GdkEventCrossing *event,
                                   struct view *view);

gboolean 
view_wavecanvas_visibility_notify_event(GtkWidget *widget,
                                        GdkEventVisibility *event,
                                        struct view *view);

#ifdef HAVE_GNOME2
gboolean
view_wavecanvas_scroll_event(GtkWidget *widget,
                             GdkEventScroll *event,
                             struct view *view);
#endif

void
view_grid_bpm_value_changed(GtkSpinButton *spinbutton,
                            struct view *view);

void
view_grid_units_value_changed(GtkSpinButton *spinbutton,
                              struct view *view);

void
view_grid_bpm_changed(GtkSpinButton *spinbutton,
                      struct view *view);

void
view_grid_units_changed(GtkSpinButton *spinbutton,
                        struct view *view);

void
view_grid_measurement_changed(GtkWidget *widget,
                              struct view *view);

void
view_new_activate(GtkWidget *w,
                  struct view *view);

void
view_open_activate(GtkWidget *w,
                   struct view *view);

void
view_mixdown_activate(GtkWidget *w,
                      struct view *view);

void
view_saveas_activate(GtkWidget *w,
                     struct view *view);

void
view_save_activate(GtkWidget *w,
                   struct view *view);

void
view_close_activate(GtkWidget *w,
                    struct view *view);

void
view_exit_activate(GtkWidget *w,
                   struct view *view);


void 
view_undo_activate(GtkMenuItem *menuitem,
                   struct view *view);

void 
view_redo_activate(GtkMenuItem *menuitem,
                   struct view *view);

void 
view_copy_activate(GtkMenuItem *menuitem,
                   struct view *view);

void 
view_paste_activate(GtkMenuItem *menuitem,
                    struct view *view);

void 
view_paste_fit_activate(GtkMenuItem *menuitem,
                        struct view *view);

void 
view_paste_mix_activate(GtkMenuItem *menuitem,
                        struct view *view);

void 
view_paste_over_activate(GtkMenuItem *menuitem,
                         struct view *view);

void
view_insert_tracks_activate(GtkMenuItem *menuitem,
                            struct view *view);

void 
view_delete_tracks_activate(GtkMenuItem *menuitem,
                            struct view *view);

void
view_cut_activate(GtkMenuItem *menuitem,
                  struct view *shl);

void 
view_clear_activate(GtkMenuItem *menuitem,
                    struct view *shl);

void 
view_erase_activate(GtkMenuItem *menuitem,
                    struct view *shl);

void 
view_crop_activate(GtkMenuItem *menuitem,
                   struct view *shl);

void 
view_push_left_activate(GtkMenuItem *menuitem,
                        struct view *view);

void 
view_push_right_activate(GtkMenuItem *menuitem,
                         struct view *view);

void 
view_shove_left_activate(GtkMenuItem *menuitem,
                         struct view *view);

void 
view_shove_right_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_properties_activate(GtkMenuItem *menuitem,
                         struct view *view);

void 
view_show_clipboard_activate(GtkMenuItem *menuitem,
                             struct view *view);

void
view_zoom_activate(GtkWidget *w,
                   struct view *view);

void
view_zoom_in_activate(GtkWidget *w,
                      struct view *view);

void
view_zoom_out_activate(GtkWidget *w,
                       struct view *view);

void
view_smaller_activate(GtkWidget *w,
                      struct view *view);

void
view_bigger_activate(GtkWidget *w,
                     struct view *view);

void
view_show_zero_toggle_activate(GtkMenuItem *menuitem,
                               struct view *view);

void
view_show_envelope_toggle_activate(GtkMenuItem *menuitem,
                                   struct view *view);

void
view_show_grid_toggle_activate(GtkMenuItem *menuitem,
                               struct view *view);


void
view_left_activate(GtkMenuItem *menuitem,
                   struct view *view);

void
view_right_activate(GtkMenuItem *menuitem,
                    struct view *view);

void
view_track_down_activate(GtkMenuItem *menuitem,
                         struct view *view);

void
view_track_up_activate(GtkMenuItem *menuitem,
                       struct view *view);

void
view_left_select_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_right_select_activate(GtkMenuItem *menuitem,
                           struct view *view);

void
view_track_down_select_activate(GtkMenuItem *menuitem,
                                struct view *view);

void
view_track_up_select_activate(GtkMenuItem *menuitem,
                              struct view *view);


void
view_left_nudge_activate(GtkMenuItem *menuitem,
                             struct view *view);

void
view_right_nudge_activate(GtkMenuItem *menuitem,
                              struct view *view);

void
view_left_jump_activate(GtkMenuItem *menuitem,
                         struct view *view);

void
view_right_jump_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_select_all_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_selection_to_loop_activate(GtkMenuItem *menuitem,
                                 struct view *view);

void
view_loop_to_selection_activate(GtkMenuItem *menuitem,
                                 struct view *view);

void
view_fit_selection_to_window_activate(GtkMenuItem *menuitem,
                                       struct view *view);

void
view_center_on_selection_start_activate(GtkMenuItem *menuitem,
                                         struct view *view);

void
view_center_on_selection_end_activate(GtkMenuItem *menuitem,
                                       struct view *view);

void
view_selection_to_4_beats_activate(GtkMenuItem *menuitem,
                                    struct view *view);

void
view_snap_to_cuepoints_toggle_activate(GtkMenuItem *menuitem,
                                        struct view *view);

void
view_snap_to_grid_toggle_activate(GtkMenuItem *menuitem,
                                   struct view *view);

void
view_play_activate(GtkMenuItem *menuitem,
                    struct view *view);

void
view_stop_activate(GtkMenuItem *menuitem,
                   struct view *view);

void
view_cue_play_activate(GtkMenuItem *menuitem,
                        struct view *view);

void
view_scrub_left_pressed(GtkButton *button,
                        struct view *view);

void
view_scrub_right_pressed(GtkButton *button,
                         struct view *view);

void
view_scrub_released(GtkButton *button,
                    struct view *view);

void
view_scrub_right_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_scrub_left_activate(GtkMenuItem *menuitem,
                         struct view *view);

void
view_scrub_right_fast_activate(GtkMenuItem *menuitem,
                               struct view *view);

void
view_scrub_left_fast_activate(GtkMenuItem *menuitem,
                              struct view *view);

void
view_loop_toggle_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_record_replace_toggle_activate(GtkMenuItem *menuitem,
                                    struct view *view);

void
view_record_activate(GtkMenuItem *menuitem,
                     struct view *view);

void
view_follow_playback_toggle_activate(GtkMenuItem *menuitem,
                                     struct view *view);

void 
view_insert_envelope_activate(GtkMenuItem *menuitem,
                              struct view *view);

void
view_copy_envelopes_activate(GtkMenuItem *menuitem,
                             struct view *view);

void
view_paste_envelopes_activate(GtkMenuItem *menuitem,
                              struct view *view);

void
view_invert_envelopes_activate(GtkMenuItem *menuitem,
                               struct view *view);

void
view_delete_envelopes_activate(GtkMenuItem *menuitem,
                               struct view *view);

void 
view_insert_cuepoint_activate(GtkMenuItem *menuitem,
                              struct view *view);

void
view_copy_cuepoints_activate(GtkMenuItem *menuitem,
                             struct view *view);

void
view_paste_cuepoints_activate(GtkMenuItem *menuitem,
                              struct view *view);

void
view_delete_cuepoints_activate(GtkMenuItem *menuitem,
                               struct view *view);

void
view_delete_time_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_insert_time_activate(GtkMenuItem *menuitem,
                          struct view *view);

void
view_disable_envelopes_toggle_activate(GtkCheckMenuItem *menuitem,
                                       struct view *view);


void
view_dump_mixer_activate(GtkWidget *w,
                         struct view *view);

void
view_dump_blocks_activate(GtkWidget *w,
                          struct view *view);

void
view_dump_sound_info_activate(GtkWidget *w,
                              struct view *view);

void
view_join_blocks_activate(GtkWidget *w,
                           struct view *view);

void
view_force_sigsegv_activate(GtkWidget *w,
                             struct view *view);

void
view_fail_next_allocation_toggle_activate(GtkWidget *w,
                                           struct view *view);

void
view_step_mode_toggle_activate(GtkWidget *w,
                                  struct view *view);

void
view_draw_regionlock_toggle_activate(GtkWidget *w,
                                     struct view *view);

void
view_draw_blocks_toggle_activate(GtkWidget *w,
                                  struct view *view);

void
view_connect_samples_toggle_activate(GtkWidget *w,
                                     struct view *view);

void
view_destroy_undo_activate(GtkWidget *w,
                           struct view *view);

void
view_about_activate(GtkWidget *w,
                    struct view *view);

void
view_tool_toggled(GtkWidget *w,
                  struct view *view);

void
view_cancel_activate(GtkButton *button,
                     struct view *view);

void 
view_module_activate(GtkMenuItem *menuitem,
                     struct view *view);

void 
view_preferences_activate(GtkMenuItem *menuitem,
                          struct view *view);

gint
view_keep_scrubbing_left(gpointer userdata);

gint
view_keep_scrubbing_right(gpointer userdata);


void
view_button_rwd_button_press_event(GtkWidget *widget,
                                   GdkEventButton *event,
                                   struct view *view);

void
view_button_rwd_button_release_event(GtkWidget *widget,
                                     GdkEventButton *event,
                                     struct view *view);

void
view_button_ffwd_button_press_event(GtkWidget *widget,
                                    GdkEventButton *event,
                                    struct view *view);

void
view_button_ffwd_button_release_event(GtkWidget *widget,
                                      GdkEventButton *event,
                                      struct view *view);

void
view_button_stop_clicked(GtkWidget *widget,
                         struct view *view);

void
view_button_record_clicked(GtkWidget *widget,
                           struct view *view);

void
view_button_play_clicked(GtkWidget *widget,
                         struct view *view);

void
view_button_cueplay_clicked(GtkWidget *widget,
                            struct view *view);

#endif /* __CEXTRACT__ */
