2016-12-18  Thomas Schwinge  <thomas@codesourcery.com>

	GNU MIG 1.8
	* configure.ac (AC_INIT): Set version to 1.8.
	* NEWS: Finalize for 1.8.

2016-12-13  Thomas Schwinge  <thomas@codesourcery.com>

	Remove bullet points from NEWS file
	... to match the GNU Mach and Hurd NEWS files.

	* NEWS: Remove bullet points.

2016-12-09  Justus Winter  <justus@gnupg.org>

	Update the NEWS file

2016-10-10  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	Fix spurious warning on MACH_MSG_TYPE_POLYMORPHIC value
	* utils.c (WriteCheckDecl, WriteStaticShortDecl): Explicitly cast name to
	unsigned char to ignore truncation of MACH_MSG_TYPE_POLYMORPHIC i.e. -1.

2016-09-20  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	fix typo

2016-05-18  Thomas Schwinge  <thomas@codesourcery.com>

	GNU MIG 1.7
	* configure.ac (AC_INIT): Set version to 1.7.
	* NEWS: Finalize for 1.7.

2016-05-03  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	Add missing EXTRA_DIST
	* tests/Makefile.am (EXTRA_DIST): Add base_types.defs test_lib.sh
	includes/all.h includes/mach/mig_support.h includes/server.h
	includes/types.h includes/user.h.
	* tests/bad/Makefile.am (EXTRA_DIST): Add $(TESTS) run_bad_test.sh.
	* tests/generate-only/Makefile.am (EXTRA_DIST): Add $(TESTS)
	run_generate_only_test.sh.
	* tests/good/Makefile.am (EXTRA_DIST): Add $(TESTS) run_good_test.sh.

2016-04-26  Flavio Cruz  <flaviocruz@gmail.com>

	Simplify ArgumentType production rule.
	* parser.y: Move syColon from ArgumentType into Argument.

2016-04-20  David Michael  <fedora.dm0@gmail.com>

	Make Git ignore some more automatically generated files
	* .gitignore: Ignore parser.h and all Makefile/Makefile.in files.

	Use the target platform compiler in the test scripts
	* tests/Makeconf.am (AM_TESTS_ENVIRONMENT): Set CC to $(TARGET_CC).

2016-04-20  Justus Winter  <justus@gnupg.org>

	Update NEWS

2016-04-19  Flavio Cruz  <flaviocruz@gmail.com>

	Simple testsuite for MIG.
	This includes a set of valid and invalid definition files that MIG will
	try to process. For valid definitions, GCC will compile the stubs to
	check if valid C code was generated.

	* configure.ac: Add new test Makefiles.
	* Makefile.am: Add SUBDIRS.
	* tests/Makeconf.am: Automake definitions shared by all test
	subdirectories.
	* tests/test_lib.sh: Library of functions shared by all test drivers.
	* tests/good/run_good_test.sh: Script to run valid definition files.
	* tests/good/Makefile.am: New file.
	* tests/bad/Makefile.am: New file.
	* tests/generate-only/Makefile.am: New file.
	* tests/bad/run_bad_test.sh: Script to run invalid definition files.
	* tests/generate-only/run_generate_only.sh: Script to run valid
	definition files that should be generated only.
	* tests/includes/*.h: Test header files that are included by test stubs.
	* tests/good/*.defs: Valid definition files where
	generated stubs can be compiled.
	* tests/generate_only/*.defs: Valid definition files that can be
	generated but no compilation should be attempted.
	* tests/bad/*.defs: Definition files with problems that should be
	detected by MIG.

2016-04-15  Justus Winter  <justus@gnupg.org>

	Update NEWS file

2016-04-05  Flavio Cruz  <flaviocruz@gmail.com>

	Include stdint.h in stub code by default.
	* server.c: Include stdint.h in the header code.
	* user.c: Likewise.

2016-04-04  Flavio Cruz  <flaviocruz@gmail.com>

	Use uint32_t instead of unsigned32_t.
	* utils.c: Generate code using uint32_t.

2016-04-04  Flavio Cruz  <flaviocruz@gmail.com>

	Fix use of stringize in lexxer.l
	The fields instr and outstr should be set to a string and not to the
	stringified number represented by the string. This improves the readability of
	mig stubs code that creates mach_msg_type_t values for messages.

	* lexxer.l: Inline stringize in TPRETURN and TRETURN.

2016-04-03  Flavio Cruz  <flaviocruz@gmail.com>

	Use word_size instead of 4.
	* server.c: Use word_size and update comments.
	* type.c: Use word_size to compute padding.
	* user.c: Use word_size and update comments.

2016-03-20  Flavio Cruz  <flaviocruz@gmail.com>

	Remove functions, procedures and simple procedures.
	This has been tested by cross-compiling a base Hurd system to make sure
	these kinds of routines are no longer used.

	* lexxer.l: Remove tokens.
	* parser.y: Remove token types and production rules.
	* routine.c: Remove rtMakeProcedure, rtMakeSimpleProcedure,
	rtMakeFunction.
	* routine.h: Remove enum values rkSimpleProcedure, rkProcedure,
	rkFunction. Remove dead fields from struct routine.
	* user.c: Simplify and remove dead code.

2016-03-19  Flavio Cruz  <flaviocruz@gmail.com>

	Simpler lexer regexps of case insensitive keywords.
	* lexxer.l: Use (?i) for matching case insensitive keywords.
	* README: Fix typo.

2016-03-15  Flavio Cruz  <flaviocruz@gmail.com>

	Automatically generate parser.h.
	* Makefile.am: Set AM_YFLAGS to -d to generate parser.h. Add parser.h to
	CLEANFILES and include parser.h as a dependency of lexxer.c.
	* lexxer.l: Declare yyerror here.
	* parser.h: Remove file since yacc will generate the same content
	automatically.

2016-03-07  Flavio Cruz  <flaviocruz@gmail.com>

	Correctly initialize prototype in itAlloc.
	* type.c (itAlloc): Initialize itKernelPort to FALSE.

2016-02-09  Flavio Cruz  <flaviocruz@gmail.com>

	Cast kernel server port arguments to the correct type.
	* server.c: Add cast for ipc_port_t arguments that are handled differently.
	* type.c: Set itKernelPort when the mach_port_t is treated as a ipc_port_t.
	* type.h: Add itKernelPort to struct ipc_type.

2015-10-31  Thomas Schwinge  <thomas@codesourcery.com>

	GNU MIG 1.6
	* configure.ac (AC_INIT): Set version to 1.6.
	* NEWS: Finalize for 1.6.

2015-10-05  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Update NEWS file

2015-06-05  David Michael  <fedora.dm0@gmail.com>

	Change x_server_routine functions to "static inline" for -std=gnu11
	* header.c (WriteServerHeader): Replace "extern" with "static".
	* server.c (WriteEpilog): Remove WriteSubsystemServerRoutine call.

2015-04-10  Thomas Schwinge  <thomas@codesourcery.com>

	GNU MIG 1.5.
	* configure.ac (AC_INIT): Set version to 1.5.
	* NEWS: Finalize for 1.5.

2015-02-15  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Do not generate code dereferencing type-punned pointers
	For variable-length arrays, up to 2048 bytes are transmitted inline.
	If the array is larger, the data is transmitted out-of-line, and a
	pointer to a vm_allocated region is stored at the beginning of the
	array.

	Previously, the generated code casted the field.  Use a union instead.

	This fixes the gcc warning `dereferencing type-punned pointer will
	break strict-aliasing rules [-Wstrict-aliasing]'.

	* global.c (OOLPostfix): New variable.
	* global.h (OOLPostfix): New declaration.
	* server.c (WriteServerCallArg): Avoid cast.
	(WriteDestroyArg): Likewise.
	(WritePackArgValue): Likewise.
	(WritePackArg): Likewise.
	* user.c (WriteExtractArgValue): Likewise.
	* utils.c (WriteFieldDeclPrim): Generate a union with an additional
	pointer field for variable-length arrays.

2015-02-06  David Michael  <fedora.dm0@gmail.com>

	Test the configured yacc program
	* configure.ac (yacc_is_bison): Test the configured yacc program.

2015-02-06  Yves-Gael Cheny ( irc hurdman_begin )  <hurd@r0b0t.fr>

	Check that yacc is provided by bison
	* configure.ac: Check that yacc --version contains bison.

2014-12-01  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Add static branch prediction to type checks
	Annotate generated type checks with static branch prediction
	optimizing well-formed messages.

	* utils.c (WriteBogusDefines): Define `mig_unlikely' if not defined.
	* server.c: Use `mig_unlikely' in generated type checks.
	* user.c: Likewise.

2014-11-06  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Provide default implementations for server functions
	By providing default implementations, servers can provide partial
	implementations of protocols without having to stub out functions.

	* server.c (WriteDefaultRoutine): New function.
	(WriteRoutine): Call WriteDefaultRoutine.

2014-10-10  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Add support for protected payloads
	Add support for protected payloads. The new `intranpayload' option can
	be used to specify a translation function translating payloads to
	values of the translated type.  This function will be used instead of
	the `intran' function to to look up the receiving object of a message
	in a server.

	This makes it easy to use the protected payloads introduced in GNU
	Mach 1.5.

	An inTransPayload function translates payloads to objects, like an
	inTrans function translates from port names to objects.  Generate code
	in the server routine to optimize lookups to the receiver of the
	message.

	Additionally, if no intran function is provided, but an intranpayload
	function is, it is expected to translate from payloads to port names.
	This is used to preserve the semantics in case the server routine
	expects a port name.

	* NEWS: Add item.
	* lexxer.l: Emit syInTranPayload.
	* parser.h: Define syInTranPayload.
	* parser.y (TransTypeSpec): Handle syInTranPayload.
	* type.h (struct ipc_type): Add itInTransPayload.
	* server.c (WriteExtractArgValue): If a payload-aware intrans function
	has been specified, use it to get a reference to the receiving object.
	* routine.c (rtAugmentArgKind): Force the use of a local variable if a
	payload-aware translate-in function is defined.

2014-09-24  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Update NEWS file

2014-02-21  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Fix variable-sized c strings
	Previously, the terminating zero of variable-sized c strings was only
	included when copying the message if the length of the string was not
	a multiple of four.  mig_strncpy returns the length of the string
	excluding the terminating zero.  Fix this by properly accounting for
	the byte for the terminating zero in the array length.

	* server.c (WritePackArgValue): Account for the terminating zero in
	the array length.
	* user.c (WritePackArgValue): Likewise.

2013-12-16  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Generate a x_server_routine in the sheader so it can be inlined
	* header.c (WriteServerHeader): Emit a x_server_routine that can be
	  inlined.
	* server.c (WriteEpilog): Export the x_routines array so it can be
	  used from the inlined x_server_routine.

	Move the generation of x_server_routine function into a function
	* server.c (WriteSubsystemServerRoutine): New function.
	(WriteEpilog): Adjust accordingly.
	* write.h (WriteSubsystemServerRoutine): New declaration.

	Clean up generated sources
	* Makefile (CLEANFILES): Add generated source files lexxer.c and parser.c.

	Avoid a compiler warning in WriteDefines
	* header.c (WriteDefines): Avoid warning about unused parameter.

2013-12-16  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Advise flex not to generate the input function
	This avoids a warning about input being unused.

	* lexxer.l: Define YY_NO_INPUT.

2013-12-15  Marin Ramesa  <mpr@hi.t-com.hr>

	mig/server.c (WriteVarDecls): quiet GCC warning about set but unused variable
	This is again that code where variable is assigned to itself, but
	I don't know how to fix this the other way.

	* server.c (WriteVarDecls) (msgh_simple): Assign to itself.

2013-09-27  Thomas Schwinge  <thomas@codesourcery.com>

	GNU MIG 1.4.
	* configure.ac (AC_INIT): Set version to 1.4.
	* NEWS: Finalize changes for 1.4.
	* README: Update.

	Generate ChangeLog files for distributions.
	* gitlog-to-changelog: New file; import from gnulib's
	9fc81090f6c5590bd1b0e0fa5087577a2ee43a3e:build-aux/gitlog-to-changelog.
	* Makefile.am (gen-ChangeLog): New target.
	(dist-hook): Depend on it.

2013-09-04  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Drop the auto keyword
	Drop the auto keyword from the generated source code. auto is the
	default storage type for variables anyway and it is customary to omit
	it.

	* utils.c (WriteCheckDecl): Drop auto from generated source.
	(WriteStaticLongDecl): Likewise.
	(WriteStaticShortDecl): Likewise.

2013-08-19  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Drop alloca.c
	This file was only used with GCC < 2, so it's time to drop it.

	* alloca.c: Remove file.
	* configure.ac: Remove test for alloca.
	* Makefile.am (migcom_LDADD): Remove @ALLOCA@.

2013-08-19  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Drop the register keyword
	Drop the register keyword both from MIGs code and from the generated
	code. The register keyword is only a hint and it is ignored by modern
	compilers.

	* alloca.c: Drop the register keyword.
	* header.c: Likewise.
	* lexxer.l: Likewise.
	* parser.y: Likewise.
	* routine.c: Likewise.
	* server.c: Likewise.
	* statement.c: Likewise.
	* string.c: Likewise.
	* type.c: Likewise.
	* user.c: Likewise.
	* utils.c: Likewise.
	* vprint.c: Likewise.

2013-08-19  Justus Winter  <4winter@informatik.uni-hamburg.de>

	Remove unused file alloc.h
	* alloc.h: Remove file.
	* Makefile (migcom_SOURCES): Remove alloc.h.

2013-02-19  Olaf Buddenhagen  <antrik@gmx.net>

	Fix spurious deallocation
	* server.c (WriteDestroyArg): Only dealloc out-of-line memory from
	request message if KERN_SUCCESS.

2012-09-09  Thomas Schwinge  <thomas@codesourcery.com>

	Merge remote-tracking branch 'savannah/master'

2012-07-01  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	Merge branch 'master' of git.savannah.gnu.org:/srv/git/hurd/mig

2012-07-01  Guillem Jover  <guillem@hadrons.org>

	Fix format string build failure with _FORTIFY_SOURCE=2
	* parser.y (yyerror): Use a format string instead of directly passing
	the argument to error.

2012-03-19  Thomas Schwinge  <thomas@codesourcery.com>

	Make the installation tree relocatable.
	* mig.in: Compute a relative path from the mig to migcom.

2011-09-07  Thomas Schwinge  <thomas@schwinge.name>

	* .gitignore: Tighten some rules.

2011-08-30  Guillem Jover  <guillem@hadrons.org>

	Add silent rules support if available and disable it by default
	* configure.ac (AM_SILENT_RULES): Add silent rules support if available,
	  and disable it by default.
	* Makefile.am (AWK_V, AWK_V_, AWK_V_0): New variables.
	(.sym.symc): Use AWK_V in front of AWK.
	(.symc.symo): Use AM_V_CC in front of TARGET_CC.
	(.symo.h): Use AM_V_GEN in front of sed.

	Add a .gitignore file
	* .gitignore: New file.

2010-01-04  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	Fix indentation
	* user.c (WriteCheckIdentity): Prepend `\t' before calling
	WriteMsgError.

2009-10-25  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	Fix warning during mach compilation
	* user.c (WriteIncludes): Include <kern/ipc_mig.h> when building kernel
	user.

2009-07-11  Thomas Schwinge  <tschwinge@gnu.org>

	Switch to the new ChangeLog style.
	* ChangeLog: Wipe out content, and add instructions about how to get it back.

2008-05-28  Thomas Schwinge  <tschwinge@gnu.org>

	[bug #23417: Building with -g3]
	* lexxer.l (^\#define[ \t]): Ignore until EOL.

2007-06-02  Thomas Schwinge  <tschwinge@gnu.org>

	* global.c (LintLib): Remove definition.
	* global.h (LintLib): Remove declaration.
	* header.c (WriteUserRoutine, WriteServerRoutine): Don't emit `Lint'
	code.
	* user.c (WriteIncludes): Likewise.
	* utils.c (WriteRCSDecl): Likewise.

2007-04-03  Thomas Schwinge  <tschwinge@gnu.org>

	* mig.in (--help): Document the ``-i'' option better.

2007-03-05  Thomas Schwinge  <tschwinge@gnu.org>

	* COPYING: Update the FSF's postal address.

	Remove automatically regeneratable files.
	* INSTALL: Remove file.
	* Makefile.in: Likewise.
	* aclocal.m4: Likewise.
	* configure: Likewise.
	* lexxer.c: Likewise.
	* parser.c: Likewise.
	* build-aux/config.guess: Likewise.
	* build-aux/config.sub: Likewise.
	* build-aux/depcomp: Likewise.
	* build-aux/install-sh: Likewise.
	* build-aux/missing: Likewise.
	* build-aux/ylwrap: Likewise.

2006-12-04  Thomas Schwinge  <tschwinge@gnu.org>

	* Makefile.in: Regenerate.
	* configure: Likewise.

	* configure.ac (AM_INIT_AUTOMAKE): Add `dist-bzip2'.

	* Makefile.am (AUTOMAKE_OPTIONS): Remove variable after having moved
	the `gnu' option to...
	* configure.ac (AM_INIT_AUTOMAKE): ... here.
	Bump version to 1.3.1.99.
	* NEWS: Update.
	* README: Likewise.

2006-12-03  Leonardo Lopes Pereira  <leonardolopespereira@gmail.com>

	[patch #5018 --- ``Remove support to msg_send interface.'']
	* global.c (UseMsgRPC): Removed definition.
	* global.h (UseMsgRPC): Removed declaration.
	* mig.in (--help): Removed information about `-r' and `-R' options.
	* migcom.c (parseArgs): Changed the switches `-r' and `-R' to deal with
	the absence of obsolete the send/receive pairs.
	* user.c (WriteRoutine): Adapted the use of `UseMsgRPC' as if it was
	defined to `TRUE'.
	(WriteMsgSendReceive): Removed, since it is not used anymore.

2006-11-29  Thomas Schwinge  <tschwinge@gnu.org>

	* configure: Regenerate.
	* lexxer.c: Likewise.
	* parser.c: Likewise.

	Fix compiler, flex and bison warnings.
	* error.c: Include <stdlib.h>.
	* lexxer.h (yylex): Add declaration.
	* migcom.c: Include <stdlib.h>.
	(main): Set USER, SHEADER and IHEADER to `NULL' by default.
	(myfclose): Add lost conversion specifications.
	* parser.h (yyerror): Add declaration.
	* routine.c (rtPrintArg, rtCheckRoutine): Add braces to avoid
	ambiguousness.
	* server.c (WriteSymTabEntries): Make NUM an `u_int'.
	* user.c (WriteUserIndividual): Add a `default' case in a switch
	statement and add lost conversion specifications.
	* lexxer.l: Set option `nounput'.
	* parser.y (%left): Change commas to spaces.

	* configure.ac (AM_INIT_AUTOMAKE): Add the `no-define' option.

	* build-aux/config.guess: New file, thanks to `autoreconf'.
	* build-aux/config.sub: Likewise.
	* build-aux/depcomp: Likewise.
	* build-aux/install-sh: Likewise.
	* build-aux/missing: Likewise.
	* build-aux/ylwrap: Likewise.
	* INSTALL: File updated by `autoreconf'.
	* aclocal.m4: Likewise.
	* Makefile.in: Likewise.
	* configure: Likewise.

	* mig.in: Adopt to the Autoconf update.

	* configure.in: Move to...
	* configure.ac: ... here and overhaul a bit.

	* config.guess: Remove file.
	* config.sub: Likewise.
	* depcomp: Likewise.
	* install-sh: Likewise.
	* missing: Likewise.
	* mkinstalldirs: : Likewise.

	[bug #17122 --- ``GNU MIG debian dir'']
	* Makefile.am (debian_files): Remove variable.
	(EXTRA_DIST): Remove files from `debian/'.
	* debian/README.Debian: Remove file.
	* debian/changelog: Likewise.
	* debian/control: Likewise.
	* debian/copyright: Likewise.
	* debian/rules: Likewise.

2006-07-29  Ognyan Kulev  <ogi@fmi.uni-sofia.bg>

	[patch #324]
	* migcom.c (myfclose): New function.
	(main): Use myfclose instead of fclose.
	* user.c (WriteUserIndividual): Check for errors when closing file.

2006-01-26  Thomas Schwinge  <tschwinge@gnu.org>

	* config.guess: Updated from the canonical source.
	* config.sub: Likewise.

2005-05-27  Thomas Schwinge  <schwinge@nic-nac-project.de>

	[patch #2507]
	* mig.in (prj_quote_sh): New shell funcion; copied from Paul Jarc's
	prjlibs.  Use that function to properly quote strings in $cppflags
	that contain whitespace.

2005-04-09  Thomas Schwinge  <schwinge@nic-nac-project.de>

	* mig.in: Handle the preprocessor option '-isystem ...' correctly.

2004-03-18  Roland McGrath  <roland@frob.com>

	* utils.c (do_skip_vfprintf): New macro.
	(WriteCopyType, WritePackMsgType): Use that, so we do va_start and
	va_end independently around each SkipVFPrintf call.

2004-02-10  Roland McGrath  <roland@frob.com>

	* user.c (WriteTypeCheck): Use BAD_TYPECHECK macro instead of type-pun.
	* server.c (WriteTypeCheck): Likewise.
	* utils.c (WriteBogusDefines): Write a #define for that macro.
	* utils.c (WriteCheckDecl): Write auto const, not static const.
	(WriteStaticShortDecl, WriteStaticLongDecl): Likewise.

	* INSTALL, config.guess, config.sub, missing, mkinstalldirs,
	install-sh: Update files from autoconf/automake.

2004-02-01  Roland McGrath  <roland@frob.com>

	* depcomp, Makefile.in, aclocal.m4, configure: Update generated files.

2002-08-29  Jeff Bailey  <jbailey@gnu.org>

	* configure.in: Bump version to 1.3.1
	* configure: Regenerated.

	* NEWS: Updated for 1.3.1 release.

2002-07-31  Marcus Brinkmann  <marcus@gnu.org>

	* routine.c (rtFindSize): Always add sizeof_mach_msg_type_t to
	SIZE for args not in long form, irregardless of the itSize.

2002-05-07  Roland McGrath  <roland@frob.com>

	* type.c (itMakeNaturalType): New function.
	(init_type): Use that instead of itMakeIntType for itWaitTimeType and
	itMsgOptionType--give them each their special typedef names.
	* routine.c (rtCheckArgTypes): Use itCheckNaturalType for rtMsgOption.

2002-04-05  Roland McGrath  <roland@frob.com>

	* Makefile.am (cpu.symc): Depend on gensym.awk.
	* Makefile.in: Regenerated.

	* gensym.awk: Generate code with no unescaped newlines inside strings.

	* vprint.c: Fix obsolete #endif syntax.

2002-03-06  Roland McGrath  <roland@frob.com>

	* configure.in: Bump version to 1.3.
	* configure, Makefile.in, aclocal.m4: Regenerated.

2001-12-31  Roland McGrath  <roland@frob.com>

	* lexxer.l: Grok "retcode" IPC flag as a no-op, for compatibility
	with OSF Mach mig syntax.
	* lexxer.c: Regenerated.

2001-12-28  Roland McGrath  <roland@frob.com>

	* mig.in (default_cpp): Add -ansi to avoid -Di386=1 and the like.

	* mig.in (default_cpp): Put -undef here.
	(cppflags): Not here.

2001-10-03  Roland McGrath  <roland@frob.com>

	* mig.in (cppflags): Start with -undef.

2001-06-09  Marcus Brinkmann  <marcus@gnu.org>

	* Makefile.am (debian_files): New variable.
	(EXTRA_DIST): Add files in $(debian_files), prefixed with debian/.
	* configure, Makefile.in, aclocal.m4: Regenerated.

2001-06-08  Marcus Brinkmann  <marcus@gnu.org>

	* debian/rules: Fix directory permissions, set architecture relevant
	variables to default values, include section and priority in package,
	strip migcom down even further, as suggested by Lintian.
	* debian/changelog:  Bump version to 1.2-1.

2001-06-07  Roland McGrath  <roland@frob.com>

	* configure.in: Bump version to 1.2.
	* configure, Makefile.in: Regenerated.
	* NEWS: Updated for changes since 1.1 release.

	* header.c (WriteRoutineList): New function.
	* write.h: Declare it.
	* migcom.c (RoutineListFileName): New variable.
	(parseArgs): New option -list to set it.
	(main): If set, write the named output file with WriteRoutineList.
	* mig.in: Grok -list and put it in the usage message.

	* global.c (DefaultFiles): New variable, boolean initialized to true.
	(more_global): Leave null file name variables alone if it's false.
	* global.h (DefaultFiles): Declare it.
	* migcom.c (parseArgs): New option -n clears it.
	* mig.in: Grok -n (pass it through) and put it in the usage message.

	* statement.h: Fix obsolete #else/#endif syntax.
	* lexxer.l: Likewise.
	* lexxer.c: Regenerated.

2000-07-04  Marcus Brinkmann  <marcus@gnu.org>

	* debian: New directory for Debian packaging stuff.
	* debian/README.Debian: New file.
	* debian/changelog: Likewise.
	* debian/control: Likewise.
	* debian/rules: Likewise.
	* debian/copyright: Likewise.

1999-10-11  Roland McGrath  <roland@baalperazim.frob.com>

	* user.c (WriteIncludes): Fix missing newline in last change.
	* server.c (WriteIncludes): Likewise.

1999-10-08  Roland McGrath  <roland@baalperazim.frob.com>

	* server.c (WriteIncludes): Write:
		#ifndef _GNU_SOURCE
		#define _GNU_SOURCE 1
		#endif
	into the output before all else.  This is required for building
	stubs with GNU libc's built-in Mach/MiG support code.
	* user.c (WriteIncludes): Likewise.

1999-06-22  Thomas Bushnell, BSG  <tb@mit.edu>

	* configure.in: Bump version to 1.1.  First official net release.

	* configure, Makefile.in, aclocal.m4: Regenerated.

1999-05-23  Roland McGrath  <roland@baalperazim.frob.com>

	* configure.in: Bump version to 1.0.2.

	* mig.in: Grok --help.
	Suggested by Jeff Bailey <jbailey@nisa.net>.

1999-05-22  Roland McGrath  <roland@baalperazim.frob.com>

	* configure.in: Add AC_PROG_CPP.
	* mig.in (CC): Set this before default_cpp, which might use its value.
	Reported by Jeff Bailey <jbailey@nisa.net>.

1999-04-14  Roland McGrath  <roland@baalperazim.frob.com>

	* mig.in (default_cpp, default_cc): New variables, @ expansions here.
	(CC): Make sure it's defined, in case ${CPP} refers to ${CC}.
	(cpp): Use ${default_cpp} instead of the literal multiword contents.

1999-03-20  Roland McGrath  <roland@baalperazim.frob.com>

	* mig.in (PACKAGE, VERSION): New variables, substituted by configure.
	Grok --version.

1998-12-04  Roland McGrath  <roland@baalperazim.frob.com>

	Version 1.0.1 released.
	* configure.in: Update version to 1.0.1.

1998-09-06  Roland McGrath  <roland@baalperazim.frob.com>

	* mig.in (cpp): Add `-x c' to TARGET_CC command.

1998-07-19  Roland McGrath  <roland@baalperazim.frob.com>

	* README, AUTHORS, NEWS: New files.

1998-07-18  Roland McGrath  <roland@baalperazim.frob.com>

	* lexxer.c, parser.c: Regenerated in srcdir so #line refs are good.

	* migcom.c (main): Fix return type to int (not void), and use return.

	Moved mig out of gnumach into standalone distribution with
	vanilla autoconf/automake build arrangement.
	* configure.in, Makefile.am: New files.
	* mig.sh: Renamed to mig.in.
	* mig.in (prefix, exec_prefix, libexecdir): New vars set by configure.
	(migcom): Find migcom in ${libexecdir}, and use @MIGCOM@ for its name.
	(cpp): Use @TARGET_CC@ -E instead of @CPP@.

	* gensym.awk: New file, copied from gnumach top-level dir.

Thu Mar 20 14:56:34 1997  Thomas Bushnell, n/BSG  <thomas@gnu.ai.mit.edu>

	* error.c (unix_error_string): Assume HAVE_STRERROR.

Wed May 15 13:55:01 1996  Miles Bader  <miles@gnu.ai.mit.edu>

	* user.c (WriteRequestArgs): Don't check args against akbUserArg.
	(WritePackArg): Do check poly args also against akbUserArg.

Thu May  2 19:13:32 1996  Miles Bader  <miles@gnu.ai.mit.edu>

	* routine.h (struct routine): Split rtReplyPort field into
	rtUReplyPort and rtSReplyPort fields.
	* routine.c (rtAddDummyReplyPort): Add USER arg, and use it.
	(rtCheckRoutineArg): Set user or server or both reply ports.
	(rtSetArgDefaults, rtCheckArgTypes, rtCheckRoutine): Deal with
	split reply ports.
	* user.c (WriteRequestHead, WriteMsgCheckReceive): Use
	rtUReplyPort field instead of rtReplyPort.
	(WriteRequestArgs): Only deal with user-side args.

Wed May 15 13:55:01 1996  Miles Bader  <miles@gnu.ai.mit.edu>

	* user.c (WriteRequestArgs): Don't check args against akbUserArg.
	(WritePackArg): Do check poly args also against akbUserArg.

Thu May  2 19:13:32 1996  Miles Bader  <miles@gnu.ai.mit.edu>

	* routine.h (struct routine): Split rtReplyPort field into
	rtUReplyPort and rtSReplyPort fields.
	* routine.c (rtAddDummyReplyPort): Add USER arg, and use it.
	(rtCheckRoutineArg): Set user or server or both reply ports.
	(rtSetArgDefaults, rtCheckArgTypes, rtCheckRoutine): Deal with
	split reply ports.
	* user.c (WriteRequestHead, WriteMsgCheckReceive): Use
	rtUReplyPort field instead of rtReplyPort.
	(WriteRequestArgs): Only deal with user-side args.

Thu Feb 29 12:46:40 1996  steve clawson  <sclawson@marker.cs.utah.edu>

	* user.c (WriteMsgCheckReceive): If the reply-port isn't
	user-supplied and there was a message transmission error, then
	deallocate it.  From Michael I Bushnell (mib@gnu.ai.mit.edu).

	* user.c (WriteMsgCheckIdentity): Dealloc reply port if a
 	mismatched reply comes in to avoid cascaded errors.  From
	Michael I Bushnell (mib@gnu.ai.mit.edu).

Wed May  3 13:59:54 MDT 1995  Bryan Ford <baford@cs.utah.edu>

	Merged in diffs from UK02p12 to UK02p15:

	Wed May  3 10:47:41 MDT 1995  Bryan Ford <baford@cs.utah.edu>

		* Released UK02p15.

		* mig_string.h: include string.h instead of strings.h

		* user.c, lexxer.l: changed index/rindex to strchr/strrchr.

Fri Feb 10 13:25:54 MST 1995  Bryan Ford <baford@cs.utah.edu>

	Merged in diffs from UK02p7 to UK02p9:

	Sun, 29 Jan 1995  Remy.Card@masi.ibp.fr (Remy CARD)

		Fixed a bug that causes mig to generate bad file names
		in #include directives when generating the user source file.

Fri Nov 25 13:56:32 MST 1994  Bryan Ford  (baford@cs.utah.edu)

	Merged in diffs from UK02p6 to UK02p7:

	* MIG now compiles under BSD without 'vm_???_t' types
	  conflicting between host (BSD) and target (Mach)
	  header files.  Basically, the MIG source files compiled
	  to run on the host machine no longer include mach/message.h;
	  instead they get the needed defines through cpu.h
	  which is built by compiling cpu.sym for the target machine.

Mon Aug 29 18:31:21 1994  Bryan Ford  (baford@cs.utah.edu)

	* got rid of /usr/bin pathname in call to basename:
	basename isn't always in /usr/bin.

Fri Aug 26 11:36:10 1994  Louis-D. Dubeau  (hallu@info.polymtl.ca)

	* Fixed mig.sh to pass -imacros flags to CPP correctly.

Tue Sep  6 10:00:29 1994  Roland McGrath (roland@churchy.gnu.ai.mit.edu)

	* Released UK02p6.

	* use strerror instead of sys_errlist if it's available.

	* Other minor portability fixes.

Mon Aug 15 18:37:47 1994  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>

	* global.c (more_global): Prepend RoutinePrefix to ServerDemux
	even for non-default value of ServerDemux.

Fri Jul  8 14:36:53 1994  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* routine.h (rtSkip): Take int arg.
	* routine.c (rtSkip): Take int arg and increment by that many.
	* parser.y (Statement): Grok `skip N;'; pass int arg to rtSkip.

Fri May 13 15:08:56 1994  Michael I Bushnell  (mib@churchy.gnu.ai.mit.edu)

	* user.c (WriteMsgCheckReceive): Deallocate the reply port also if
	we get one of the send errors that can cause the message to be
	partially sent and then destroyed; otherwise we might later get a
	spurious send-once notification.

Wed Aug  4 10:34:42 1993  Michael I. Bushnell  (mib at ernst.gnu.ai.mit.edu)

	* Makefile: Don't use flex or bison; use lex and yacc instead.

	* migcom.c (myfopen): Added extern declaration of errno.

Wed Jun 30 19:46:51 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* user.c (WriteUser): Call WriteImport for skImport and skUImport
	statements.
	(WriteUserIndividual): Write all the import and uimport statements
	to each file.

Mon Jun 28 22:07:14 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* utils.c (WriteStaticShortDecl, WriteCheckDecl,
	WriteStaticLongDecl): Generate a `const' definition.

Fri Jun 25 17:53:26 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* utils.c (WriteCopyType): Write SubrPrefix before `mig_strncpy'.

	* user.c (WriteRequestHead): Write SubrPrefix before
	`mig_get_reply_port'.
	(WriteMsgCheckReceive): Write SubrPrefix before
	`mig_dealloc_reply_port'.
	(WritePackArgValue): Write SubrPrefix before `mig_strncpy'.
	(WriteExtractArgValue): Likewise.
	(WriteExtractArgValue): Write SubrPrefix before `mig_allocate'.
	(WriteMsgSend): Write SubrPrefix before `mach_msg_send_from_kernel'
	and `mach_msg'.
	(WriteMsgSendReceive): Write SubrPrefix before `mach_msg'.
	(WriteMsgRPC): Write SubrPrefix before `mach_msg_rpc_from_kernel'
	and `mach_msg'.

	* server.c (WriteDestroyArg): Write SubrPrefix before `mig_deallocate'.
	(WritePackArgValue): Write SubrPrefix before `mig_strncpy'.
	(WriteDestroyPortArg): Write SubrPrefix before `ipc_port_release_send'.
	(WriteAdjustMsgCircular): Write SubrPrefix before
	`ipc_port_check_circularity'.

	* routine.c (rtCheckRoutine): Prepend RoutinePrefix to
	RT->rtServerName and RT->rtUserName.

	* migcom.c (parseArgs): Recognize -subrprefix and -prefix.

	* global.c (SubrPrefix, RoutinePrefix): Define new variables.
	* global.h: Declare them.
