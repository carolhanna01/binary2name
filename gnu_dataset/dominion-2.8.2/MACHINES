[old -- not needed anymore]

This is a list of machines on which Dominion is known to compile
cleanly.  We use the gcc -Wall for some architectures and come out
100% clean, but others (like suns running SunOS 4.1.x) are hopeless
because they don't have good prototypes for standard libraries.

Notice that for all the architectures listed here it is no longer
necessary to explicitly define BSD or SYSV: I have defined them based
on preprocessor symbols that each version defines.  For other
architectures it might be necessary to go and define things like SYSV
or BSD or HAVE_STRSTR.

For each architecture/OS pair I also list the preprocessor macro that
identifies it and whether that gets treated as SYSV or BSD.

SGI IRIX 5		(sgi -> SYSV)
    Straight out of the box with both "cc" and "gcc".

IBM AIX			(_AIX -> BSD)
    Works nicely with both gcc and cc (which is really xlc).

Sun SunOS4.1.x		(sun -> BSD)
    Works nicely both gcc and acc (obviously not with cc which is not
    ANSI).

80*86 Linux		(linux -> BSD)
    Works nicely with gcc (which is also called "cc" on Linux).

80*86 BSDI		(__bsdi__ -> BSD)
    Works nicely with gcc (which is also called "cc" on BSDI).

Convex ConvexOS 11.x	(__convex__ -> BSD)
    Works nicely with both cc and gcc.

DEC Alpha OSF-1		(__osf__ -> BSD)
    Works nicely with both cc and gcc.

HP HP-UX		(__hpux -> SYSV)
    Works nicely with gcc; it does not work with the NON-ANSI compiler
    that comes with HPs, but probably works with the ANSI C compiler
    that HP sells unbundled.  I recommend that you get gcc instead of
    going for this "unbundled" nonsense.

NeXT Mach		(NeXT -> BSD)
    Works nicely with cc, which is gcc on the NeXT.  But gcc is not
    named gcc, so you can either change the Makefile or compile with
    "make CC=cc".
