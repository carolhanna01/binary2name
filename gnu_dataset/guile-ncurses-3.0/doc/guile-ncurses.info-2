This is guile-ncurses.info, produced by makeinfo version 6.5 from
guile-ncurses.texi.

This manual is for the GNU Guile-NCurses library, (version 3.0, 4
November 2019).  It provides bindings for the ncurses library, which
provides functionality for updating character screens.

   Copyright © 1998-2010,2011,2013,2014,2016,2019 Free Software
Foundation, Inc.
Copyright © 2001-2005 Pradeep Padala

     Permission is hereby granted, free of charge, to any person
     obtaining a copy of this software and associated documentation
     files (the "Software"), to deal in the Software without
     restriction, including without limitation the rights to use, copy,
     modify, merge, publish, distribute, distribute with modifications,
     sublicense, and/or sell copies of the Software, and to permit
     persons to whom the Software is furnished to do so, subject to the
     following conditions:

     The above copyright notice and this permission notice shall be
     included in all copies or substantial portions of the Software.

     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     NONINFRINGEMENT. IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE
     LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
     ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
     SOFTWARE.

     Except as contained in this notice, the name(s) of the above
     copyright holders shall not be used in advertising or otherwise to
     promote the sale, use or other dealings in this Software without
     prior written authorization.

INFO-DIR-SECTION The Algorithmic Language Scheme
START-INFO-DIR-ENTRY
* Guile Ncurses: (guile-ncurses).     A TUI library for Guile.
END-INFO-DIR-ENTRY


File: guile-ncurses.info,  Node: Creating forms,  Next: Form pagination functions,  Prev: Data type validation for fields,  Up: The curses form library

5.6.13 Creating forms
---------------------

 -- Procedure: new-form fields
     Creates a new form given a list that contains fields.  The fields
     are created using ‘new-field’.


File: guile-ncurses.info,  Node: Form pagination functions,  Next: Setting and getting form options,  Prev: Creating forms,  Up: The curses form library

5.6.14 Form pagination functions
--------------------------------

 -- Procedure: set-new-page field new-page-flag
     This procedure sets or resets a flag marking the given field as
     beginning a new page on its form.

 -- Procedure: new-page? field
     Returns a flag indicating if the given field is the start of a new
     page on its form.


File: guile-ncurses.info,  Node: Setting and getting form options,  Next: Setting the page number and field,  Prev: Form pagination functions,  Up: The curses form library

5.6.15 Setting and getting form options
---------------------------------------

 -- Procedure: set-form-opts form opts
 -- Procedure: form-opts-on! form opts
 -- Procedure: form-opts-off! form opts
     The function ‘set-form-opts’ sets all the given form’s option bits
     (form option bits may be logically-OR’ed together).

     The function ‘form-opts-on!’ turns on the given option bits, and
     leaves others alone.

     The function ‘form-opts-off!’ turns off the given option bits, and
     leaves others alone.

 -- Procedure: form-opts form
     This returns the current option bits for the form.

   The following options are defined, and all are on by default.

‘O_NL_OVERLOAD’
     Overload the ‘REQ_NEW_LINE’ forms driver request so that calling it
     at the end of a field goes to the next field.
‘O_BS_OVERLOAD’
     Overload the ‘REQ_DEL_PREV’ forms driver request so that calling it
     at the beginning of a field goes to the previous field.


File: guile-ncurses.info,  Node: Setting the page number and field,  Next: Writing or erasing forms from associated subwindows,  Prev: Setting and getting form options,  Up: The curses form library

5.6.16 Setting the page number and field
----------------------------------------

 -- Procedure: current-field form
     This procedure returns the current field on the form.  Note that
     this field cannot be used or assigned to any other form.

 -- Procedure: set-current-field! form field
     This procedure sets the current field on the form.

 -- Procedure: field-index field
     The function field-index returns the index of the field in the
     field array of the form it is connected to.  If the field is not
     connected to a form, it will throw an error.

 -- Procedure: set-form-page form n
     Sets the page of the form to N.

 -- Procedure: form-page form
     Returns the current form’s displayed page number.


File: guile-ncurses.info,  Node: Writing or erasing forms from associated subwindows,  Next: Printable form request names,  Prev: Setting the page number and field,  Up: The curses form library

5.6.17 Writing or erasing forms from associated subwindows
----------------------------------------------------------

 -- Procedure: post-form form
     This procedure displays a form to its associated subwindow.  To
     trigger physical display of the subwindow, use ‘refresh’ or some
     equivalent routine.

 -- Procedure: unpost-form form
     This erases the form from its associated subwindow.


File: guile-ncurses.info,  Node: Printable form request names,  Next: Form windows,  Prev: Writing or erasing forms from associated subwindows,  Up: The curses form library

5.6.18 Printable form request names
-----------------------------------

 -- Procedure: form-request-name request
 -- Procedure: form-request-by-name name
     These procedures convert a string containing the printable name of
     a form request to its integer value and vice versa.


File: guile-ncurses.info,  Node: Form windows,  Prev: Printable form request names,  Up: The curses form library

5.6.19 Form windows
-------------------

 -- Procedure: set-form-win form win
 -- Procedure: form-win form
 -- Procedure: set-form-sub form sub
 -- Procedure: form-sub form
 -- Procedure: scale-form form
     Every form has an associated pair of curses windows.  The form
     window displays any title and border associated with the window;
     the form sub-window displays the items of the form that are
     currently available for selection.

     The first four functions get and set those windows.  It is not
     necessary to set either window; by default, the driver code uses
     ‘stdscr’ for both.

     The function scale-form returns the a list of two elements: minimum
     size required for the subwindow of form.


File: guile-ncurses.info,  Node: The termios and miscellaneous library,  Prev: The curses form library,  Up: Curses Reference

5.7 The termios and miscellaneous library: ‘(ncurses extra)’
============================================================

These are the functions in the ‘(ncurses extra)’ module.

   The procedures in the ‘extra’ library largely follow the C-language
termios API. Most of the procedures in the library have approximately
the same name and arguments as the termios functions.

* Menu:

* Termios introduction::
* Standard termios functions::
* Termios port interface::
* Pseudoterminal helper procedures::


File: guile-ncurses.info,  Node: Termios introduction,  Next: Standard termios functions,  Prev: The termios and miscellaneous library,  Up: The termios and miscellaneous library

5.7.1 Termios introduction
--------------------------

Termios functions form the bulk of the ‘(ncurses extra)’ library.  These
are procedures that can query and modify the terminal attributes, line
control, and baud rate of scheme ports that use file descriptors.

   There is a constant ‘%has-termios’ that can be use to check if, at
configure time, the library was compiled to include the termios
capabilities.

 -- Constant: %has-termios
     Is ‘#t’ if the termios functionality is present.  ‘#f’ otherwise.


File: guile-ncurses.info,  Node: Standard termios functions,  Next: Termios port interface,  Prev: Termios introduction,  Up: The termios and miscellaneous library

5.7.2 Standard termios functions
--------------------------------

The ‘#<termios>’ type is an opaque type that can contain information
about a general terminal interface.  This information is in the form of
several boolean

 -- Procedure: new-termios
     This procedure creates and returns a new ‘#<termios>’ variable.  A
     newly created ‘#<termios>’ do not represent any specific port’s
     behavior.  It is set to a generic behavior for a raw terminal: no
     echoing or special processing and with 8-bit characters allowed.

 -- Procedure: termios? x
     This procedure returns ‘#t’ if X is of the ‘#<termios>’ type./

 -- Procedure: %termios-debug term
     This procedure, when given TERM of type ‘#<termios>’, writes to the
     standard output port some useful debugging information about the
     current state of TERM.

 -- Procedure: termios-flag-set! term flag-or-flags
     Given TERM of type ‘#<termios>’ and FLAG-OR-FLAGS which is either a
     symbol or a list of symbols of termios boolean properties, this
     procedure sets those properties to be active.

 -- Procedure: termios-flag-clear! term flag-or-flags
     Given TERM of type ‘#<termios>’ and FLAG-OR-FLAGS which is either a
     symbol or a list of symbols of termios boolean properties, this
     procedure sets those properties to be disabled.

 -- Procedure: termios-flag-get term
     Given TERM of type ‘#<termios>’, this returns a list of symbols of
     the boolean properties of TERM that are active.

 -- Procedure: termios-flag-test term prop
     Given TERM of type ‘#<termios>’, and PROP, which is a symbol
     indicating a boolean property of TERM, this returns ‘#t’ if that
     property is set, or ‘#f’ otherwise.

   The boolean properties are in the table below.

‘IGNBRK’
     Ignore a BREAK condition on input.
‘BRKINT’
     If IGNBRK is set, a BREAK is ignored.  If it is not set but BRKINT
     is set, then a BREAK causes the input and output queues to be
     flushed, and if the terminal is the controlling terminal of a
     foreground process group, it will cause a SIGINT to be sent to this
     foreground process group.  When neither IGNBRK nor BRKINT are set,
     a BREAK reads as a null byte (’\0’), except when PARMRK is set, in
     which case it reads as the sequence \377 \0 \0.
‘IGNPAR’
     Ignore framing errors and parity errors.
‘PARMRK’
     If this bit is set, input bytes with parity or framing errors are
     marked when passed to the program.  This bit is meaningful only
     when INPCK is set and IGNPAR is not set.  The way erroneous bytes
     are marked is with two preceding bytes, \377 and \0.  Thus, the
     program actually reads three bytes for one erroneous byte received
     from the terminal.  If a valid byte has the value \377, and ISTRIP
     (see below) is not set, the program might confuse it with the
     prefix that marks a parity error.  Therefore, a valid byte \377 is
     passed to the program as two bytes, \377 \377, in this case.

     If neither IGNPAR nor PARMRK is set, read a character with a parity
     error or framing error as \0.
‘INPCK’
     Enable input parity checking.
‘ISTRIP’
     Strip off eighth bit.
‘INLCR’
     Translate NL to CR on input.
‘IGNCR’
     Ignore carriage return on input.
‘ICRNL’
     Translate carriage return to newline on input (unless IGNCR is
     set).
‘IXON’
     Enable XON/XOFF flow control on output.
‘IXANY’
     Typing any character will restart stopped output.  (The default is
     to allow just the START character to restart output.)
‘IXOFF’
     Enable XON/XOFF flow control on input.
‘OPOST’
     Enable output postprocessing.
‘ONLCR’
     If OPOST is set, map NL to CR-NL on output.
‘OCRNL’
     If OPOST is set, map CR to NL on output.
‘ONOCR’
     If OPOST is set, don’t output CR at column 0.
‘ONLRET’
     If OPOST is set, NL is assumed to do the carriage return function.
     Carriage returns are not emitted.
‘CSTOPB’
     Set two stop bits, rather than one.
‘CREAD’
     Enable receiver.
‘PARENB’
     Enable parity generation on output and parity checking for input.
‘PARODD’
     If set, then parity for input and output is odd; otherwise even
     parity is used.
‘HUPCL’
     Lower modem control lines after last process closes the device
     (hang up).
‘CLOCAL’
     Ignore modem control lines.
‘ISIG’
     When any of the characters INTR, QUIT, SUSP, or DSUSP are received,
     generate the corresponding signal.
‘ICANON’
     Enable canonical mode (described below).
‘ECHO’
     Echo input characters.
‘ECHOE’
     If ICANON is also set, the ERASE character erases the preceding
     input character.
‘ECHOK’
     If ICANON is also set, the KILL character erases the current line.
‘ECHONL’
     If ICANON is also set, echo the NL character even if ECHO is not
     set.
‘NOFLSH’
     Disable flushing the input and output queues when generating
     signals for the INT, QUIT, and SUSP characters.
‘TOSTOP’
     Send the SIGTTOU signal to the process group of a background
     process which tries to write to its controlling terminal.

   There are also some non-boolean properties of a ‘#<termios>’ type.
First up are a set of control characters that may operate on the
terminal.

 -- Procedure: termios-csize-get term
 -- Procedure: termios-csize-set! term size
     Given TERM of type ‘#<termios>’, these procedures get and set the
     number of bits in the character size: either 5, 6, 7, or 8.

 -- Procedure: termios-veof-get term
 -- Procedure: termios-veof-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     end-of-file character.  The default end-of-file character is
     ‘#\eot’.

     This character causes the pending tty buffer to be sent to the
     waiting user program without waiting for end-of-line.  If it is the
     first character of the line, the a read of the associated port will
     return and end-of-file.  This character is recognized when the
     ICANON property is set.

 -- Procedure: termios-veol-get term
 -- Procedure: termios-veol-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set an
     additional end-of-line character.  The default extra end-of-line
     character is ‘#\nul’.  This is recognized when the ICANON property
     is set.

 -- Procedure: termios-verase-get term
 -- Procedure: termios-verase-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     erase character.  It may be ‘#\del’ or ‘#\bs’.

     When this character is received, it erases the previous
     not-yet-erased character, but does not erase past EOF or
     beginning-of-line.  Recognized when ICANON is set, and then not
     passed as input.

 -- Procedure: termios-vintr-get term
 -- Procedure: termios-vintr-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     interrupt character.  This is usually ‘#\etx’ aka control-C.

     When this character is received, it sends a SIGINT signal.
     Recognized when ISIG is set, and then not passed as input.

 -- Procedure: termios-vkill-get term
 -- Procedure: termios-vkill-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     kill character.  This is often ‘#\nak’.

     When this character is received, this erases the input since the
     last EOF or beginning-of-line.  Recognized when ICANON is set, and
     then not passed as input.

 -- Procedure: termios-vquit-get term
 -- Procedure: termios-vquit-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     quit character.  This is often ‘#\fs’ aka control-\.

     When this character is received, this sends SIGQUIT signal.
     Recognized when ISIG is set, and then not passed as input.

 -- Procedure: termios-vstart-get term
 -- Procedure: termios-vstart-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     start character.  This is usually ‘#\dc1’ aka control-Q.

     When this character is received, it restarts output stopped by the
     Stop character.  Recognized when IXON is set, and then not passed
     as input.

 -- Procedure: termios-vstop-get term
 -- Procedure: termios-vstop-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     stop character.  This is usually ‘#\dc3’ aka control-S.

     When this character is received, it stops output until the Start
     character is typed.  Recognized when IXON is set, and then not
     passed as input.

 -- Procedure: termios-vsusp-get term
 -- Procedure: termios-vsusp-set! term char
     Given TERM of type ‘#<termios>’, these procedures get and set the
     suspend character.  This is usually ‘#\sub’ aka control-Z.

     When this character is received, the SIGTSTP signal is sent, and
     then is not passed as input.

   There are input and output speed properties
 -- Procedure: termios-ispeed-get term
 -- Procedure: termios-ispeed-set! term bps
 -- Procedure: termios-ospeed-get term
 -- Procedure: termios-ospeed-set! term bps

     These functions get and set the input and output speed of the line
     in bits-per-second.  The BPS value is an integer, and it should be
     one of the standard line speeds.

     The standard line speeds are 0, 50, 75, 110, 134, 150, 200, 300,
     600, 1200, 1800, 2400, 4800, 9600, 19200, 38400.  On some systems,
     they may also be 7200, 14400, 28800, 115200, 230400.  If an input
     bps parameter doesn’t match an available line speed, it will be
     rounded down to the next available line speed.

   There are also two numeric properties having to do with non-canonical
reads.

 -- Procedure: termios-vtime-get term
 -- Procedure: termios-vtime-set! term delay
     Given TERM of type ‘#<termios>’, these procedures get and set the
     time, in seconds, of a non-canonical read.  DELAY is rounded to the
     nearest tenth of a second.

 -- Procedure: termios-vmin-get term
 -- Procedure: termios-vmin-set! term count
     Given TERM of type ‘#<termios>’, these procedures get and set the
     minimum number of characters that need to be received for a
     non-canonical read.


File: guile-ncurses.info,  Node: Termios port interface,  Next: Pseudoterminal helper procedures,  Prev: Standard termios functions,  Up: The termios and miscellaneous library

5.7.3 Termios port interface
----------------------------

The termios functions can be used to modify the behavior of Guile ports.
However, not all Guile ports have a terminal line interface.

   For a port to have a terminal line interface, it must have an
underlying file descriptor upon which termios procedure may operate.  To
test if a port has a file descriptor the Guile ‘fileno’ procedure may be
used.

 -- Procedure: tcgetattr fd-or-port
     Given file port or an integer file descriptor, this procedure
     returns a ‘#<termios>’ type containing the terminal line properties
     of the port or file descriptor.

 -- Procedure: tcsetattr! fd-or-port option termios
     Given file port or an integer file descriptor, this procedure sets
     terminal line properties of the port or file descriptor to those in
     TERMIOS.

     If OPTION is TCSANOW, the change shall occur immediately.

     If it is TCSADRAIN, the change shall occur after all output written
     to the the port is transmitted.  This function should be used when
     changing parameters that affect output.

     If it is TCSAFLUSH, the change shall occur after all output written
     to the port is transmitted, and all input so far received but not
     read shall be discarded before the change is made.

 -- Procedure: tcdrain fd-or-port
     The ‘tcdrain’ procedure blocks until all output written to
     FD-OR-PORT is transmitted.

 -- Procedure: tcflow fd-or-port action
     This procedure suspends transmission or reception of data on the
     given integer file descriptor or file port depending on the value
     of ACTION.  If ACTION is ‘TCOOFF’, output is suspended.  If ACTION
     is ‘TCOON’, suspended output is restarted.  If it is ‘TCIOFF’, it
     transmits a STOP character, which stops the terminal device from
     transmitting data to the system.  If it is ‘TCION’, it transmits a
     START character, which starts the terminal device transmitting data
     to the system.

 -- Procedure: tcflush fd-or-port action
     This procedure discards data written to the given FD-OR-PORT but
     not transmitted, or data received but not read, depending on the
     value of queue_selector: If ACTION is ‘TCIFLUSH’, it shall flush
     data received but not read.  If ACTION is ‘TCOFLUSH’, it shall
     flush data written but not transmitted.  If ACTION is ‘TCIOFLUSH’,
     it shall flush both data received but not read and data written but
     not transmitted.


File: guile-ncurses.info,  Node: Pseudoterminal helper procedures,  Prev: Termios port interface,  Up: The termios and miscellaneous library

5.7.4 Pseudoterminal helper procedures
--------------------------------------

A pseudoterminal is a bidirectional communication channel similar to a
pipe, but, with kernel support to add the properties of terminals to
communication on that channel.  The channel is asynchronous: a character
written to one port of the channel will be made available to be read the
from the other port on the channel, but, perhaps not immediately.  When
implementing terminal emulators and remote-login programs, one may need
get pseudoterminal master and slave devices from the kernel.

   A standard usage of these procedures could be as follows:
   • Create a new master pseudoterminal port with ‘openpt’.  This master
     terminal has an associated slave pseudoterminal.
   • Initialize the UID and mode of the slave pseudoterminal by calling
     ‘grantpt’ on the master pseudoterminal.
   • Unlock the slave terminal so that it can be opened by calling
     ‘unlockpt’ on the master pseudoterminal.
   • Get the filename of the slave pseudoterminal by calling ‘ptsname’
     on the master pseudoterminal.
   • Create a file port for ‘ptsname’, which should probably be
     unbuffered.
   • Use ‘ptsmakeraw’ on each pseudoterminal to set its communcation to
     raw mode, or use ‘tcsetattr!’ to modify the communication behavior
     between master and slave if something other than raw mode is
     expected.

 -- Procedure: openpt flags
     Returns a unbuffered read/write port for a new master
     pseudoterminal.  The FLAGS is a ‘logior’ of zero or more of
     ‘O_RDWR’ and ‘O_NOCTTY’.  Usually ‘O_RDWR’ is expected.

     It will throw an error is no new pseudoterminal is available.

 -- Constant: O_RDWR
     Open the pseudoterminal device for both reading and writing.

 -- Constant: O_NOCTTY
     Do not make this pseudoterminal the controlling terminal for the
     process.

 -- Procedure: ptsmakeraw fd-or-port
     Given a file descriptor or file port a pseudoterminal device, this
     sets that pseudoterminal to RAW mode.

 -- Procedure: unlockpt fd-or-port
     If FD-OR-PORT is the file descriptor or file port of a master
     pseudo-terminal, this unlocks the slave pseudoterminal device
     corresponding to the master pseudoterminal referred to by fd.

     This procedure should be called before opening the slave side of a
     pseudoterminal.

 -- Procedure: ptsname fd-or-port
     If FD-OR-PORT is the file descriptor or file port of a master
     pseudo-terminal, this returns a string that contains the name of
     the slave pseudo-terminal device.

 -- Procedure: grantpt fd-or-port
     If FD-OR-PORT is the file descriptor or file port of a master
     pseudo-terminal,this changes the mode and permissions of the slave
     pseudo-terminal so that it can be used.

     The procedure changes the mode and owner of the slave
     pseudoterminal device corresponding to the master pseudoterminal
     referred to by FD-OR-PORT.  The user ID of the slave is set to the
     real UID of the calling process.  The group ID is set to an
     unspecified value.  The mode of the slave is set to 0620 (crw–w—-).


File: guile-ncurses.info,  Node: Index,  Prev: Curses Reference,  Up: Top

Index
*****

 [index ]
* Menu:

* #<field>:                              Opaque types.        (line  39)
* #<file>:                               Curses screen initialization and manipulation routines.
                                                              (line  30)
* #<form>:                               Opaque types.        (line  44)
* #<item>:                               Opaque types.        (line  28)
* #<menu>:                               Opaque types.        (line  34)
* #<screen>:                             Opaque types.        (line  18)
* #<screen> <1>:                         Curses screen initialization and manipulation routines.
                                                              (line  30)
* #<screen> <2>:                         Curses screen initialization and manipulation routines.
                                                              (line  87)
* #<window>:                             Overview.            (line  38)
* #<window> <1>:                         Overview.            (line  53)
* $TERM:                                 Curses screen initialization and manipulation routines.
                                                              (line  30)
* %filter:                               Curses screen initialization and manipulation routines.
                                                              (line   6)
* %filter <1>:                           Miscellaneous utilities.
                                                              (line  74)
* %guile-ncurses-shell-read-port:        Interactive sessions and guile-ncurses-shell.
                                                              (line  47)
* %guile-ncurses-shell-stdscr:           Interactive sessions and guile-ncurses-shell.
                                                              (line  31)
* %guile-ncurses-shell-write-port:       Interactive sessions and guile-ncurses-shell.
                                                              (line  47)
* %has-termios:                          Termios introduction.
                                                              (line  14)
* %is-form-driver-wide:                  Form procedures.     (line  18)
* %is-form-driver-wide <1>:              Form procedures.     (line 106)
* %is-pad-broken:                        Create and display pads.
                                                              (line  21)
* %is-subwin-broken:                     Window creation.     (line  65)
* %scheme-char-from-c-char:              Making rendered characters.
                                                              (line 148)
* %scheme-char-from-c-wchar:             Making rendered characters.
                                                              (line 160)
* %scheme-char-to-c-char:                Making rendered characters.
                                                              (line 153)
* %scheme-char-to-c-wchar:               Making rendered characters.
                                                              (line 165)
* %termios-debug:                        Standard termios functions.
                                                              (line  19)
* %ucs4-chars:                           Features determined at compile time.
                                                              (line  14)
* %wide-ncurses:                         Features determined at compile time.
                                                              (line  10)
* 7-bit characters:                      Input options.       (line  83)
* 8-bit characters:                      Input options.       (line  83)
* addch:                                 Overview.            (line  53)
* addch <1>:                             Adding characters.   (line   9)
* addch <2>:                             Adding characters.   (line  41)
* addch <3>:                             Character and window attribute control routines.
                                                              (line   6)
* addch <4>:                             Window background manipulation routines.
                                                              (line   7)
* addch <5>:                             Inserting a string before the cursor.
                                                              (line  17)
* addch <6>:                             Output options.      (line  45)
* addch <7>:                             Create and display pads.
                                                              (line  65)
* addchstr:                              Adding strings of characters and attributes.
                                                              (line  19)
* addstr:                                Adding strings of characters and attributes.
                                                              (line   6)
* addstr <1>:                            Adding strings of characters and attributes.
                                                              (line  28)
* addstr <2>:                            Character and window attribute control routines.
                                                              (line   6)
* assume-default-colors:                 Color manipulation routines.
                                                              (line  91)
* assume-default-colors <1>:             Color manipulation routines.
                                                              (line 146)
* attr-get:                              Character and window attribute control routines.
                                                              (line  59)
* attr-off!:                             Character and window attribute control routines.
                                                              (line  16)
* attr-on!:                              Character and window attribute control routines.
                                                              (line  15)
* attr-set!:                             Character and window attribute control routines.
                                                              (line  14)
* Attributes:                            Characters.          (line  10)
* Attributes <1>:                        Attributes.          (line   6)
* Attributes <2>:                        The details.         (line   6)
* Attributes <3>:                        Character and window attribute control routines.
                                                              (line  19)
* Attributes, adding to a character:     The addch procedure. (line  12)
* Attributes, querying:                  attr-get.            (line   6)
* Attributes, setting:                   attr-on! vs attr-set!.
                                                              (line   6)
* Background:                            Window background manipulation routines.
                                                              (line   6)
* Background rendition:                  Window background manipulation routines.
                                                              (line  34)
* Baudrate:                              Terminal attributes. (line   7)
* baudrate:                              Terminal attributes. (line   6)
* beep:                                  Bell and screen flash routines.
                                                              (line   6)
* beep <1>:                              Getting characters from the keyboard.
                                                              (line  17)
* Beeping:                               Bell and screen flash routines.
                                                              (line   9)
* bkgd:                                  Window background manipulation routines.
                                                              (line  23)
* bkgdset!:                              Window background manipulation routines.
                                                              (line   6)
* bkgdset! <1>:                          Clearing windows and parts of window.
                                                              (line   6)
* bkgdset! <2>:                          Terminal resizing.   (line   7)
* blink:                                 Making rendered characters.
                                                              (line  22)
* blink-off:                             Making rendered characters.
                                                              (line  81)
* blink-on:                              Making rendered characters.
                                                              (line  53)
* Blocking:                              Input options.       (line 102)
* Blocking <1>:                          Input options.       (line 147)
* Blocking <2>:                          Input options.       (line 159)
* bold:                                  Making rendered characters.
                                                              (line  23)
* bold-off:                              Making rendered characters.
                                                              (line  82)
* bold-on:                               Making rendered characters.
                                                              (line  54)
* border:                                Borders and lines.   (line   6)
* bottom-panel:                          The curses panel library.
                                                              (line  74)
* box:                                   Borders and lines.   (line  27)
* Buffering:                             Initialization Functions.
                                                              (line   9)
* can-change-color?:                     Color manipulation routines.
                                                              (line 110)
* Carriage return:                       Output options.      (line  96)
* cbreak!:                               Overview.            (line  23)
* cbreak! <1>:                           Getting characters from the keyboard.
                                                              (line   7)
* cbreak! <2>:                           Input options.       (line   6)
* cbreak! <3>:                           Input options.       (line  45)
* Character buffering:                   Initialization Functions.
                                                              (line   9)
* Characters:                            Character types.     (line   6)
* Characters, output:                    Adding characters.   (line   6)
* chgat:                                 Character and window attribute control routines.
                                                              (line  66)
* clear:                                 Clearing windows and parts of window.
                                                              (line  17)
* Clearing the screen:                   Clearing windows and parts of window.
                                                              (line  19)
* Clearing the screen <1>:               Output options.      (line  11)
* clearok!:                              Clearing windows and parts of window.
                                                              (line  19)
* clearok! <1>:                          Output options.      (line  10)
* clrtobot:                              Clearing windows and parts of window.
                                                              (line  25)
* clrtobot <1>:                          Output options.      (line  45)
* clrtoeol:                              Adding characters.   (line  18)
* clrtoeol <1>:                          Clearing windows and parts of window.
                                                              (line  34)
* color:                                 Making rendered characters.
                                                              (line 104)
* Color capabilities:                    Color manipulation routines.
                                                              (line 111)
* Color capability:                      Color manipulation routines.
                                                              (line 103)
* Color pairs:                           Characters.          (line  10)
* Color pairs <1>:                       The basics of color. (line  35)
* Color pairs <2>:                       Character and window attribute control routines.
                                                              (line  86)
* Color pairs <3>:                       Character and window attribute control routines.
                                                              (line  99)
* Color, default:                        Color manipulation routines.
                                                              (line  91)
* color-content:                         Color manipulation routines.
                                                              (line 116)
* color-pair:                            The basics of color. (line  35)
* color-pair <1>:                        Character and window attribute control routines.
                                                              (line  85)
* color-pair <2>:                        Color manipulation routines.
                                                              (line   6)
* color-pairs:                           Color manipulation routines.
                                                              (line  25)
* color-pairs <1>:                       Color manipulation routines.
                                                              (line  42)
* color-pairs <2>:                       Color manipulation routines.
                                                              (line  79)
* color-set!:                            Character and window attribute control routines.
                                                              (line  50)
* Colors:                                The basics of color. (line   6)
* colors:                                Color manipulation routines.
                                                              (line  25)
* colors <1>:                            Color manipulation routines.
                                                              (line  39)
* colors <2>:                            Color manipulation routines.
                                                              (line  82)
* colors <3>:                            Color manipulation routines.
                                                              (line 117)
* Colors, default:                       Color manipulation routines.
                                                              (line 148)
* Colors, defining:                      Color manipulation routines.
                                                              (line  58)
* Colors, initialization:                The basics of color. (line   6)
* Colors, initialization <1>:            Color manipulation routines.
                                                              (line  25)
* Colors, manipulation:                  Color manipulation routines.
                                                              (line   6)
* Colors, modifying:                     Changing color definitions.
                                                              (line   6)
* COLOR_BLACK:                           Color manipulation routines.
                                                              (line  45)
* COLOR_BLUE:                            Color manipulation routines.
                                                              (line  49)
* COLOR_CYAN:                            Color manipulation routines.
                                                              (line  51)
* COLOR_GREEN:                           Color manipulation routines.
                                                              (line  47)
* COLOR_MAGENTA:                         Color manipulation routines.
                                                              (line  50)
* COLOR_RED:                             Color manipulation routines.
                                                              (line  46)
* COLOR_WHITE:                           Color manipulation routines.
                                                              (line  52)
* COLOR_YELLOW:                          Color manipulation routines.
                                                              (line  48)
* cols:                                  Curses screen initialization and manipulation routines.
                                                              (line  24)
* Complex characters, modifying:         Making rendered characters.
                                                              (line 132)
* Complex characters, querying:          Making rendered characters.
                                                              (line 124)
* Control character processing:          Input options.       (line   8)
* Control character processing <1>:      Input options.       (line 121)
* Coordinates:                           Overview.            (line 102)
* Copying windows:                       Overlay and manipulate overlapped windows.
                                                              (line  19)
* copywin:                               Overlay and manipulate overlapped windows.
                                                              (line  17)
* current-field:                         Setting the page number and field.
                                                              (line   6)
* current-item:                          Menu Item Procedures.
                                                              (line  17)
* curs-set:                              Low-level routines.  (line  46)
* Curses mode, exiting:                  Curses screen initialization and manipulation routines.
                                                              (line  70)
* Curses, dumping to disk:               Reading and writing a curses screen to a file.
                                                              (line   7)
* Curses, ending:                        Curses screen initialization and manipulation routines.
                                                              (line   6)
* Curses, ending <1>:                    Low-level routines.  (line  24)
* Curses, initialization:                Curses screen initialization and manipulation routines.
                                                              (line   6)
* Curses, Initialization:                Curses screen initialization and manipulation routines.
                                                              (line  12)
* Curses, termination:                   Curses screen initialization and manipulation routines.
                                                              (line   6)
* curses-error?:                         Errors and Exceptions.
                                                              (line  11)
* curses-version:                        Miscellaneous utilities.
                                                              (line  69)
* curses-wrong-type-arg-error:arg:       Errors and Exceptions.
                                                              (line  17)
* curses-wrong-type-arg-error:expected-type: Errors and Exceptions.
                                                              (line  18)
* curses-wrong-type-arg-error?:          Errors and Exceptions.
                                                              (line  16)
* Cursor, hiding:                        Low-level routines.  (line  47)
* Cursor, positioning:                   Output options.      (line  55)
* Cursor, visiblity:                     Low-level routines.  (line  47)
* cursyncup:                             Window creation.     (line 126)
* data-ahead?:                           Form procedures.     (line   6)
* data-behind?:                          Form procedures.     (line   7)
* def-prog-mode:                         Low-level routines.  (line  10)
* def-shell-mode:                        Low-level routines.  (line  11)
* Default colors:                        Color manipulation routines.
                                                              (line 148)
* define-key:                            Handling unmapped keys.
                                                              (line  31)
* del-panel!:                            The curses panel library.
                                                              (line  50)
* delay-output:                          Miscellaneous utilities.
                                                              (line  54)
* Delaying output:                       Miscellaneous utilities.
                                                              (line  55)
* delch:                                 Deleting the character under the cursor.
                                                              (line   6)
* delch <1>:                             Getting characters from the keyboard.
                                                              (line  17)
* deleteln:                              Deleting and inserting lines.
                                                              (line   6)
* delscreen:                             Curses screen initialization and manipulation routines.
                                                              (line 100)
* delscreen <1>:                         Curses screen initialization and manipulation routines.
                                                              (line 100)
* delwin:                                Window creation.     (line  30)
* derwin:                                Window creation.     (line  77)
* dim:                                   Making rendered characters.
                                                              (line  24)
* dim-off:                               Making rendered characters.
                                                              (line  83)
* dim-on:                                Making rendered characters.
                                                              (line  55)
* doupdate:                              Curses screen initialization and manipulation routines.
                                                              (line  69)
* doupdate <1>:                          Low-level routines.  (line  24)
* doupdate <2>:                          Refresh windows and lines.
                                                              (line   8)
* doupdate <3>:                          Refresh windows and lines.
                                                              (line  21)
* doupdate <4>:                          Reading and writing a curses screen to a file.
                                                              (line  12)
* Dumping to disk:                       Reading and writing a curses screen to a file.
                                                              (line   7)
* dup-field:                             Color and attribute control for form fields.
                                                              (line 104)
* dupwin:                                Window creation.     (line 100)
* dynamic-field-info:                    Color and attribute control for form fields.
                                                              (line  77)
* echo!:                                 Input options.       (line  28)
* echochar:                              Adding characters.   (line  39)
* Echoing:                               Initialization Functions.
                                                              (line  24)
* Echoing <1>:                           getch class of functions.
                                                              (line   6)
* Echoing <2>:                           Input options.       (line  30)
* endwin:                                Overview.            (line  16)
* endwin <1>:                            Curses screen initialization and manipulation routines.
                                                              (line  60)
* endwin <2>:                            Curses screen initialization and manipulation routines.
                                                              (line  69)
* endwin <3>:                            Curses screen initialization and manipulation routines.
                                                              (line 100)
* endwin <4>:                            Low-level routines.  (line  24)
* endwin <5>:                            Reading and writing a curses screen to a file.
                                                              (line  19)
* erase:                                 Clearing windows and parts of window.
                                                              (line  10)
* erase <1>:                             Clearing windows and parts of window.
                                                              (line  19)
* erasechar:                             Terminal attributes. (line  13)
* Erasing the screen:                    Clearing windows and parts of window.
                                                              (line  19)
* Erasing the screen <1>:                Output options.      (line  11)
* Exiting curses mode:                   Curses screen initialization and manipulation routines.
                                                              (line  70)
* field-back:                            Color and attribute control for form fields.
                                                              (line  17)
* field-buffer:                          Color and attribute control for form fields.
                                                              (line  49)
* field-count:                           Making or breaking connections between forms and fields.
                                                              (line  16)
* field-fore:                            Color and attribute control for form fields.
                                                              (line  16)
* field-index:                           Setting the page number and field.
                                                              (line  13)
* field-info:                            Color and attribute control for form fields.
                                                              (line  69)
* field-just:                            Color and attribute control for form fields.
                                                              (line  90)
* field-opts:                            Color and attribute control for form fields.
                                                              (line 121)
* field-opts-off!:                       Color and attribute control for form fields.
                                                              (line 120)
* field-opts-on!:                        Color and attribute control for form fields.
                                                              (line 119)
* field-pad:                             Color and attribute control for form fields.
                                                              (line  31)
* field-status?:                         Color and attribute control for form fields.
                                                              (line  54)
* field-type:                            Data type validation for fields.
                                                              (line  11)
* flash:                                 Bell and screen flash routines.
                                                              (line   7)
* Flashing the screen:                   Bell and screen flash routines.
                                                              (line   9)
* Flushing:                              Input options.       (line 135)
* Flushing input:                        Miscellaneous utilities.
                                                              (line  63)
* flushinp:                              Miscellaneous utilities.
                                                              (line  62)
* fopen:                                 Curses screen initialization and manipulation routines.
                                                              (line  30)
* Foreign object types used in Curses:   Opaque types.        (line   6)
* form-driver:                           Form procedures.     (line  23)
* form-opts:                             Setting and getting form options.
                                                              (line  18)
* form-opts-off!:                        Setting and getting form options.
                                                              (line   8)
* form-opts-on!:                         Setting and getting form options.
                                                              (line   7)
* form-page:                             Setting the page number and field.
                                                              (line  21)
* form-request-by-name:                  Printable form request names.
                                                              (line   7)
* form-request-name:                     Printable form request names.
                                                              (line   6)
* form-sub:                              Form windows.        (line   9)
* form-win:                              Form windows.        (line   7)
* free-field:                            Color and attribute control for form fields.
                                                              (line 111)
* Function keys:                         Initialization Functions.
                                                              (line  31)
* Function keys <1>:                     The basics of keys.  (line   6)
* getbegx:                               Cursor location and window coordinates.
                                                              (line  26)
* getbegy:                               Cursor location and window coordinates.
                                                              (line  27)
* getbegyx:                              Cursor location and window coordinates.
                                                              (line  25)
* getbkgd:                               Window background manipulation routines.
                                                              (line  33)
* getch:                                 Getting characters from the keyboard.
                                                              (line   6)
* getch <1>:                             Getting characters from the keyboard.
                                                              (line  55)
* getch <2>:                             Receiving strings from the keyboard.
                                                              (line   8)
* getch <3>:                             Input options.       (line  23)
* getch <4>:                             Input options.       (line 102)
* getch <5>:                             Input options.       (line 111)
* getcurx:                               Cursor location and window coordinates.
                                                              (line   7)
* getcury:                               Cursor location and window coordinates.
                                                              (line   8)
* getdelay:                              Input options.       (line 158)
* getmaxx:                               Cursor location and window coordinates.
                                                              (line  32)
* getmaxy:                               Cursor location and window coordinates.
                                                              (line  33)
* getmaxyx:                              Cursor location and window coordinates.
                                                              (line  31)
* getmouse:                              Mouse handling.      (line  73)
* getnstr:                               Receiving strings from the keyboard.
                                                              (line   6)
* getparx:                               Cursor location and window coordinates.
                                                              (line  16)
* getpary:                               Cursor location and window coordinates.
                                                              (line  17)
* getparyx:                              Cursor location and window coordinates.
                                                              (line  15)
* getscrreg:                             Output options.      (line  77)
* getwin:                                Reading and writing a curses screen to a file.
                                                              (line  38)
* getwin <1>:                            Miscellaneous utilities.
                                                              (line  39)
* getwin <2>:                            Miscellaneous utilities.
                                                              (line  45)
* getyx:                                 Cursor location and window coordinates.
                                                              (line   6)
* grantpt:                               Pseudoterminal helper procedures.
                                                              (line  61)
* guile-ncurses-shell:                   Interactive sessions and guile-ncurses-shell.
                                                              (line   6)
* Half-delay mode:                       Initialization Functions.
                                                              (line  40)
* Half-delay mode <1>:                   Input options.       (line  44)
* halfdelay!:                            Input options.       (line  43)
* has-colors?:                           Color manipulation routines.
                                                              (line 102)
* has-ic?:                               Terminal attributes. (line  19)
* has-il?:                               Terminal attributes. (line  24)
* has-key?:                              Getting characters from the keyboard.
                                                              (line 169)
* has-mouse?:                            Mouse handling.      (line  12)
* Hello, world:                          Using the Guile Curses module.
                                                              (line   9)
* hide-panel:                            Panels Basics.       (line  31)
* hide-panel <1>:                        The curses panel library.
                                                              (line  55)
* hline:                                 Borders and lines.   (line  31)
* horizontal:                            Making rendered characters.
                                                              (line  25)
* horizontal-off:                        Making rendered characters.
                                                              (line  84)
* horizontal-on:                         Making rendered characters.
                                                              (line  56)
* idcok!:                                Output options.      (line  34)
* idlok!:                                Output options.      (line  20)
* idlok! <1>:                            Output options.      (line  63)
* idlok! <2>:                            Output options.      (line  82)
* immedok!:                              Output options.      (line  44)
* inch:                                  Adding characters.   (line  26)
* inch <1>:                              Getting a rendered character from the window.
                                                              (line   9)
* inchnstr:                              Getting a string of characters and attributes from a window.
                                                              (line   6)
* init-color!:                           Color manipulation routines.
                                                              (line  54)
* init-color! <1>:                       Color manipulation routines.
                                                              (line  57)
* init-pair!:                            Character and window attribute control routines.
                                                              (line  68)
* init-pair! <1>:                        Color manipulation routines.
                                                              (line   6)
* init-pair! <2>:                        Color manipulation routines.
                                                              (line  72)
* init-pair! <3>:                        Color manipulation routines.
                                                              (line 136)
* init-pair! <4>:                        Color manipulation routines.
                                                              (line 148)
* Initialization:                        Using the Guile Curses module.
                                                              (line  33)
* Initialization <1>:                    Initialization.      (line   6)
* Initialization <2>:                    Curses screen initialization and manipulation routines.
                                                              (line   6)
* Initialization <3>:                    Curses screen initialization and manipulation routines.
                                                              (line  12)
* Initializing the terminal:             Using the Guile Curses module.
                                                              (line  33)
* initscr:                               Using the Guile Curses module.
                                                              (line  33)
* initscr <1>:                           Initialization.      (line   6)
* initscr <2>:                           Overview.            (line  16)
* initscr <3>:                           Overview.            (line  23)
* initscr <4>:                           Curses screen initialization and manipulation routines.
                                                              (line   6)
* initscr <5>:                           Curses screen initialization and manipulation routines.
                                                              (line  11)
* initscr <6>:                           Curses screen initialization and manipulation routines.
                                                              (line  11)
* initscr <7>:                           Curses screen initialization and manipulation routines.
                                                              (line  60)
* initscr <8>:                           Color manipulation routines.
                                                              (line   6)
* initscr <9>:                           Color manipulation routines.
                                                              (line  25)
* initscr <10>:                          Low-level routines.  (line  13)
* initscr <11>:                          Reading and writing a curses screen to a file.
                                                              (line  19)
* initscr <12>:                          Miscellaneous utilities.
                                                              (line  27)
* initscr <13>:                          Function key labels library.
                                                              (line  22)
* Input:                                 Getting characters from the keyboard.
                                                              (line   7)
* Input, blocking:                       Input options.       (line 102)
* Input, blocking <1>:                   Input options.       (line 147)
* Input, blocking <2>:                   Input options.       (line 159)
* Input, flushing:                       Input options.       (line 135)
* Input, flushing <1>:                   Miscellaneous utilities.
                                                              (line  63)
* Inputting characters:                  getch class of functions.
                                                              (line   6)
* Inputting characters <1>:              Getting characters from the keyboard.
                                                              (line   7)
* insch:                                 Inserting a character before the cursor.
                                                              (line   6)
* insdelln:                              Deleting and inserting lines.
                                                              (line  15)
* Insert character:                      Terminal attributes. (line  20)
* Insert lines:                          Terminal attributes. (line  25)
* insertln:                              Deleting and inserting lines.
                                                              (line  25)
* insstr:                                Inserting a string before the cursor.
                                                              (line   6)
* instr:                                 Getting a string of characters from the screen.
                                                              (line   6)
* intrflush!:                            Overview.            (line  28)
* intrflush! <1>:                        Input options.       (line  54)
* inverse:                               Making rendered characters.
                                                              (line  31)
* inverse-off:                           Making rendered characters.
                                                              (line  90)
* inverse-on:                            Making rendered characters.
                                                              (line  62)
* invis:                                 Making rendered characters.
                                                              (line  26)
* invis-off:                             Making rendered characters.
                                                              (line  85)
* invis-on:                              Making rendered characters.
                                                              (line  57)
* is-cleared?:                           Output options.      (line 112)
* is-idcok?:                             Output options.      (line 114)
* is-idlok?:                             Output options.      (line 113)
* is-immedok?:                           Input options.       (line 188)
* is-immedok? <1>:                       Output options.      (line 115)
* is-keypad?:                            Input options.       (line 185)
* is-leaveok?:                           Output options.      (line 116)
* is-linetouched?:                       Refresh routines.    (line  18)
* is-meta?:                              Input options.       (line 186)
* is-nodelay?:                           Input options.       (line 187)
* is-notimeout?:                         Input options.       (line 189)
* is-pad?:                               Create and display pads.
                                                              (line  21)
* is-scrollok?:                          Output options.      (line 117)
* is-subwin?:                            Window creation.     (line  65)
* is-wintouched?:                        Refresh routines.    (line  23)
* isendwin?:                             Curses screen initialization and manipulation routines.
                                                              (line  83)
* item-count:                            Menu Colors and Attributes.
                                                              (line  34)
* item-description:                      Menu Item Procedures.
                                                              (line  46)
* item-index:                            Menu Item Procedures.
                                                              (line  39)
* item-name:                             Menu Item Procedures.
                                                              (line  43)
* item-opts:                             Menu Item Procedures.
                                                              (line  64)
* item-opts-off!:                        Menu Item Procedures.
                                                              (line  51)
* item-opts-on!:                         Menu Item Procedures.
                                                              (line  50)
* item-value:                            Menu Item Procedures.
                                                              (line  68)
* item-visible?:                         Menu Item Procedures.
                                                              (line  78)
* Key names:                             Miscellaneous utilities.
                                                              (line  17)
* key-defined:                           Handling unmapped keys.
                                                              (line  47)
* key-f:                                 Getting characters from the keyboard.
                                                              (line  52)
* Keycodes:                              Getting characters from the keyboard.
                                                              (line  68)
* Keycodes, customizing:                 Handling unmapped keys.
                                                              (line  32)
* Keycodes, lookup:                      Handling unmapped keys.
                                                              (line  48)
* keyname:                               Miscellaneous utilities.
                                                              (line  16)
* keypad!:                               Overview.            (line  28)
* keypad! <1>:                           Getting characters from the keyboard.
                                                              (line  26)
* keypad! <2>:                           Getting characters from the keyboard.
                                                              (line  55)
* keypad! <3>:                           Input options.       (line  66)
* Keys:                                  Getting characters from the keyboard.
                                                              (line 170)
* Keys, custom:                          Handling unmapped keys.
                                                              (line   6)
* Keys, unmapped:                        Handling unmapped keys.
                                                              (line   6)
* killchar:                              Terminal attributes. (line  31)
* leaveok!:                              Output options.      (line  54)
* leaveok! <1>:                          Refresh windows and lines.
                                                              (line   8)
* left:                                  Making rendered characters.
                                                              (line  27)
* left-off:                              Making rendered characters.
                                                              (line  86)
* left-on:                               Making rendered characters.
                                                              (line  58)
* Line buffering:                        Initialization Functions.
                                                              (line   9)
* Line buffering <1>:                    Initialization Functions.
                                                              (line  40)
* Line buffering <2>:                    Input options.       (line   8)
* Line buffering <3>:                    Input options.       (line  44)
* Line buffering <4>:                    Input options.       (line 121)
* Line feed:                             Output options.      (line  96)
* Line graphics:                         Adding characters.   (line  61)
* lines:                                 Curses screen initialization and manipulation routines.
                                                              (line  25)
* longname:                              Terminal attributes. (line  36)
* low:                                   Making rendered characters.
                                                              (line  28)
* low-off:                               Making rendered characters.
                                                              (line  87)
* low-on:                                Making rendered characters.
                                                              (line  59)
* make-panel!:                           Panels Basics.       (line  22)
* make-panel! <1>:                       The curses panel library.
                                                              (line  23)
* mcprint:                               Print data to a terminal-attached ports.
                                                              (line  11)
* menu-back:                             Menu Colors and Attributes.
                                                              (line  21)
* menu-driver:                           The menu driver.     (line   6)
* menu-fore:                             Menu Colors and Attributes.
                                                              (line  20)
* menu-format:                           Menu sizes.          (line  21)
* menu-grey:                             Menu Colors and Attributes.
                                                              (line  22)
* menu-mark:                             Menu mark strings.   (line  19)
* menu-opts:                             Menu options.        (line  37)
* menu-opts-off!:                        Menu options.        (line   8)
* menu-opts-on!:                         Menu options.        (line   7)
* menu-pad:                              Menu Colors and Attributes.
                                                              (line  30)
* menu-pattern:                          Menu pattern buffer. (line  21)
* menu-spacing:                          Control spacing between menu items.
                                                              (line   7)
* menu-sub:                              Associate menus with window.
                                                              (line   9)
* menu-win:                              Associate menus with window.
                                                              (line   8)
* meta!:                                 Input options.       (line  82)
* mouse-trafo:                           Mouse handling.      (line  93)
* mouseinterval:                         Mouse handling.      (line 119)
* mousemask:                             Mouse handling.      (line  18)
* move:                                  Overview.            (line  53)
* move <1>:                              Moving the cursor.   (line   6)
* move-field:                            Making or breaking connections between forms and fields.
                                                              (line  20)
* move-panel:                            Panels Basics.       (line  31)
* move-panel <1>:                        The curses panel library.
                                                              (line  77)
* mvderwin:                              Window creation.     (line  91)
* mvwin:                                 Window creation.     (line  40)
* napms:                                 Low-level routines.  (line  54)
* Ncurses, version information:          Miscellaneous utilities.
                                                              (line  70)
* new-field:                             Color and attribute control for form fields.
                                                              (line  98)
* new-form:                              Creating forms.      (line   6)
* new-item:                              Opaque types.        (line  28)
* new-item <1>:                          Menu Item Procedures.
                                                              (line   6)
* new-menu:                              Opaque types.        (line  34)
* new-menu <1>:                          Menu creation.       (line   6)
* new-page?:                             Form pagination functions.
                                                              (line  10)
* new-termios:                           Standard termios functions.
                                                              (line  10)
* newpad:                                Create and display pads.
                                                              (line  16)
* newterm:                               Opaque types.        (line  18)
* newterm <1>:                           Overview.            (line  16)
* newterm <2>:                           Curses screen initialization and manipulation routines.
                                                              (line   6)
* newterm <3>:                           Curses screen initialization and manipulation routines.
                                                              (line  30)
* newterm <4>:                           Curses screen initialization and manipulation routines.
                                                              (line  31)
* newterm <5>:                           Curses screen initialization and manipulation routines.
                                                              (line  60)
* newterm <6>:                           Low-level routines.  (line  13)
* newterm <7>:                           Function key labels library.
                                                              (line  22)
* newwin:                                Opaque types.        (line  11)
* newwin <1>:                            Window creation.     (line  17)
* nl!:                                   Output options.      (line  94)
* nocbreak!:                             Getting characters from the keyboard.
                                                              (line   7)
* nocbreak! <1>:                         Input options.       (line   7)
* nocbreak! <2>:                         Input options.       (line  45)
* nodelay!:                              Input options.       (line 101)
* nodelay! <1>:                          Input options.       (line 147)
* noecho!:                               Overview.            (line  23)
* noecho! <1>:                           Getting characters from the keyboard.
                                                              (line  17)
* noecho! <2>:                           Input options.       (line  29)
* nonl!:                                 Overview.            (line  28)
* nonl! <1>:                             Output options.      (line  95)
* noqiflush!:                            Input options.       (line 133)
* noraw!:                                Input options.       (line 120)
* normal:                                Making rendered characters.
                                                              (line  29)
* normal-off:                            Making rendered characters.
                                                              (line  88)
* normal-on:                             Making rendered characters.
                                                              (line  60)
* notimeout!:                            Input options.       (line 109)
* noutrefresh:                           Create and display pads.
                                                              (line  48)
* noutrefresh <1>:                       Refresh windows and lines.
                                                              (line   8)
* noutrefresh <2>:                       Refresh windows and lines.
                                                              (line  17)
* Opaque types:                          Opaque types.        (line   6)
* openpt:                                Pseudoterminal helper procedures.
                                                              (line  30)
* Output procedures:                     Output functions.    (line   6)
* Output, delaying:                      Miscellaneous utilities.
                                                              (line  55)
* Output, flushing:                      Input options.       (line 135)
* Outputting characters:                 The addch procedure. (line   6)
* Outputting characters <1>:             Adding characters.   (line   6)
* Outputting characters <2>:             Create and display pads.
                                                              (line  65)
* Outputting strings:                    addstr class of functions.
                                                              (line   6)
* Outputting wide characters:            The addch procedure. (line  43)
* overlay:                               Overlay and manipulate overlapped windows.
                                                              (line   6)
* overlay <1>:                           Overlay and manipulate overlapped windows.
                                                              (line  19)
* Overlaying:                            Overlay and manipulate overlapped windows.
                                                              (line   8)
* Overlaying windows:                    Overlay and manipulate overlapped windows.
                                                              (line  19)
* overwrite:                             Overlay and manipulate overlapped windows.
                                                              (line   7)
* overwrite <1>:                         Overlay and manipulate overlapped windows.
                                                              (line  19)
* O_NOCTTY:                              Pseudoterminal helper procedures.
                                                              (line  40)
* O_RDWR:                                Pseudoterminal helper procedures.
                                                              (line  37)
* Pads:                                  Create and display pads.
                                                              (line   6)
* Pads <1>:                              Create and display pads.
                                                              (line  34)
* Pads, creating:                        Create and display pads.
                                                              (line   6)
* Pads, creating <1>:                    Create and display pads.
                                                              (line  17)
* Pads, refreshing:                      Create and display pads.
                                                              (line  48)
* pair-content:                          Color manipulation routines.
                                                              (line 125)
* pair-number:                           Character and window attribute control routines.
                                                              (line  98)
* panel-hidden:                          Panels Basics.       (line  31)
* panel-hidden?:                         The curses panel library.
                                                              (line  61)
* panel=?:                               The curses panel library.
                                                              (line  36)
* panel?:                                The curses panel library.
                                                              (line  31)
* Panels, display:                       Panels Basics.       (line  27)
* Panels, initialization:                Panels Basics.       (line  22)
* panels-for-each:                       The curses panel library.
                                                              (line  89)
* panels-map:                            The curses panel library.
                                                              (line  83)
* pechochar:                             Create and display pads.
                                                              (line  64)
* pnoutrefresh:                          Create and display pads.
                                                              (line   6)
* pnoutrefresh <1>:                      Create and display pads.
                                                              (line  46)
* pos-form-cursor:                       Forms Overview.      (line  15)
* pos-menu-cursor:                       Positioning a menu cursor.
                                                              (line   6)
* post-form:                             Writing or erasing forms from associated subwindows.
                                                              (line   6)
* post-menu:                             Writing or erasing menus from window.
                                                              (line   6)
* prefresh:                              Overlay and manipulate overlapped windows.
                                                              (line  19)
* prefresh <1>:                          Create and display pads.
                                                              (line   6)
* prefresh <2>:                          Create and display pads.
                                                              (line  34)
* prefresh <3>:                          Create and display pads.
                                                              (line  44)
* prefresh <4>:                          Create and display pads.
                                                              (line  65)
* Print procedures:                      Output functions.    (line   6)
* protect:                               Making rendered characters.
                                                              (line  30)
* protect-off:                           Making rendered characters.
                                                              (line  89)
* protect-on:                            Making rendered characters.
                                                              (line  61)
* ptsmakeraw:                            Pseudoterminal helper procedures.
                                                              (line  44)
* ptsname:                               Pseudoterminal helper procedures.
                                                              (line  56)
* putwin:                                Reading and writing a curses screen to a file.
                                                              (line  38)
* putwin <1>:                            Miscellaneous utilities.
                                                              (line  37)
* putwin <2>:                            Miscellaneous utilities.
                                                              (line  47)
* qiflush!:                              Input options.       (line 134)
* Quitting Curses:                       Using the Guile Curses module.
                                                              (line  81)
* raw!:                                  Input options.       (line  23)
* raw! <1>:                              Input options.       (line 119)
* Redrawing:                             Refresh windows and lines.
                                                              (line  54)
* Redrawing windows:                     Using the Guile Curses module.
                                                              (line  56)
* redrawln:                              Refresh windows and lines.
                                                              (line  53)
* redrawwin:                             Refresh windows and lines.
                                                              (line  52)
* refresh:                               Overview.            (line  59)
* refresh <1>:                           Curses screen initialization and manipulation routines.
                                                              (line  12)
* refresh <2>:                           Curses screen initialization and manipulation routines.
                                                              (line  69)
* refresh <3>:                           Adding characters.   (line  41)
* refresh <4>:                           Clearing windows and parts of window.
                                                              (line  19)
* refresh <5>:                           Getting characters from the keyboard.
                                                              (line  39)
* refresh <6>:                           Moving the cursor.   (line   8)
* refresh <7>:                           Output options.      (line  11)
* refresh <8>:                           Output options.      (line  45)
* refresh <9>:                           Create and display pads.
                                                              (line   6)
* refresh <10>:                          Create and display pads.
                                                              (line  48)
* refresh <11>:                          Create and display pads.
                                                              (line  65)
* refresh <12>:                          Refresh windows and lines.
                                                              (line   6)
* refresh <13>:                          Refresh routines.    (line  30)
* refresh <14>:                          Refresh routines.    (line  35)
* refresh <15>:                          Window creation.     (line  51)
* refresh <16>:                          Window creation.     (line 121)
* Refreshing windows:                    Using the Guile Curses module.
                                                              (line  56)
* Rendition:                             Characters.          (line  18)
* reset-prog-mode:                       Low-level routines.  (line  22)
* reset-shell-mode:                      Low-level routines.  (line  23)
* resetty:                               Low-level routines.  (line  34)
* resize:                                Terminal resizing.   (line   6)
* resizeterm:                            Getting characters from the keyboard.
                                                              (line 170)
* resizeterm <1>:                        Terminal resizing.   (line  17)
* Resizing windows:                      Terminal resizing.   (line   7)
* Resizing windows <1>:                  Terminal resizing.   (line  18)
* right:                                 Making rendered characters.
                                                              (line  32)
* right-off:                             Making rendered characters.
                                                              (line  91)
* right-on:                              Making rendered characters.
                                                              (line  63)
* savetty:                               Low-level routines.  (line  35)
* scale-form:                            Form windows.        (line  10)
* scale-menu:                            Associate menus with window.
                                                              (line  10)
* scr-dump:                              Reading and writing a curses screen to a file.
                                                              (line   6)
* scr-dump <1>:                          Reading and writing a curses screen to a file.
                                                              (line  19)
* scr-init:                              Reading and writing a curses screen to a file.
                                                              (line  17)
* scr-init <1>:                          Reading and writing a curses screen to a file.
                                                              (line  32)
* scr-restore:                           Reading and writing a curses screen to a file.
                                                              (line  10)
* scr-restore <1>:                       Reading and writing a curses screen to a file.
                                                              (line  32)
* scr-set:                               Reading and writing a curses screen to a file.
                                                              (line  30)
* Screens, clearing:                     Clearing windows and parts of window.
                                                              (line  19)
* Screens, clearing <1>:                 Output options.      (line  11)
* Screens, creation:                     Curses screen initialization and manipulation routines.
                                                              (line   6)
* Screens, erasing:                      Clearing windows and parts of window.
                                                              (line  19)
* Screens, erasing <1>:                  Output options.      (line  11)
* Screens, freeing:                      Curses screen initialization and manipulation routines.
                                                              (line 101)
* Screens, switching:                    Curses screen initialization and manipulation routines.
                                                              (line  88)
* scrl:                                  Scroll a window.     (line  13)
* scroll:                                Scroll a window.     (line   6)
* Scrolling:                             Output options.      (line  63)
* Scrolling <1>:                         Output options.      (line  82)
* Scrolling <2>:                         Scroll a window.     (line  14)
* scrollok!:                             Adding characters.   (line  10)
* scrollok! <1>:                         Output options.      (line  63)
* scrollok! <2>:                         Output options.      (line  81)
* scrollok! <3>:                         Scroll a window.     (line  14)
* scrollok! <4>:                         Terminal attributes. (line  26)
* set-current-field!:                    Setting the page number and field.
                                                              (line  10)
* set-current-item!:                     Menu Item Procedures.
                                                              (line  11)
* set-field-back!:                       Color and attribute control for form fields.
                                                              (line   7)
* set-field-buffer!:                     Color and attribute control for form fields.
                                                              (line  42)
* set-field-fore!:                       Color and attribute control for form fields.
                                                              (line   6)
* set-field-just!:                       Color and attribute control for form fields.
                                                              (line  85)
* set-field-opts!:                       Color and attribute control for form fields.
                                                              (line 118)
* set-field-pad!:                        Color and attribute control for form fields.
                                                              (line  23)
* set-field-status!:                     Color and attribute control for form fields.
                                                              (line  58)
* set-field-type!:                       Data type validation for fields.
                                                              (line  10)
* set-form-fields:                       Making or breaking connections between forms and fields.
                                                              (line   6)
* set-form-opts:                         Setting and getting form options.
                                                              (line   6)
* set-form-page:                         Setting the page number and field.
                                                              (line  18)
* set-form-sub:                          Form windows.        (line   8)
* set-form-win:                          Form windows.        (line   6)
* set-item-opts!:                        Menu Item Procedures.
                                                              (line  49)
* set-item-value!:                       Menu Item Procedures.
                                                              (line  67)
* set-max-field:                         Color and attribute control for form fields.
                                                              (line  61)
* set-menu-back!:                        Menu Colors and Attributes.
                                                              (line   7)
* set-menu-fore!:                        Menu Colors and Attributes.
                                                              (line   6)
* set-menu-format!:                      Menu sizes.          (line   6)
* set-menu-grey!:                        Menu Colors and Attributes.
                                                              (line   8)
* set-menu-mark!:                        Menu mark strings.   (line   6)
* set-menu-opts!:                        Menu options.        (line   6)
* set-menu-pad:                          Menu Colors and Attributes.
                                                              (line  26)
* set-menu-pattern!:                     Menu pattern buffer. (line   6)
* set-menu-spacing!:                     Control spacing between menu items.
                                                              (line   6)
* set-menu-sub!:                         Associate menus with window.
                                                              (line   7)
* set-menu-win!:                         Associate menus with window.
                                                              (line   6)
* set-new-page:                          Form pagination functions.
                                                              (line   6)
* set-tabsize!:                          Adding characters.   (line  18)
* set-tabsize! <1>:                      Adding characters.   (line  53)
* set-term:                              Opaque types.        (line  18)
* set-term <1>:                          Curses screen initialization and manipulation routines.
                                                              (line  87)
* set-top-row!:                          Menu Item Procedures.
                                                              (line  20)
* set-xchar-attr!:                       Making rendered characters.
                                                              (line 129)
* set-xchar-chars!:                      Making rendered characters.
                                                              (line 131)
* set-xchar-color!:                      Making rendered characters.
                                                              (line 130)
* setscrreg!:                            Output options.      (line  62)
* setupterm:                             Querying the terminfo database.
                                                              (line  16)
* show-panel:                            Panels Basics.       (line  31)
* show-panel <1>:                        The curses panel library.
                                                              (line  66)
* Signals, disabling:                    Initialization Functions.
                                                              (line   9)
* slk-attr:                              Function key labels library.
                                                              (line  71)
* slk-attr-off!:                         Function key labels library.
                                                              (line  68)
* slk-attr-on!:                          Function key labels library.
                                                              (line  67)
* slk-attr-set!:                         Function key labels library.
                                                              (line  69)
* slk-clear:                             Function key labels library.
                                                              (line  56)
* slk-color!:                            Function key labels library.
                                                              (line  70)
* slk-init:                              Curses screen initialization and manipulation routines.
                                                              (line   6)
* slk-init <1>:                          Mouse handling.      (line  95)
* slk-init <2>:                          Function key labels library.
                                                              (line  20)
* slk-label:                             Function key labels library.
                                                              (line  52)
* slk-noutrefresh:                       Function key labels library.
                                                              (line  47)
* slk-refresh:                           Function key labels library.
                                                              (line  46)
* slk-restore:                           Function key labels library.
                                                              (line  59)
* slk-set:                               Function key labels library.
                                                              (line  33)
* slk-touch:                             Function key labels library.
                                                              (line  63)
* standend!:                             Character and window attribute control routines.
                                                              (line  17)
* standout:                              Making rendered characters.
                                                              (line  33)
* standout!:                             Character and window attribute control routines.
                                                              (line  18)
* standout-off:                          Making rendered characters.
                                                              (line  92)
* standout-on:                           Making rendered characters.
                                                              (line  64)
* start-color!:                          Color manipulation routines.
                                                              (line  24)
* stdscr:                                Curses screen initialization and manipulation routines.
                                                              (line  11)
* stdscr <1>:                            Curses screen initialization and manipulation routines.
                                                              (line  12)
* stdscr <2>:                            Overview.            (line  38)
* stdscr <3>:                            Overview.            (line  53)
* stdscr <4>:                            Overview.            (line  59)
* subpad:                                Create and display pads.
                                                              (line  33)
* subwin:                                Create and display pads.
                                                              (line  34)
* subwin <1>:                            Create and display pads.
                                                              (line  34)
* subwin <2>:                            Window creation.     (line  49)
* Subwindows:                            Window creation.     (line  50)
* Subwindows <1>:                        Window creation.     (line  78)
* Switching terminals:                   Curses screen initialization and manipulation routines.
                                                              (line  88)
* syncdown:                              Window creation.     (line 119)
* syncok!:                               Window creation.     (line 106)
* syncok! <1>:                           Window creation.     (line 112)
* syncup:                                Window creation.     (line 105)
* tabsize:                               Adding characters.   (line  50)
* tcdrain:                               Termios port interface.
                                                              (line  34)
* tcflow:                                Termios port interface.
                                                              (line  38)
* tcflush:                               Termios port interface.
                                                              (line  48)
* tcgetattr:                             Termios port interface.
                                                              (line  14)
* tcsetattr!:                            Termios port interface.
                                                              (line  19)
* term-attrs:                            Terminal attributes. (line  42)
* termattrs:                             Terminal attributes. (line  41)
* termcap:                               Terminal Capabilities.
                                                              (line   6)
* Terminal capabilities:                 Querying the terminfo database.
                                                              (line  29)
* Terminal capabilities, color:          Changing color definitions.
                                                              (line   6)
* Terminal capabilities, color <1>:      Color manipulation routines.
                                                              (line 103)
* Terminal capabilities, color <2>:      Color manipulation routines.
                                                              (line 111)
* Terminal capabilities, insert:         Terminal attributes. (line  20)
* Terminal capabilities, insert <1>:     Terminal attributes. (line  25)
* Terminal capabilities, keys:           Getting characters from the keyboard.
                                                              (line 170)
* Terminal initialization:               Using the Guile Curses module.
                                                              (line  33)
* Terminal modes:                        Low-level routines.  (line  24)
* Terminal modes <1>:                    Low-level routines.  (line  36)
* Terminal modes, saving:                Low-level routines.  (line  13)
* Terminal, baudrate:                    Terminal attributes. (line   7)
* Terminals, resizing:                   Terminal resizing.   (line  18)
* Terminals, switching:                  Curses screen initialization and manipulation routines.
                                                              (line  88)
* terminfo:                              Terminal Capabilities.
                                                              (line   6)
* Terminfo:                              Querying the terminfo database.
                                                              (line  17)
* Terminfo <1>:                          Querying the terminfo database.
                                                              (line  29)
* termios-csize-get:                     Standard termios functions.
                                                              (line 139)
* termios-csize-set!:                    Standard termios functions.
                                                              (line 140)
* termios-flag-clear!:                   Standard termios functions.
                                                              (line  29)
* termios-flag-get:                      Standard termios functions.
                                                              (line  34)
* termios-flag-set!:                     Standard termios functions.
                                                              (line  24)
* termios-flag-test:                     Standard termios functions.
                                                              (line  38)
* termios-ispeed-get:                    Standard termios functions.
                                                              (line 225)
* termios-ispeed-set!:                   Standard termios functions.
                                                              (line 226)
* termios-ospeed-get:                    Standard termios functions.
                                                              (line 227)
* termios-ospeed-set!:                   Standard termios functions.
                                                              (line 228)
* termios-veof-get:                      Standard termios functions.
                                                              (line 144)
* termios-veof-set!:                     Standard termios functions.
                                                              (line 145)
* termios-veol-get:                      Standard termios functions.
                                                              (line 156)
* termios-veol-set!:                     Standard termios functions.
                                                              (line 157)
* termios-verase-get:                    Standard termios functions.
                                                              (line 163)
* termios-verase-set!:                   Standard termios functions.
                                                              (line 164)
* termios-vintr-get:                     Standard termios functions.
                                                              (line 173)
* termios-vintr-set!:                    Standard termios functions.
                                                              (line 174)
* termios-vkill-get:                     Standard termios functions.
                                                              (line 181)
* termios-vkill-set!:                    Standard termios functions.
                                                              (line 182)
* termios-vmin-get:                      Standard termios functions.
                                                              (line 249)
* termios-vmin-set!:                     Standard termios functions.
                                                              (line 250)
* termios-vquit-get:                     Standard termios functions.
                                                              (line 190)
* termios-vquit-set!:                    Standard termios functions.
                                                              (line 191)
* termios-vstart-get:                    Standard termios functions.
                                                              (line 198)
* termios-vstart-set!:                   Standard termios functions.
                                                              (line 199)
* termios-vstop-get:                     Standard termios functions.
                                                              (line 207)
* termios-vstop-set!:                    Standard termios functions.
                                                              (line 208)
* termios-vsusp-get:                     Standard termios functions.
                                                              (line 216)
* termios-vsusp-set!:                    Standard termios functions.
                                                              (line 217)
* termios-vtime-get:                     Standard termios functions.
                                                              (line 243)
* termios-vtime-set!:                    Standard termios functions.
                                                              (line 244)
* termios?:                              Standard termios functions.
                                                              (line  16)
* termname:                              Terminal attributes. (line  50)
* tiget:                                 Querying the terminfo database.
                                                              (line  28)
* timeout!:                              Input options.       (line 159)
* timeout! <1>:                          Input options.       (line 146)
* top:                                   Making rendered characters.
                                                              (line  34)
* top-off:                               Making rendered characters.
                                                              (line  93)
* top-on:                                Making rendered characters.
                                                              (line  65)
* top-panel:                             The curses panel library.
                                                              (line  70)
* top-row:                               Menu Item Procedures.
                                                              (line  35)
* touchline:                             Create and display pads.
                                                              (line  34)
* touchline <1>:                         Refresh routines.    (line   7)
* touchline <2>:                         Window creation.     (line  51)
* touchwin:                              Create and display pads.
                                                              (line  34)
* touchwin <1>:                          Refresh routines.    (line   6)
* touchwin <2>:                          Window creation.     (line  51)
* tset:                                  Overview.            (line  32)
* Typeahead:                             Miscellaneous utilities.
                                                              (line  63)
* typeahead!:                            Input options.       (line 166)
* unctrl:                                Miscellaneous utilities.
                                                              (line   6)
* underline:                             Making rendered characters.
                                                              (line  35)
* underline-off:                         Making rendered characters.
                                                              (line  94)
* underline-on:                          Making rendered characters.
                                                              (line  66)
* ungetch:                               Getting characters from the keyboard.
                                                              (line  43)
* ungetmouse:                            Mouse handling.      (line  85)
* Unicode:                               Character types.     (line   6)
* unlockpt:                              Pseudoterminal helper procedures.
                                                              (line  48)
* unpost-form:                           Writing or erasing forms from associated subwindows.
                                                              (line  11)
* unpost-menu:                           Writing or erasing menus from window.
                                                              (line   7)
* untouchwin:                            Refresh routines.    (line  28)
* update-panels:                         Panels Basics.       (line  27)
* update-panels <1>:                     The curses panel library.
                                                              (line  41)
* Updating automatically:                Output options.      (line  45)
* use-default-colors:                    Color manipulation routines.
                                                              (line  91)
* use-default-colors <1>:                Color manipulation routines.
                                                              (line 134)
* use-env:                               Curses screen initialization and manipulation routines.
                                                              (line   6)
* use-env <1>:                           Miscellaneous utilities.
                                                              (line  25)
* Version information:                   Miscellaneous utilities.
                                                              (line  70)
* vertical:                              Making rendered characters.
                                                              (line  36)
* vertical-off:                          Making rendered characters.
                                                              (line  95)
* vertical-on:                           Making rendered characters.
                                                              (line  67)
* vline:                                 Borders and lines.   (line  43)
* wenclose?:                             Mouse handling.      (line 111)
* wgetch:                                Getting characters from the keyboard.
                                                              (line  45)
* wgetch <1>:                            Input options.       (line  68)
* window=?:                              Window creation.     (line  11)
* window?:                               Window creation.     (line   6)
* Windows:                               Windows.             (line   6)
* Windows, background:                   Window background manipulation routines.
                                                              (line   6)
* Windows, background <1>:               Window background manipulation routines.
                                                              (line  34)
* Windows, copying:                      Overlay and manipulate overlapped windows.
                                                              (line  19)
* Windows, creation:                     The basics.          (line   6)
* Windows, creation <1>:                 Window creation.     (line  18)
* Windows, derived:                      Window creation.     (line  50)
* Windows, derived <1>:                  Window creation.     (line  78)
* Windows, duplication:                  Window creation.     (line 101)
* Windows, moving:                       Moving and Resizing Panels.
                                                              (line   6)
* Windows, moving <1>:                   Window creation.     (line  41)
* Windows, overlaying:                   Overlay and manipulate overlapped windows.
                                                              (line   8)
* Windows, overlaying <1>:               Overlay and manipulate overlapped windows.
                                                              (line  19)
* Windows, redrawing:                    Refresh windows and lines.
                                                              (line  54)
* Windows, resizing:                     Terminal resizing.   (line   7)
* Windows, resizing <1>:                 Terminal resizing.   (line  18)
* Writing to disk:                       Reading and writing a curses screen to a file.
                                                              (line  11)
* wscrl:                                 Output options.      (line  45)
* wtouchln:                              Refresh routines.    (line  33)
* xchar:                                 Character types.     (line  43)
* xchar-attr:                            Making rendered characters.
                                                              (line 121)
* xchar-chars:                           Making rendered characters.
                                                              (line 123)
* xchar-color:                           Making rendered characters.
                                                              (line 122)
* xchar?:                                Making rendered characters.
                                                              (line 117)

