# Makefile.in generated by automake 1.16.1 from Makefile.am.
# programs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libredwg
pkgincludedir = $(includedir)/libredwg
pkglibdir = $(libdir)/libredwg
pkglibexecdir = $(libexecdir)/libredwg
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = dwgread$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3)
noinst_PROGRAMS = $(am__EXEEXT_4)
am__append_1 = dwgbmp dwg2dxf dwg2SVG dwglayers dwggrep
#am__append_2 = dwg2ps
am__append_3 = dwgrewrite dxf2dwg
# not yet ready
am__append_4 = dwgwrite
am__append_5 = $(srcdir)/dwgrewrite.1 $(srcdir)/dwgwrite.1 $(srcdir)/dxf2dwg.1
am__append_6 = dxf.test
#am__append_7 = json.test
am__append_8 = {example_,sample_}*rewrite.{dwg,log} \
	{example_,sample_}*.dwg
#am__append_9 = 
#am__append_10 = 
#am__append_11 = *.gcov *.gcno *.gcda gcov.log
subdir = programs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_add_fortify_source.m4 \
	$(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_append_link_flags.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_compile_check_sizeof.m4 \
	$(top_srcdir)/m4/ax_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_cflags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_gir.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_ldflags.m4 \
	$(top_srcdir)/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/m4/ax_include_strcasecmp.m4 \
	$(top_srcdir)/m4/ax_is_release.m4 \
	$(top_srcdir)/m4/ax_pkg_swig.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/ax_swig_python.m4 \
	$(top_srcdir)/m4/ax_valgrind_check.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES = alive.test json.test
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = dwgbmp$(EXEEXT) dwg2dxf$(EXEEXT) \
	dwg2SVG$(EXEEXT) dwglayers$(EXEEXT) \
	dwggrep$(EXEEXT)
#am__EXEEXT_2 = dwg2ps$(EXEEXT)
am__EXEEXT_3 = dwgrewrite$(EXEEXT) \
	dxf2dwg$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"
am__EXEEXT_4 = dwgwrite$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_dwg2SVG_OBJECTS = dwg2SVG.$(OBJEXT) escape.$(OBJEXT)
dwg2SVG_OBJECTS = $(am_dwg2SVG_OBJECTS)
dwg2SVG_LDADD = $(LDADD)
dwg2SVG_DEPENDENCIES = $(top_builddir)/src/libredwg.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_dwg2dxf_OBJECTS = dwg2dxf.$(OBJEXT)
dwg2dxf_OBJECTS = $(am_dwg2dxf_OBJECTS)
dwg2dxf_LDADD = $(LDADD)
dwg2dxf_DEPENDENCIES = $(top_builddir)/src/libredwg.la
am__dwg2ps_SOURCES_DIST = dwg2ps.c
#am_dwg2ps_OBJECTS =  \
#	dwg2ps.$(OBJEXT)
dwg2ps_OBJECTS = $(am_dwg2ps_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/src/libredwg.la
#dwg2ps_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am_dwgbmp_OBJECTS = dwgbmp.$(OBJEXT)
dwgbmp_OBJECTS = $(am_dwgbmp_OBJECTS)
dwgbmp_LDADD = $(LDADD)
dwgbmp_DEPENDENCIES = $(top_builddir)/src/libredwg.la
am_dwggrep_OBJECTS = dwggrep-dwggrep.$(OBJEXT)
dwggrep_OBJECTS = $(am_dwggrep_OBJECTS)
am__DEPENDENCIES_2 =
dwggrep_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
dwggrep_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dwggrep_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dwglayers_OBJECTS = dwglayers.$(OBJEXT)
dwglayers_OBJECTS = $(am_dwglayers_OBJECTS)
dwglayers_LDADD = $(LDADD)
dwglayers_DEPENDENCIES = $(top_builddir)/src/libredwg.la
am_dwgread_OBJECTS = dwgread.$(OBJEXT)
dwgread_OBJECTS = $(am_dwgread_OBJECTS)
dwgread_LDADD = $(LDADD)
dwgread_DEPENDENCIES = $(top_builddir)/src/libredwg.la
am__dwgrewrite_SOURCES_DIST = dwgrewrite.c
am_dwgrewrite_OBJECTS =  \
	dwgrewrite.$(OBJEXT)
dwgrewrite_OBJECTS = $(am_dwgrewrite_OBJECTS)
dwgrewrite_LDADD = $(LDADD)
dwgrewrite_DEPENDENCIES = $(top_builddir)/src/libredwg.la
am__dwgwrite_SOURCES_DIST = dwgwrite.c
am_dwgwrite_OBJECTS =  \
	dwgwrite.$(OBJEXT)
dwgwrite_OBJECTS = $(am_dwgwrite_OBJECTS)
dwgwrite_LDADD = $(LDADD)
dwgwrite_DEPENDENCIES = $(top_builddir)/src/libredwg.la
am__dxf2dwg_SOURCES_DIST = dxf2dwg.c
am_dxf2dwg_OBJECTS =  \
	dxf2dwg.$(OBJEXT)
dxf2dwg_OBJECTS = $(am_dxf2dwg_OBJECTS)
dxf2dwg_LDADD = $(LDADD)
dxf2dwg_DEPENDENCIES = $(top_builddir)/src/libredwg.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/dwg2SVG.Po ./$(DEPDIR)/dwg2dxf.Po \
	./$(DEPDIR)/dwg2ps.Po ./$(DEPDIR)/dwgbmp.Po \
	./$(DEPDIR)/dwggrep-dwggrep.Po ./$(DEPDIR)/dwglayers.Po \
	./$(DEPDIR)/dwgread.Po ./$(DEPDIR)/dwgrewrite.Po \
	./$(DEPDIR)/dwgwrite.Po ./$(DEPDIR)/dxf2dwg.Po \
	./$(DEPDIR)/escape.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(dwg2SVG_SOURCES) $(dwg2dxf_SOURCES) $(dwg2ps_SOURCES) \
	$(dwgbmp_SOURCES) $(dwggrep_SOURCES) $(dwglayers_SOURCES) \
	$(dwgread_SOURCES) $(dwgrewrite_SOURCES) $(dwgwrite_SOURCES) \
	$(dxf2dwg_SOURCES)
DIST_SOURCES = $(dwg2SVG_SOURCES) $(dwg2dxf_SOURCES) \
	$(am__dwg2ps_SOURCES_DIST) $(dwgbmp_SOURCES) \
	$(dwggrep_SOURCES) $(dwglayers_SOURCES) $(dwgread_SOURCES) \
	$(am__dwgrewrite_SOURCES_DIST) $(am__dwgwrite_SOURCES_DIST) \
	$(am__dxf2dwg_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man1_MANS)
am__extra_recursive_targets = check-valgrind-recursive \
	check-valgrind-memcheck-recursive \
	check-valgrind-helgrind-recursive check-valgrind-drd-recursive \
	check-valgrind-sgcheck-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__DIST_COMMON = $(dist_man1_MANS) $(srcdir)/Makefile.in \
	$(srcdir)/alive.test.in $(srcdir)/json.test.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/build-aux/missing aclocal-1.16
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = -Wl,--no-as-needed
AR = ar
AUTOCONF = ${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/build-aux/missing automake-1.16
AWK = gawk
AX_SWIG_PYTHON_CPPFLAGS = 
AX_SWIG_PYTHON_OPT = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLANG_FORMAT = echo
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = echo
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_VALGRIND_drd = no
ENABLE_VALGRIND_helgrind = no
ENABLE_VALGRIND_memcheck = no
ENABLE_VALGRIND_sgcheck = no
EXEEXT = 
FGREP = /bin/grep -F
GCOV = 
GCOV_CFLAGS = 
GCOV_LIBS = 
GREP = /bin/grep
HAVE_C99 = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2020-08-30
JQ = 
JSON_SED_NAN = true
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBREDWG_SO_VERSION = 0:9:0
LIBS =  $(am__append_10)
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTEXEC = ${top_builddir}/libtool --mode=execute
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libredwg
PACKAGE_BUGREPORT = libredwg@gnu.org
PACKAGE_NAME = LibreDWG
PACKAGE_STRING = LibreDWG 0.9
PACKAGE_TARNAME = libredwg
PACKAGE_URL = https://savannah.gnu.org/projects/libredwg/
PACKAGE_VERSION = 0.9
PARALLEL = 
PATCH = 
PATH_SEPARATOR = :
PCRE2_CFLAGS = 
PCRE2_LIBS = 
PERL = /usr/bin/perl
PICAT = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LIBS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG = 
SWIG_LIB = 
TARBALL_VERSION_FILE = .tarball-version
TIMEOUT = timeout
TIMEOUT_10 = timeout 10
VALGRIND = 
VALGRIND_ENABLED = no
VALGRIND_SUPPRESSIONS = 
VALGRIND_SUPPRESSIONS_FILE = 
VERSION = 0.9
WARN_CFLAGS = -fno-strict-aliasing -fvisibility=hidden -Wall -Wextra -Wundef -Wwrite-strings -Wpointer-arith -Wmissing-declarations -Wredundant-decls -Wno-unused-variable -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-missing-field-initializers -Wno-cast-align -Wformat=2 -Wformat-nonliteral -Wformat-security -Wsign-compare -Wstrict-aliasing -Wshadow -Winline -Wpacked -Wmissing-format-attribute -Wmissing-noreturn -Winit-self -Wmissing-include-dirs -Warray-bounds -Wreturn-type -Wswitch-enum -Wswitch-default -Wduplicated-cond -Wduplicated-branches -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wchar-subscripts -Wnested-externs -Wmissing-prototypes -Wdeclaration-after-statement -Wimplicit-function-declaration -Wjump-misses-init -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=unused-but-set-variable -Wno-error=missing-field-initializers -Wno-error=cast-align
WARN_SCANNERFLAGS =               --warn-all                                                             
WINE = 
XML2_CFLAGS = 
XML2_LIBS = 
abs_builddir = /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/programs
abs_srcdir = /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/programs
abs_top_builddir = /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9
abs_top_srcdir = /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libredwg-0.9/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
makeinfo_version = 
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
valgrind_enabled_tools = 
valgrind_tools = memcheck helgrind drd sgcheck
AM_CFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src $(WARN_CFLAGS) \
	$(am__append_9)
LDADD = $(top_builddir)/src/libredwg.la -lm
dist_man1_MANS = $(srcdir)/dwgread.1 $(srcdir)/dwgbmp.1 \
	$(srcdir)/dwg2dxf.1 $(srcdir)/dwg2SVG.1 $(srcdir)/dwglayers.1 \
	$(srcdir)/dwg2ps.1 $(srcdir)/dwggrep.1 $(am__append_5)
DISTCLEANFILES = core
#dwg2ps_SOURCES = dwg2ps.c
#dwg2ps_LDADD = $(LDADD) -lps
dwgread_SOURCES = dwgread.c
dwgbmp_SOURCES = dwgbmp.c
dwg2dxf_SOURCES = dwg2dxf.c
dwglayers_SOURCES = dwglayers.c
dwg2SVG_SOURCES = dwg2SVG.c escape.c
dwggrep_SOURCES = dwggrep.c
dwggrep_CFLAGS = $(CFLAGS) $(AM_CFLAGS) $(PCRE2_CFLAGS)
dwggrep_LDADD = $(LDADD) $(PCRE2_LIBS)
dwgrewrite_SOURCES = dwgrewrite.c
dwgwrite_SOURCES = dwgwrite.c
dxf2dwg_SOURCES = dxf2dwg.c
TESTS_ENVIRONMENT = \
 PROGS='$(bin_PROGRAMS) dwg2dxf' \
 datadir='$(top_srcdir)/test/test-data' \
 TESTPROG=''

#TESTS_ENVIRONMENT = \
# PROGS='$(bin_PROGRAMS)' \
# datadir='$(top_srcdir)/test/test-data' \
# TESTPROG=''

#TESTS_ENVIRONMENT = \
# PROGS='$(bin_PROGRAMS)' \
# datadir='$(top_srcdir)/test/test-data' \
# TESTPROG='wine'

TESTS = alive.test $(am__append_6) $(am__append_7)
EXTRA_DIST = suffix.inc escape.h common.inc $(TESTS) cmp_dxf.pl
CLEANFILES = {example_,sample_}*.{bmp,ps,svg,dxf,log} $(am__append_8) \
	$(am__append_11)
MAINTAINERCLEANFILES = *_flymake.[ch] *~ *.i
all: all-am

.SUFFIXES:
.SUFFIXES: .c .i .ii .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu programs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu programs/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
alive.test: $(top_builddir)/config.status $(srcdir)/alive.test.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
json.test: $(top_builddir)/config.status $(srcdir)/json.test.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

dwg2SVG$(EXEEXT): $(dwg2SVG_OBJECTS) $(dwg2SVG_DEPENDENCIES) $(EXTRA_dwg2SVG_DEPENDENCIES) 
	@rm -f dwg2SVG$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwg2SVG_OBJECTS) $(dwg2SVG_LDADD) $(LIBS)

dwg2dxf$(EXEEXT): $(dwg2dxf_OBJECTS) $(dwg2dxf_DEPENDENCIES) $(EXTRA_dwg2dxf_DEPENDENCIES) 
	@rm -f dwg2dxf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwg2dxf_OBJECTS) $(dwg2dxf_LDADD) $(LIBS)

dwg2ps$(EXEEXT): $(dwg2ps_OBJECTS) $(dwg2ps_DEPENDENCIES) $(EXTRA_dwg2ps_DEPENDENCIES) 
	@rm -f dwg2ps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwg2ps_OBJECTS) $(dwg2ps_LDADD) $(LIBS)

dwgbmp$(EXEEXT): $(dwgbmp_OBJECTS) $(dwgbmp_DEPENDENCIES) $(EXTRA_dwgbmp_DEPENDENCIES) 
	@rm -f dwgbmp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwgbmp_OBJECTS) $(dwgbmp_LDADD) $(LIBS)

dwggrep$(EXEEXT): $(dwggrep_OBJECTS) $(dwggrep_DEPENDENCIES) $(EXTRA_dwggrep_DEPENDENCIES) 
	@rm -f dwggrep$(EXEEXT)
	$(AM_V_CCLD)$(dwggrep_LINK) $(dwggrep_OBJECTS) $(dwggrep_LDADD) $(LIBS)

dwglayers$(EXEEXT): $(dwglayers_OBJECTS) $(dwglayers_DEPENDENCIES) $(EXTRA_dwglayers_DEPENDENCIES) 
	@rm -f dwglayers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwglayers_OBJECTS) $(dwglayers_LDADD) $(LIBS)

dwgread$(EXEEXT): $(dwgread_OBJECTS) $(dwgread_DEPENDENCIES) $(EXTRA_dwgread_DEPENDENCIES) 
	@rm -f dwgread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwgread_OBJECTS) $(dwgread_LDADD) $(LIBS)

dwgrewrite$(EXEEXT): $(dwgrewrite_OBJECTS) $(dwgrewrite_DEPENDENCIES) $(EXTRA_dwgrewrite_DEPENDENCIES) 
	@rm -f dwgrewrite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwgrewrite_OBJECTS) $(dwgrewrite_LDADD) $(LIBS)

dwgwrite$(EXEEXT): $(dwgwrite_OBJECTS) $(dwgwrite_DEPENDENCIES) $(EXTRA_dwgwrite_DEPENDENCIES) 
	@rm -f dwgwrite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dwgwrite_OBJECTS) $(dwgwrite_LDADD) $(LIBS)

dxf2dwg$(EXEEXT): $(dxf2dwg_OBJECTS) $(dxf2dwg_DEPENDENCIES) $(EXTRA_dxf2dwg_DEPENDENCIES) 
	@rm -f dxf2dwg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dxf2dwg_OBJECTS) $(dxf2dwg_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dwg2SVG.Po # am--include-marker
include ./$(DEPDIR)/dwg2dxf.Po # am--include-marker
include ./$(DEPDIR)/dwg2ps.Po # am--include-marker
include ./$(DEPDIR)/dwgbmp.Po # am--include-marker
include ./$(DEPDIR)/dwggrep-dwggrep.Po # am--include-marker
include ./$(DEPDIR)/dwglayers.Po # am--include-marker
include ./$(DEPDIR)/dwgread.Po # am--include-marker
include ./$(DEPDIR)/dwgrewrite.Po # am--include-marker
include ./$(DEPDIR)/dwgwrite.Po # am--include-marker
include ./$(DEPDIR)/dxf2dwg.Po # am--include-marker
include ./$(DEPDIR)/escape.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

dwggrep-dwggrep.o: dwggrep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dwggrep_CFLAGS) $(CFLAGS) -MT dwggrep-dwggrep.o -MD -MP -MF $(DEPDIR)/dwggrep-dwggrep.Tpo -c -o dwggrep-dwggrep.o `test -f 'dwggrep.c' || echo '$(srcdir)/'`dwggrep.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dwggrep-dwggrep.Tpo $(DEPDIR)/dwggrep-dwggrep.Po
#	$(AM_V_CC)source='dwggrep.c' object='dwggrep-dwggrep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dwggrep_CFLAGS) $(CFLAGS) -c -o dwggrep-dwggrep.o `test -f 'dwggrep.c' || echo '$(srcdir)/'`dwggrep.c

dwggrep-dwggrep.obj: dwggrep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dwggrep_CFLAGS) $(CFLAGS) -MT dwggrep-dwggrep.obj -MD -MP -MF $(DEPDIR)/dwggrep-dwggrep.Tpo -c -o dwggrep-dwggrep.obj `if test -f 'dwggrep.c'; then $(CYGPATH_W) 'dwggrep.c'; else $(CYGPATH_W) '$(srcdir)/dwggrep.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dwggrep-dwggrep.Tpo $(DEPDIR)/dwggrep-dwggrep.Po
#	$(AM_V_CC)source='dwggrep.c' object='dwggrep-dwggrep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dwggrep_CFLAGS) $(CFLAGS) -c -o dwggrep-dwggrep.obj `if test -f 'dwggrep.c'; then $(CYGPATH_W) 'dwggrep.c'; else $(CYGPATH_W) '$(srcdir)/dwggrep.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(dist_man1_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(dist_man1_MANS)'; \
	list2=''; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
check-valgrind-local: 
check-valgrind-memcheck-local: 
check-valgrind-helgrind-local: 
check-valgrind-drd-local: 
check-valgrind-sgcheck-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
check-valgrind: check-valgrind-am

check-valgrind-am: check-valgrind-local

check-valgrind-drd: check-valgrind-drd-am

check-valgrind-drd-am: check-valgrind-drd-local

check-valgrind-helgrind: check-valgrind-helgrind-am

check-valgrind-helgrind-am: check-valgrind-helgrind-local

check-valgrind-memcheck: check-valgrind-memcheck-am

check-valgrind-memcheck-am: check-valgrind-memcheck-local

check-valgrind-sgcheck: check-valgrind-sgcheck-am

check-valgrind-sgcheck-am: check-valgrind-sgcheck-local

clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/dwg2SVG.Po
	-rm -f ./$(DEPDIR)/dwg2dxf.Po
	-rm -f ./$(DEPDIR)/dwg2ps.Po
	-rm -f ./$(DEPDIR)/dwgbmp.Po
	-rm -f ./$(DEPDIR)/dwggrep-dwggrep.Po
	-rm -f ./$(DEPDIR)/dwglayers.Po
	-rm -f ./$(DEPDIR)/dwgread.Po
	-rm -f ./$(DEPDIR)/dwgrewrite.Po
	-rm -f ./$(DEPDIR)/dwgwrite.Po
	-rm -f ./$(DEPDIR)/dxf2dwg.Po
	-rm -f ./$(DEPDIR)/escape.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/dwg2SVG.Po
	-rm -f ./$(DEPDIR)/dwg2dxf.Po
	-rm -f ./$(DEPDIR)/dwg2ps.Po
	-rm -f ./$(DEPDIR)/dwgbmp.Po
	-rm -f ./$(DEPDIR)/dwggrep-dwggrep.Po
	-rm -f ./$(DEPDIR)/dwglayers.Po
	-rm -f ./$(DEPDIR)/dwgread.Po
	-rm -f ./$(DEPDIR)/dwgrewrite.Po
	-rm -f ./$(DEPDIR)/dwgwrite.Po
	-rm -f ./$(DEPDIR)/dxf2dwg.Po
	-rm -f ./$(DEPDIR)/escape.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man

uninstall-man: uninstall-man1

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am check-valgrind-am check-valgrind-drd-am \
	check-valgrind-drd-local check-valgrind-helgrind-am \
	check-valgrind-helgrind-local check-valgrind-local \
	check-valgrind-memcheck-am check-valgrind-memcheck-local \
	check-valgrind-sgcheck-am check-valgrind-sgcheck-local clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-man1 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-man uninstall-man1

.PRECIOUS: Makefile


.PHONY: man dsymutil clean-dsymutil check-syntax

.c.i:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -E -o $@ $<

.c.ii: # no linemarkers
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -E -P -o $@ $<

man: $(dist_man1_MANS)

# Note: These rules do not work cross-compiled
regen-man: $(bin_PROGRAMS) $(noinst_PROGRAMS)
	-for p in $(dist_man1_MANS); do \
	  base=`basename $$p .1`; \
	  help2man -p $(PACKAGE_NAME) -o $$p ./$$base$(EXEEXT); done

#.c.1: $(bin_PROGRAMS) $(noinst_PROGRAMS)
#	help2man -p LibreDWG -o $@ $(*F) || true

dsymutil:
	for e in $(bin_PROGRAMS) $(noinst_PROGRAMS); do dsymutil $$e; done
clean-dsymutil:
	for e in $(bin_PROGRAMS) $(noinst_PROGRAMS); do rm -rf $$e.dSYM; done

# emacs flymake-mode
check-syntax:
	test -n "$(CHK_SOURCES)" && \
	  $(COMPILE) -o /dev/null -S $(CHK_SOURCES)
#gcov: $(CHECK)
#	-test -f gcov.log && rm gcov.log
#	$(GCOV) *.gcno | tee -a $(builddir)/gcov.log

#TODO: alive.test => runtests with VALGRIND support

# Valgrind check
#
# Optional:
#  - VALGRIND_SUPPRESSIONS_FILE: Valgrind suppressions file to load. (Default: empty)
#  - VALGRIND_FLAGS: General flags to pass to all Valgrind tools.
#    (Default: --num-callers=30)
#  - VALGRIND_$toolname_FLAGS: Flags to pass to Valgrind $toolname (one of:
#    memcheck, helgrind, drd, sgcheck). (Default: various)

# Optional variables
#VALGRIND_SUPPRESSIONS   ?= --suppressions=$(VALGRIND_SUPPRESSIONS_FILE)
VALGRIND_FLAGS          ?= --num-callers=30
VALGRIND_memcheck_FLAGS ?= --leak-check=full --show-reachable=no
VALGRIND_helgrind_FLAGS ?= --history-level=approx
VALGRIND_drd_FLAGS      ?=
VALGRIND_sgcheck_FLAGS  ?=

# Internal use
valgrind_log_files = test-suite-memcheck.log test-suite-helgrind.log test-suite-drd.log test-suite-sgcheck.log

valgrind_memcheck_flags = --tool=memcheck $(VALGRIND_memcheck_FLAGS)
valgrind_helgrind_flags = --tool=helgrind $(VALGRIND_helgrind_FLAGS)
valgrind_drd_flags      = --tool=drd $(VALGRIND_drd_FLAGS)
valgrind_sgcheck_flags  = --tool=exp-sgcheck $(VALGRIND_sgcheck_FLAGS)

valgrind_quiet   = $(valgrind_quiet_$(V))
valgrind_quiet_  = $(valgrind_quiet_$(AM_DEFAULT_VERBOSITY))
valgrind_quiet_0 = --quiet
valgrind_v_use   = $(valgrind_v_use_$(V))
valgrind_v_use_  = $(valgrind_v_use_$(AM_DEFAULT_VERBOSITY))
valgrind_v_use_0 = @echo "  USE   " $(patsubst check-valgrind-%-am,%,$@):;

valgrind_lt = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=execute

check-vg-am: check-valgrind-am

# Use recursive makes in order to ignore errors during check
check-valgrind-am:
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -k \
            

# Valgrind running
VALGRIND_TESTS_ENVIRONMENT = \
	$(TESTS_ENVIRONMENT) \
	env VALGRIND=$(VALGRIND) \
	G_SLICE=always-malloc,debug-blocks \
	G_DEBUG=fatal-warnings,fatal-criticals,gc-friendly

VALGRIND_LOG_COMPILER = \
	$(valgrind_lt) \
	$(VALGRIND) $(VALGRIND_SUPPRESSIONS) --error-exitcode=1 $(VALGRIND_FLAGS)

check-valgrind-memcheck-am:
	$(valgrind_v_use)$(MAKE) check-TESTS \
		TESTS_ENVIRONMENT="$(VALGRIND_TESTS_ENVIRONMENT)" \
		LOG_COMPILER="$(VALGRIND_LOG_COMPILER)" \
		LOG_FLAGS="$(valgrind_memcheck_flags)" \
		TEST_SUITE_LOG=test-suite-memcheck.log
check-valgrind-helgrind-am:
	$(valgrind_v_use)$(MAKE) check-TESTS \
		TESTS_ENVIRONMENT="$(VALGRIND_TESTS_ENVIRONMENT)" \
		LOG_COMPILER="$(VALGRIND_LOG_COMPILER)" \
		LOG_FLAGS="$(valgrind_helgrind_flags)" \
		TEST_SUITE_LOG=test-suite-helgrind.log
check-valgrind-drd-am:
	$(valgrind_v_use)$(MAKE) check-TESTS \
		TESTS_ENVIRONMENT="$(VALGRIND_TESTS_ENVIRONMENT)" \
		LOG_COMPILER="$(VALGRIND_LOG_COMPILER)" \
		LOG_FLAGS="$(valgrind_drd_flags)" \
		TEST_SUITE_LOG=test-suite-drd.log
check-valgrind-sgcheck-am:
	$(valgrind_v_use)$(MAKE) check-TESTS \
		TESTS_ENVIRONMENT="$(VALGRIND_TESTS_ENVIRONMENT)" \
		LOG_COMPILER="$(VALGRIND_LOG_COMPILER)" \
		LOG_FLAGS="$(valgrind_sgcheck_flags)" \
		TEST_SUITE_LOG=test-suite-sgcheck.log

AM_DISTCHECK_CONFIGURE_FLAGS ?=
AM_DISTCHECK_CONFIGURE_FLAGS += --disable-valgrind

MOSTLYCLEANFILES ?=
MOSTLYCLEANFILES += $(valgrind_log_files)

.PHONY: check-vg check-valgrind 


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
