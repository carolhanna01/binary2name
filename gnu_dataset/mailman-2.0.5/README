Mailman - The GNU Mailing List Management System
Copyright (C) 1998,1999,2000,2001 by the Free Software Foundation, Inc.
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA

INTRODUCTION

    This is GNU Mailman, a mailing list management system distributed
    under the GNU Public License (GPL).  The name of this project is
    spelled "Mailman" with a leading capital `M' but with a lower case
    second `m'.

    Mailman is written primarily in Python, a free object-oriented
    scripting language.  There is some ANSI C code for security
    purposes.

    Mailman was originally developed by John Viega.  Subsequent
    development (through version 1.0b3) was by Ken Manheimer.  Further
    work towards the 1.0 final release was a group effort, with the
    core contributors being: Barry Warsaw, Ken Manheimer, Scott
    Cotton, Harald Meland, and John Viega.  Version 1.0 and beyond
    have been primarily maintained by Barry Warsaw with contributions
    from many; see the ACKNOWLEDGMENTS file for details.  Jeremy
    Hylton has helped considerably with the Pipermail code in Mailman
    2.0.

    The Mailman home page is

        http://www.gnu.org/software/mailman/mailman.html

    which is mirrored at

        http://www.list.org

    Mailman requires Python 1.5.2 or greater, which can be downloaded
    from

        http://www.python.org

    It should work fine with Python 1.6 and 2.0.

    You will also need an ANSI C compiler; gcc (the GNU C compiler)
    works just fine.  Mailman currently works only on Unix-alike
    operating systems (e.g. Solaris, GNU/Linux, etc.).

    See the INSTALL file for installation instructions.  If you are
    upgrading from a previous version of Mailman, you need to read the
    UPGRADING file for important information.

FEATURES

    Read the NEWS file for a list of changes since version 0.9.  Read
    the TODO file for our (extensive) wish list.  You can see Mailman
    in action at

        http://www.python.org/mailman/listinfo

    Mailman has most of the standard features you'd expect in a
    mailing list manager, and more:

    - Web based list administration for nearly all tasks.  Web based
      subscriptions and user configuration management.  A customizable
      "home page" for each mailing list.

    - Privacy features such as moderation, open and closed list
      subscription policies, and private membership rosters.

    - Automatic web based archiving built-in with support for private
      and public archives, and hooks for external archivers.

    - Per-user configuration optional digest delivery for either
      MIME-compliant or RFC 934 style "plain text" digests.

    - Integrated mail/Usenet gateways.

    - Integrated auto-replies.

    - Majordomo-style email based commands.

    - Integrated bounce detection within an extensible framework.

    - Integrated spam detection.

    - An extensible mail delivery pipeline.

    - Support for virtual domains.

REQUIREMENTS

    The default mail delivery mechanism uses a direct SMTP connection
    to whatever mail transport agent you have running on port 25.  You
    can thus use Mailman with any such MTA, however the script
    bin/newlist still generates sendmail style aliases (this will be
    fixed eventually).  You can also configure Mailman to submit
    messages to your MTA via command line invocation, although there
    are security considerations in going that route.

    Mailman works with any web server that supports CGI.  The HTML it
    generates is pretty pedestrian and stingy on the graphics so it
    should be friendly to most web browsers.

    You will need root access on the machine hosting your Mailman
    installation in order to complete some of the configuration
    steps.  See the INSTALL file for details.

GETTING STARTED QUICKLY

    These instructions assume that you are sitting in a shell in the
    install directory (by default /home/mailman).

    Once you've installed Mailman according to the INSTALL file, you
    can create your first list by running the program bin/newlist.
    bin/newlist will print out some aliases that you should add to
    your /etc/aliases file (if you're running a sendmail compatible
    MTA; see the various README files for more specific information).

    Next you should visit the your new list's admin page and set the
    various configuration options that you want.

FOR MORE INFORMATION

    The online documentation can be found in

        file:admin/www/index.html

    in the directory in which you unpacked Mailman.

    Chris Kolar has made a list owner-oriented manual available from
    the following URL

        http://www.aurora.edu/~ckolar/mailman/

    There are also several mailing lists that can be used as resources
    to help you get going with Mailman.

    Mailman-Announce
        A read-only list for release announcements an other important
        news.

        http://www.python.org/mailman/listinfo/mailman-announce

    Mailman-Users
        An open list for users of Mailman, for posting questions or
        problems related to installation, use, etc.  We'll try to keep
        the deep technical discussions off this list.

        http://www.python.org/mailman/listinfo/mailman-users

    Mailman-Developers
        An open list for those of you interested in helping develop
        Mailman's future direction.  This list will contain in-depth
        technical discussions.

    Mailman-I18N
        An open list for the discussion of the Mailman
        internationalization effort.  Multi-lingual patches are
        available and will be integrated into the standard
        distribution after the 2.0 release.

    Mailman-Checkins
        A read-only list which is an adjunct to the public anonymous
        CVS repository.  You can stay on the bleeding edge of Mailman
        development by subscribing to this list.

    The Mailman project is coordinated on SourceForge at

        http://sourceforge.net/projects/mailman

    You should use SourceForge to report bugs and to upload patches.


Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:
