#! /usr/bin/env python
#
# Copyright (C) 1998,1999,2000 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

"""Dispatch digests for lists w/pending messages and digest_send_periodic set.

Typically it's invoked via cron.
"""

import sys
import os
from stat import ST_SIZE
from errno import ENOENT
import paths
from Mailman import MailList
from Mailman import Utils
from Mailman.Handlers import ToDigest

# Work around known problems with some RedHat cron daemons
import signal
signal.signal(signal.SIGCHLD, signal.SIG_DFL)


def main():
    for listname in Utils.list_names():
        mlist = MailList.MailList(listname, lock=0)
        if mlist.digest_send_periodic:
            send_list_digest(mlist)


def send_list_digest(mlist):
    mlist.Lock()
    try:
        # send the digest if there are any partially built
        digestfile = os.path.join(mlist.fullpath(), 'next-digest')
        topicsfile = os.path.join(mlist.fullpath(), 'next-digest-topics')
        try:
            if os.stat(digestfile)[ST_SIZE] > 0:
                ToDigest.inject_digest(mlist, digestfile, topicsfile)
        except os.error, (code, msg):
            if code <> ENOENT:
                raise
            # otherwise, this list doesn't have any outstanding digests
    finally:
        mlist.Save()
        mlist.Unlock()



if __name__ == "__main__":
    main()
