/*
 * File automatically generated by
 * gengen 0.4.2 by Lorenzo Bettini <bettini@gnu.org>
 * http://www.lorenzobettini.it/software/gengen
 */

#ifndef C_SOURCE_GEN_CLASS_H
#define C_SOURCE_GEN_CLASS_H

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif // HAVE_CONFIG_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class c_source_gen_class
{
 protected:
  string command_line;
  string gen_exit;
  string generator_version;
  string getopt_string;
  string parser_name;
  string source_name;
  string usage_string;

 public:
  c_source_gen_class()
  {
  }

  c_source_gen_class(const string &_command_line, const string &_gen_exit, const string &_generator_version, const string &_getopt_string, const string &_parser_name, const string &_source_name, const string &_usage_string) :
    command_line (_command_line), gen_exit (_gen_exit), generator_version (_generator_version), getopt_string (_getopt_string), parser_name (_parser_name), source_name (_source_name), usage_string (_usage_string)
  {
  }

  virtual ~c_source_gen_class()
  {
  }
  
  virtual void generate_clear_arg(ostream &stream, unsigned int indent) = 0;

  void set_command_line(const string &_command_line)
  {
    command_line = _command_line;
  }

  virtual void generate_conf_parser(ostream &stream, unsigned int indent) = 0;

  void set_gen_exit(const string &_gen_exit)
  {
    gen_exit = _gen_exit;
  }

  void set_generator_version(const string &_generator_version)
  {
    generator_version = _generator_version;
  }

  void set_getopt_string(const string &_getopt_string)
  {
    getopt_string = _getopt_string;
  }

  virtual void generate_given_init(ostream &stream, unsigned int indent) = 0;

  virtual void generate_group_counters(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_group(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_help(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_no_short_option(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_option(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_required(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_unamed(ostream &stream, unsigned int indent) = 0;

  virtual void generate_handle_version(ostream &stream, unsigned int indent) = 0;

  virtual void generate_help_option_print(ostream &stream, unsigned int indent) = 0;

  virtual void generate_init_unamed(ostream &stream, unsigned int indent) = 0;

  virtual void generate_long_option_struct(ostream &stream, unsigned int indent) = 0;

  virtual void generate_multiple_fill_array(ostream &stream, unsigned int indent) = 0;

  void set_parser_name(const string &_parser_name)
  {
    parser_name = _parser_name;
  }

  virtual void generate_print_purpose(ostream &stream, unsigned int indent) = 0;

  void set_source_name(const string &_source_name)
  {
    source_name = _source_name;
  }

  virtual void generate_strdup(ostream &stream, unsigned int indent) = 0;

  virtual void generate_struct_def(ostream &stream, unsigned int indent) = 0;

  void set_usage_string(const string &_usage_string)
  {
    usage_string = _usage_string;
  }

  void generate_c_source(ostream &stream, unsigned int indent = 0);
  
};

#endif // C_SOURCE_GEN_CLASS_H
