.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH SHMM "8" "June 2008" "shmm 1.0" "System Administration Utilities"
.SH NAME
shmm \- shared memory manager
.SH SYNOPSIS
.B shmm
[\fIOPTION\fR]...
.SH DESCRIPTION
Help you to manage easily all your shared memories.
.TP
\fB\-h\fR, \fB\-\-help\fR
display this help and exit
.TP
\fB\-v\fR, \fB\-\-version\fR
display version information and exit
.TP
\fB\-s\fR, \fB\-\-shm\-access\fR=\fITEXT\fR use to give access info as key:permission:size
(permission as 0xxx like 0666)
.TP
\fB\-r\fR, \fB\-\-read\fR
use to read shared memory
.TP
\fB\-w\fR, \fB\-\-write\fR=\fITEXT\fR
use TEXT to write data in shared memory until size\-1
except if \fB\-b\fR is set. TEXT is an optional argument
Create the shared memory if it not exists
.TP
\fB\-c\fR, \fB\-\-command\fR=\fICHAR\fR
use CHAR to 'l'ock or 'u'nlock your shared memory
.TP
\fB\-u\fR, \fB\-\-update\fR=\fITEXT\fR
use update to set new user id, group id, permission
with TEXT as : uid:gid:perm (perm as 0xxx like 0666)
.TP
\fB\-o\fR, \fB\-\-offset\fR=\fINUM\fR
use NUM to start after 0 with read or write options
.TP
\fB\-b\fR, \fB\-\-binary\fR
use to print hex and/or char (when printable) dump of
the memory
.TP
\fB\-i\fR, \fB\-\-id\fR
use to give existing id instead of key and size
.TP
\fB\-f\fR, \fB\-\-file\fR=\fITEXT\fR
use to read to or write raw memory from file depending
on \fB\-r\fR (data are appended to existing file) or \fB\-w\fR
.SH EXAMPLES
Here are some realistic examples of running GNU `shmm'.

This is the output of the command `shmm -s 0x00000001:0660:5 -w"test"':

(nothing if no error)

Be aware that if shared memory doesn't exit, it'll try to create it with only '\\0' inside before writing anything (not true in binary mode), take care also NOT to put a space between -w and the string you wan't to write.

Take care also to always keep at least the reading permission to a user you can use if you want to keep control on your shared memory. Using permission like 0200 is an error except if you are root. It's an error because with only writing perm you can't do anything. To write something you must have the right to attach a shared memory and that means having read permission.
Also, execution permission is not used with shared memory so it's useless to use 0777 for example.

When you just want to read like in examples below, you can eventually use permission 0000 without any bad effect. However for the size, if you read in binary mode with -s instead of -i you must not set size to 0 as shmm use this value to stop to read like an end offset. You'll get a warning though. If you use -f shmm will read in a file until size specified in -s is reached (if you use -i instead of -s all data in shared memory will be dump).

This is the output of the command `shmm -rs 0x00000001:0660:5':

test

This is the output of the command `shmm -brs 0x00000001:0660:5':

t e s t 0x00
.SH "REPORTING BUGS"
Report bugs to Jeannie BOFFEL <jboffel@gmail.com>.
.SH COPYRIGHT
Copyright \(co 2008 Jeannie BOFFEL.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
The full documentation for
.B shmm
is maintained as a Texinfo manual.  If the
.B info
and
.B shmm
programs are properly installed at your site, the command
.IP
.B info shmm
.PP
should give you access to the complete manual.
