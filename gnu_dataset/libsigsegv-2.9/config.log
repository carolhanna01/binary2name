This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by configure, which was
generated by GNU Autoconf 2.68.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = rishon
uname -m = x86_64
uname -r = 4.15.0-72-generic
uname -s = Linux
uname -v = #81-Ubuntu SMP Tue Nov 26 12:20:02 UTC 2019

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/carolhanna/miniconda3/bin
PATH: /home/carolhanna/miniconda3/condabin
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games
PATH: /snap/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2335: checking for a BSD-compatible install
configure:2403: result: /usr/bin/install -c
configure:2414: checking whether build environment is sane
configure:2464: result: yes
configure:2605: checking for a thread-safe mkdir -p
configure:2644: result: /bin/mkdir -p
configure:2657: checking for gawk
configure:2673: found /usr/bin/gawk
configure:2684: result: gawk
configure:2695: checking whether make sets $(MAKE)
configure:2717: result: yes
configure:2850: checking for gcc
configure:2866: found /usr/bin/gcc
configure:2877: result: gcc
configure:3106: checking for C compiler version
configure:3115: gcc --version >&5
gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:3126: $? = 0
configure:3115: gcc -v >&5
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) 
configure:3126: $? = 0
configure:3115: gcc -V >&5
gcc: error: unrecognized command line option '-V'
gcc: fatal error: no input files
compilation terminated.
configure:3126: $? = 1
configure:3115: gcc -qversion >&5
gcc: error: unrecognized command line option '-qversion'; did you mean '--version'?
gcc: fatal error: no input files
compilation terminated.
configure:3126: $? = 1
configure:3146: checking whether the C compiler works
configure:3168: gcc    conftest.c  >&5
configure:3172: $? = 0
configure:3220: result: yes
configure:3223: checking for C compiler default output file name
configure:3225: result: a.out
configure:3231: checking for suffix of executables
configure:3238: gcc -o conftest    conftest.c  >&5
configure:3242: $? = 0
configure:3264: result: 
configure:3286: checking whether we are cross compiling
configure:3294: gcc -o conftest    conftest.c  >&5
configure:3298: $? = 0
configure:3305: ./conftest
configure:3309: $? = 0
configure:3324: result: no
configure:3329: checking for suffix of object files
configure:3351: gcc -c   conftest.c >&5
configure:3355: $? = 0
configure:3376: result: o
configure:3380: checking whether we are using the GNU C compiler
configure:3399: gcc -c   conftest.c >&5
configure:3399: $? = 0
configure:3408: result: yes
configure:3417: checking whether gcc accepts -g
configure:3437: gcc -c -g  conftest.c >&5
configure:3437: $? = 0
configure:3478: result: yes
configure:3495: checking for gcc option to accept ISO C89
configure:3559: gcc  -c -g -O2  conftest.c >&5
configure:3559: $? = 0
configure:3572: result: none needed
configure:3603: checking for style of include used by make
configure:3631: result: GNU
configure:3656: checking dependency style of gcc
configure:3766: result: none
configure:3786: checking how to run the C preprocessor
configure:3817: gcc -E  conftest.c
configure:3817: $? = 0
configure:3831: gcc -E  conftest.c
conftest.c:11:10: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
          ^~~~~~~~~~~~~~~~~~
compilation terminated.
configure:3831: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3856: result: gcc -E
configure:3876: gcc -E  conftest.c
configure:3876: $? = 0
configure:3890: gcc -E  conftest.c
conftest.c:11:10: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
          ^~~~~~~~~~~~~~~~~~
compilation terminated.
configure:3890: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3923: checking build system type
configure:3937: result: x86_64-unknown-linux-gnu
configure:3957: checking host system type
configure:3970: result: x86_64-unknown-linux-gnu
configure:3993: checking host platform
configure:4012: result: x86_64-unknown-linux4.15.0-gnu
configure:4067: checking how to print strings
configure:4094: result: printf
configure:4115: checking for a sed that does not truncate output
configure:4179: result: /bin/sed
configure:4197: checking for grep that handles long lines and -e
configure:4255: result: /bin/grep
configure:4260: checking for egrep
configure:4322: result: /bin/grep -E
configure:4327: checking for fgrep
configure:4389: result: /bin/grep -F
configure:4424: checking for ld used by gcc
configure:4491: result: /usr/bin/ld
configure:4498: checking if the linker (/usr/bin/ld) is GNU ld
configure:4513: result: yes
configure:4525: checking for BSD- or MS-compatible name lister (nm)
configure:4574: result: /usr/bin/nm -B
configure:4704: checking the name lister (/usr/bin/nm -B) interface
configure:4711: gcc -c -g -O2  conftest.c >&5
configure:4714: /usr/bin/nm -B "conftest.o"
configure:4717: output
0000000000000000 B some_variable
configure:4724: result: BSD nm
configure:4727: checking whether ln -s works
configure:4731: result: yes
configure:4739: checking the maximum length of command line arguments
configure:4864: result: 1572864
configure:4881: checking whether the shell understands some XSI constructs
configure:4891: result: yes
configure:4895: checking whether the shell understands "+="
configure:4901: result: yes
configure:4936: checking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format
configure:4976: result: func_convert_file_noop
configure:4983: checking how to convert x86_64-unknown-linux-gnu file names to toolchain format
configure:5003: result: func_convert_file_noop
configure:5010: checking for /usr/bin/ld option to reload object files
configure:5017: result: -r
configure:5091: checking for objdump
configure:5107: found /usr/bin/objdump
configure:5118: result: objdump
configure:5150: checking how to recognize dependent libraries
configure:5352: result: pass_all
configure:5437: checking for dlltool
configure:5467: result: no
configure:5497: checking how to associate runtime and link libraries
configure:5524: result: printf %s\n
configure:5585: checking for ar
configure:5601: found /usr/bin/ar
configure:5612: result: ar
configure:5649: checking for archiver @FILE support
configure:5666: gcc -c -g -O2  conftest.c >&5
configure:5666: $? = 0
configure:5669: ar cru libconftest.a @conftest.lst >&5
ar: `u' modifier ignored since `D' is the default (see `U')
configure:5672: $? = 0
configure:5677: ar cru libconftest.a @conftest.lst >&5
ar: `u' modifier ignored since `D' is the default (see `U')
ar: conftest.o: No such file or directory
configure:5680: $? = 1
configure:5692: result: @
configure:5750: checking for strip
configure:5766: found /usr/bin/strip
configure:5777: result: strip
configure:5849: checking for ranlib
configure:5865: found /usr/bin/ranlib
configure:5876: result: ranlib
configure:5978: checking command to parse /usr/bin/nm -B output from gcc object
configure:6097: gcc -c -g -O2  conftest.c >&5
configure:6100: $? = 0
configure:6104: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:6107: $? = 0
configure:6173: gcc -o conftest -g -O2   conftest.c conftstm.o >&5
configure:6176: $? = 0
configure:6214: result: ok
configure:6251: checking for sysroot
configure:6281: result: no
configure:6358: gcc -c -g -O2  conftest.c >&5
configure:6361: $? = 0
configure:6524: checking for mt
configure:6540: found /bin/mt
configure:6551: result: mt
configure:6574: checking if mt is a manifest tool
configure:6580: mt '-?'
configure:6588: result: no
configure:7216: checking for ANSI C header files
configure:7236: gcc -c -g -O2  conftest.c >&5
configure:7236: $? = 0
configure:7309: gcc -o conftest -g -O2   conftest.c  >&5
configure:7309: $? = 0
configure:7309: ./conftest
configure:7309: $? = 0
configure:7320: result: yes
configure:7333: checking for sys/types.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for sys/stat.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for stdlib.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for string.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for memory.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for strings.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for inttypes.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for stdint.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7333: checking for unistd.h
configure:7333: gcc -c -g -O2  conftest.c >&5
configure:7333: $? = 0
configure:7333: result: yes
configure:7347: checking for dlfcn.h
configure:7347: gcc -c -g -O2  conftest.c >&5
configure:7347: $? = 0
configure:7347: result: yes
configure:7533: checking for objdir
configure:7548: result: .libs
configure:7819: checking if gcc supports -fno-rtti -fno-exceptions
configure:7837: gcc -c -g -O2  -fno-rtti -fno-exceptions conftest.c >&5
cc1: warning: command line option '-fno-rtti' is valid for C++/ObjC++ but not for C
configure:7841: $? = 0
configure:7854: result: no
configure:8164: checking for gcc option to produce PIC
configure:8171: result: -fPIC -DPIC
configure:8179: checking if gcc PIC flag -fPIC -DPIC works
configure:8197: gcc -c -g -O2  -fPIC -DPIC -DPIC conftest.c >&5
configure:8201: $? = 0
configure:8214: result: yes
configure:8243: checking if gcc static flag -static works
configure:8271: result: yes
configure:8286: checking if gcc supports -c -o file.o
configure:8307: gcc -c -g -O2  -o out/conftest2.o conftest.c >&5
configure:8311: $? = 0
configure:8333: result: yes
configure:8341: checking if gcc supports -c -o file.o
configure:8388: result: yes
configure:8421: checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries
configure:9579: result: yes
configure:9824: checking dynamic linker characteristics
configure:10338: gcc -o conftest -g -O2   -Wl,-rpath -Wl,/foo conftest.c  >&5
configure:10338: $? = 0
configure:10560: result: GNU/Linux ld.so
configure:10667: checking how to hardcode library paths into programs
configure:10692: result: immediate
configure:11232: checking whether stripping libraries is possible
configure:11237: result: yes
configure:11272: checking if libtool supports shared libraries
configure:11274: result: yes
configure:11277: checking whether to build shared libraries
configure:11298: result: no
configure:11301: checking whether to build static libraries
configure:11305: result: yes
configure:11348: checking sys/signal.h usability
configure:11348: gcc -c -g -O2  conftest.c >&5
configure:11348: $? = 0
configure:11348: result: yes
configure:11348: checking sys/signal.h presence
configure:11348: gcc -E  conftest.c
configure:11348: $? = 0
configure:11348: result: yes
configure:11348: checking for sys/signal.h
configure:11348: result: yes
configure:11387: checking for unistd.h
configure:11387: result: yes
configure:11399: checking for getpagesize
configure:11422: gcc -o conftest -g -O2   conftest.c  >&5
configure:11422: $? = 0
configure:11430: result: yes
configure:11439: checking for sysconf(_SC_PAGESIZE)
configure:11462: gcc -o conftest -g -O2   conftest.c  >&5
configure:11462: $? = 0
configure:11470: result: yes
configure:11479: checking for PAGESIZE in limits.h
configure:11497: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'main':
conftest.c:33:12: error: 'PAGESIZE' undeclared (first use in this function)
 int pgsz = PAGESIZE;
            ^~~~~~~~
conftest.c:33:12: note: each undeclared identifier is reported only once for each function it appears in
configure:11497: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
|       #include <limits.h>
| int
| main ()
| {
| int pgsz = PAGESIZE;
|   ;
|   return 0;
| }
configure:11505: result: no
configure:11523: checking for mmap with MAP_ANON
configure:11573: gcc -o conftest -g -O2   conftest.c  >&5
configure:11573: $? = 0
configure:11573: ./conftest
configure:11573: $? = 0
configure:11584: result: yes
configure:11593: checking for mmap with MAP_ANONYMOUS
configure:11645: gcc -o conftest -g -O2   conftest.c  >&5
configure:11645: $? = 0
configure:11645: ./conftest
configure:11645: $? = 0
configure:11656: result: yes
configure:11665: checking for mmap of /dev/zero
configure:11728: gcc -o conftest -g -O2   conftest.c  >&5
configure:11728: $? = 0
configure:11728: ./conftest
configure:11728: $? = 0
configure:11739: result: yes
configure:11763: checking whether a fault handler according to POSIX works
configure:11892: gcc -o conftest -g -O2   conftest.c  >&5
configure:11892: $? = 0
configure:11892: ./conftest
configure:11892: $? = 0
configure:11903: result: yes
configure:11911: checking whether a fault handler according to Linux/i386 works
configure:12041: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:40:8: error: redefinition of 'struct _fpx_sw_bytes'
 struct _fpx_sw_bytes {
        ^~~~~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:31:8: note: originally defined here
 struct _fpx_sw_bytes
        ^~~~~~~~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:85:8: error: redefinition of 'struct _fpreg'
 struct _fpreg {
        ^~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:40:8: note: originally defined here
 struct _fpreg
        ^~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:91:8: error: redefinition of 'struct _fpxreg'
 struct _fpxreg {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:46:8: note: originally defined here
 struct _fpxreg
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:98:8: error: redefinition of 'struct _xmmreg'
 struct _xmmreg {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:53:8: note: originally defined here
 struct _xmmreg
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:180:8: error: redefinition of 'struct _ymmh_state'
 struct _ymmh_state {
        ^~~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:184:8: note: originally defined here
 struct _ymmh_state
        ^~~~~~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:192:8: error: redefinition of 'struct _xstate'
 struct _xstate {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:189:8: note: originally defined here
 struct _xstate
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:317:8: error: redefinition of 'struct sigcontext'
 struct sigcontext {
        ^~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:139:8: note: originally defined here
 struct sigcontext
        ^~~~~~~~~~
configure:12041: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, struct sigcontext sc)
| {
|   void *fault_address = (void *) (sc.cr2);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12052: result: no
configure:12060: checking whether a fault handler according to old Linux/i386 works
configure:12190: gcc -o conftest -g -O2   conftest.c  >&5
configure:12190: $? = 0
configure:12190: ./conftest
configure:12190: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, unsigned int more)
| {
|   void *fault_address = (void *) (((unsigned long *) &more) [21]);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12201: result: no
configure:12209: checking whether a fault handler according to Linux/m68k works
configure:12341: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:40:8: error: redefinition of 'struct _fpx_sw_bytes'
 struct _fpx_sw_bytes {
        ^~~~~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:31:8: note: originally defined here
 struct _fpx_sw_bytes
        ^~~~~~~~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:85:8: error: redefinition of 'struct _fpreg'
 struct _fpreg {
        ^~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:40:8: note: originally defined here
 struct _fpreg
        ^~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:91:8: error: redefinition of 'struct _fpxreg'
 struct _fpxreg {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:46:8: note: originally defined here
 struct _fpxreg
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:98:8: error: redefinition of 'struct _xmmreg'
 struct _xmmreg {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:53:8: note: originally defined here
 struct _xmmreg
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:180:8: error: redefinition of 'struct _ymmh_state'
 struct _ymmh_state {
        ^~~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:184:8: note: originally defined here
 struct _ymmh_state
        ^~~~~~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:192:8: error: redefinition of 'struct _xstate'
 struct _xstate {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:189:8: note: originally defined here
 struct _xstate
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:317:8: error: redefinition of 'struct sigcontext'
 struct sigcontext {
        ^~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:139:8: note: originally defined here
 struct sigcontext
        ^~~~~~~~~~
In file included from conftest.c:39:0:
./src/fault-linux-m68k-old.c: In function 'get_fault_addr':
./src/fault-linux-m68k-old.c:22:20: error: 'struct sigcontext' has no member named 'sc_formatvec'
   int format = (scp->sc_formatvec >> 12) & 0xf;
                    ^~
configure:12341: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include "./src/fault-linux-m68k-old.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12352: result: no
configure:12360: checking whether a fault handler according to Linux/PowerPC works
configure:12490: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:40:8: error: redefinition of 'struct _fpx_sw_bytes'
 struct _fpx_sw_bytes {
        ^~~~~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:31:8: note: originally defined here
 struct _fpx_sw_bytes
        ^~~~~~~~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:85:8: error: redefinition of 'struct _fpreg'
 struct _fpreg {
        ^~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:40:8: note: originally defined here
 struct _fpreg
        ^~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:91:8: error: redefinition of 'struct _fpxreg'
 struct _fpxreg {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:46:8: note: originally defined here
 struct _fpxreg
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:98:8: error: redefinition of 'struct _xmmreg'
 struct _xmmreg {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:53:8: note: originally defined here
 struct _xmmreg
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:180:8: error: redefinition of 'struct _ymmh_state'
 struct _ymmh_state {
        ^~~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:184:8: note: originally defined here
 struct _ymmh_state
        ^~~~~~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:192:8: error: redefinition of 'struct _xstate'
 struct _xstate {
        ^~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:189:8: note: originally defined here
 struct _xstate
        ^~~~~~~
In file included from conftest.c:38:0:
/usr/include/x86_64-linux-gnu/asm/sigcontext.h:317:8: error: redefinition of 'struct sigcontext'
 struct sigcontext {
        ^~~~~~~~~~
In file included from /usr/include/signal.h:291:0,
                 from conftest.c:34:
/usr/include/x86_64-linux-gnu/bits/sigcontext.h:139:8: note: originally defined here
 struct sigcontext
        ^~~~~~~~~~
conftest.c: In function 'sigsegv_handler':
conftest.c:64:40: error: 'struct sigcontext' has no member named 'regs'; did you mean 'gs'?
   void *fault_address = (void *) (scp->regs->dar);
                                        ^~~~
                                        gs
configure:12490: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->regs->dar);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12501: result: no
configure:12509: checking whether a fault handler according to Linux/HPPA works
configure:12638: gcc -o conftest -g -O2   conftest.c  >&5
configure:12638: $? = 0
configure:12638: ./conftest
configure:12638: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, void *ucp)
| {
|   void *fault_address = (void *) (sip->si_ptr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12649: result: no
configure:12657: checking whether a fault handler according to BSD works
configure:12787: gcc -o conftest -g -O2   conftest.c  >&5
configure:12787: $? = 0
configure:12787: ./conftest
configure:12787: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp, void *addr)
| {
|   void *fault_address = (void *) (addr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12798: result: no
configure:12806: checking whether a fault handler according to IRIX works
configure:12936: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:54: error: 'struct sigcontext' has no member named 'sc_badvaddr'
   void *fault_address = (void *) ((unsigned long) scp->sc_badvaddr);
                                                      ^~
configure:12936: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) ((unsigned long) scp->sc_badvaddr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12947: result: no
configure:12955: checking whether a fault handler according to HP-UX HPPA works
configure:13095: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:39:33: note: in definition of macro 'USE_64BIT_REGS'
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                 ^~
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^~~~~~~~
conftest.c:39:48: error: 'SS_WIDEREGS' undeclared (first use in this function); did you mean 'S_IFREG'?
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                ^
conftest.c:40:25: note: in expansion of macro 'USE_64BIT_REGS'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                         ^~~~~~~~~~~~~~
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^~~~~~~~
conftest.c:39:48: note: each undeclared identifier is reported only once for each function it appears in
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                ^
conftest.c:40:25: note: in expansion of macro 'USE_64BIT_REGS'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                         ^~~~~~~~~~~~~~
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^~~~~~~~
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:39:66: note: in definition of macro 'USE_64BIT_REGS'
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                                  ^~
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^~~~~~~~
conftest.c:39:81: error: 'SS_NARROWISINVALID' undeclared (first use in this function)
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                                                 ^
conftest.c:40:25: note: in expansion of macro 'USE_64BIT_REGS'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                         ^~~~~~~~~~~~~~
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^~~~~~~~
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:40:47: note: in definition of macro 'GET_CR21'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                                               ^~
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:40:76: note: in definition of macro 'GET_CR21'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                                                                            ^~
configure:13095: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
| #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13106: result: no
configure:13114: checking whether a fault handler according to OSF/1 Alpha works
configure:13244: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:38: error: 'struct sigcontext' has no member named 'sc_traparg_a0'
   void *fault_address = (void *) (scp->sc_traparg_a0);
                                      ^~
configure:13244: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->sc_traparg_a0);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13255: result: no
configure:13263: checking whether a fault handler according to NetBSD Alpha works
configure:13393: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
./src/fault-netbsd-alpha.c: In function 'get_fault_addr':
./src/fault-netbsd-alpha.c:25:46: error: 'struct sigcontext' has no member named 'sc_pc'
   unsigned int instr = *((unsigned int *)(scp->sc_pc));
                                              ^~
./src/fault-netbsd-alpha.c:36:18: error: 'struct sigcontext' has no member named 'sc_regs'
   faultaddr = scp->sc_regs[(instr >> 16) & 0x1f];
                  ^~
configure:13393: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-netbsd-alpha.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13404: result: no
configure:13412: checking whether a fault handler according to AIX works
configure:13542: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:38: error: 'struct sigcontext' has no member named 'sc_jmpbuf'
   void *fault_address = (void *) (scp->sc_jmpbuf.jmp_context.o_vaddr);
                                      ^~
configure:13542: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->sc_jmpbuf.jmp_context.o_vaddr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13553: result: no
configure:13561: checking whether a fault handler according to MacOSX/Darwin7 PowerPC works
configure:13690: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
./src/fault-macosdarwin7-powerpc.c: In function 'get_fault_addr':
./src/fault-macosdarwin7-powerpc.c:43:22: error: invalid type argument of '->' (have 'mcontext_t {aka struct <anonymous>}')
     &ucp->uc_mcontext->ss.r0; /* r0..r31 */
                      ^~
./src/fault-macosdarwin7-powerpc.c:130:10: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   return (void *) addr;
          ^
conftest.c: In function 'main':
conftest.c:101:21: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
 action.sa_sigaction = &sigsegv_handler;
                     ^
configure:13690: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-macosdarwin7-powerpc.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, ucontext_t *ucp)
| {
|   void *fault_address = (void *) (get_fault_addr (sip, ucp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13701: result: no
configure:13710: checking whether a fault handler according to MacOSX/Darwin5 PowerPC works
configure:13840: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
./src/fault-macosdarwin5-powerpc.c: In function 'get_fault_addr':
./src/fault-macosdarwin5-powerpc.c:36:46: error: 'struct sigcontext' has no member named 'sc_ir'
   unsigned int instr = *((unsigned int *) scp->sc_ir);
                                              ^~
./src/fault-macosdarwin5-powerpc.c:37:46: error: 'struct sigcontext' has no member named 'sc_regs'
   unsigned int *regs = &((unsigned int *) scp->sc_regs)[2];
                                              ^~
./src/fault-macosdarwin5-powerpc.c:123:10: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   return (void *) addr;
          ^
configure:13840: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-macosdarwin5-powerpc.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13851: result: no
configure:13860: checking whether a fault handler according to Hurd works
configure:13990: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:25: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   void *fault_address = (void *) (code);
                         ^
configure:13990: $? = 0
configure:13990: ./conftest
configure:13990: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (code);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14001: result: no
configure:14117: checking ucontext.h usability
configure:14117: gcc -c -g -O2  conftest.c >&5
configure:14117: $? = 0
configure:14117: result: yes
configure:14117: checking ucontext.h presence
configure:14117: gcc -E  conftest.c
configure:14117: $? = 0
configure:14117: result: yes
configure:14117: checking for ucontext.h
configure:14117: result: yes
configure:14355: checking for the fault handler specifics
configure:14366: result: fault-linux-i386.h
configure:14391: checking if the system supports catching SIGSEGV
configure:14393: result: yes
configure:14406: checking for stack direction
configure:14503: result: grows down
configure:14514: checking for PIOCMAP in sys/procfs.h
configure:14531: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'main':
conftest.c:39:9: error: 'PIOCNMAP' undeclared (first use in this function)
 int x = PIOCNMAP + PIOCMAP; prmap_t y;
         ^~~~~~~~
conftest.c:39:9: note: each undeclared identifier is reported only once for each function it appears in
conftest.c:39:20: error: 'PIOCMAP' undeclared (first use in this function); did you mean 'PIOCNMAP'?
 int x = PIOCNMAP + PIOCMAP; prmap_t y;
                    ^~~~~~~
                    PIOCNMAP
conftest.c:39:29: error: unknown type name 'prmap_t'; did you mean 'pthread_t'?
 int x = PIOCNMAP + PIOCMAP; prmap_t y;
                             ^~~~~~~
                             pthread_t
configure:14531: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| #define HAVE_UCONTEXT_H 1
| #define CFG_FAULT "fault-linux-i386.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| /* end confdefs.h.  */
| #include <sys/procfs.h>
| int
| main ()
| {
| int x = PIOCNMAP + PIOCMAP; prmap_t y;
|   ;
|   return 0;
| }
configure:14540: result: no
configure:14544: checking for mincore
configure:14544: gcc -o conftest -g -O2   conftest.c  >&5
configure:14544: $? = 0
configure:14544: result: yes
configure:14586: checking for getrlimit
configure:14586: gcc -o conftest -g -O2   conftest.c  >&5
configure:14586: $? = 0
configure:14586: result: yes
configure:14586: checking for setrlimit
configure:14586: gcc -o conftest -g -O2   conftest.c  >&5
configure:14586: $? = 0
configure:14586: result: yes
configure:14602: checking for sigaltstack
configure:14602: gcc -o conftest -g -O2   conftest.c  >&5
configure:14602: $? = 0
configure:14602: result: yes
configure:14613: checking for stack_t
configure:14613: gcc -c -g -O2  conftest.c >&5
configure:14613: $? = 0
configure:14613: gcc -c -g -O2  conftest.c >&5
conftest.c: In function 'main':
conftest.c:51:22: error: expected expression before ')' token
 if (sizeof ((stack_t)))
                      ^
configure:14613: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| #define HAVE_UCONTEXT_H 1
| #define CFG_FAULT "fault-linux-i386.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define HAVE_MINCORE 1
| #define HAVE_STACKVMA 1
| #define CFG_STACKVMA "stackvma-linux.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| 
| int
| main ()
| {
| if (sizeof ((stack_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14613: result: yes
configure:14631: checking for working sigaltstack
configure:14755: gcc -o conftest -g -O2   conftest.c  >&5
configure:14755: $? = 0
configure:14755: ./conftest
configure:14755: $? = 0
configure:14771: result: yes
configure:14778: checking for correct stack_t interpretation
configure:14842: gcc -o conftest -g -O2   conftest.c  >&5
configure:14842: $? = 0
configure:14842: ./conftest
configure:14842: $? = 0
configure:14853: result: yes
configure:14879: checking whether a signal handler can be left through longjmp
configure:14968: gcc -o conftest -g -O2   conftest.c  >&5
configure:14968: $? = 0
configure:14968: ./conftest
configure:14968: $? = 0
configure:14979: result: yes
configure:14987: checking whether a signal handler can be left through longjmp and sigaltstack
configure:15086: gcc -o conftest -g -O2   conftest.c  >&5
configure:15086: $? = 0
configure:15086: ./conftest
configure:15086: $? = 0
configure:15097: result: yes
configure:15105: checking whether a signal handler can be left through longjmp and setcontext
configure:15209: gcc -o conftest -g -O2   conftest.c  >&5
configure:15209: $? = 0
configure:15209: ./conftest
configure:15209: $? = 0
configure:15220: result: yes
configure:15242: checking whether a signal handler can be left through siglongjmp
configure:15329: gcc -o conftest -g -O2   conftest.c  >&5
configure:15329: $? = 0
configure:15329: ./conftest
configure:15329: $? = 0
configure:15340: result: yes
configure:15348: checking whether a signal handler can be left through siglongjmp and sigaltstack
configure:15445: gcc -o conftest -g -O2   conftest.c  >&5
configure:15445: $? = 0
configure:15445: ./conftest
configure:15445: $? = 0
configure:15456: result: yes
configure:15464: checking whether a signal handler can be left through siglongjmp and setcontext
configure:15566: gcc -o conftest -g -O2   conftest.c  >&5
configure:15566: $? = 0
configure:15566: ./conftest
configure:15566: $? = 0
configure:15577: result: yes
configure:15616: checking if the system supports catching stack overflow
configure:15703: result: yes
configure:15837: checking for uintptr_t
configure:15837: gcc -c -g -O2  conftest.c >&5
configure:15837: $? = 0
configure:15837: gcc -c -g -O2  conftest.c >&5
conftest.c: In function 'main':
conftest.c:80:24: error: expected expression before ')' token
 if (sizeof ((uintptr_t)))
                        ^
configure:15837: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.9"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| #define HAVE_UCONTEXT_H 1
| #define CFG_FAULT "fault-linux-i386.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define HAVE_MINCORE 1
| #define HAVE_STACKVMA 1
| #define CFG_STACKVMA "stackvma-linux.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_WORKING_SIGALTSTACK 1
| #define CFG_LEAVE "leave-nop.c"
| #define CFG_HANDLER "handler-unix.c"
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((uintptr_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:15837: result: yes
configure:15877: checking whether to activate relocatable installation
configure:15892: result: no
configure:16038: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by config.status, which was
generated by GNU Autoconf 2.68.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on rishon

config.status:1125: creating Makefile
config.status:1125: creating src/Makefile
config.status:1125: creating src/sigsegv.h
config.status:1125: creating tests/Makefile
config.status:1125: creating config.h
config.status:1354: executing depfiles commands
config.status:1354: executing libtool commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-unknown-linux-gnu
ac_cv_c_compiler_gnu=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_getrlimit=yes
ac_cv_func_mincore=yes
ac_cv_func_setrlimit=yes
ac_cv_func_sigaltstack=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_signal_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_ucontext_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-unknown-linux-gnu
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_FGREP='/bin/grep -F'
ac_cv_path_GREP=/bin/grep
ac_cv_path_SED=/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_mkdir=/bin/mkdir
ac_cv_prog_AWK=gawk
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_ac_ct_AR=ar
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_MANIFEST_TOOL=mt
ac_cv_prog_ac_ct_OBJDUMP=objdump
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_type_stack_t=yes
ac_cv_type_uintptr_t=yes
am_cv_CC_dependencies_compiler_type=none
lt_cv_ar_at_file=@
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/usr/bin/ld
lt_cv_path_NM='/usr/bin/nm -B'
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_compiler_static_works=yes
lt_cv_prog_gnu_ld=yes
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_shlibpath_overrides_runpath=yes
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_max_cmd_len=1572864
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
sv_cv_fault_aix=no
sv_cv_fault_bsd=no
sv_cv_fault_hpux_hppa=no
sv_cv_fault_hurd=no
sv_cv_fault_include=fault-linux-i386.h
sv_cv_fault_irix=no
sv_cv_fault_linux_hppa=no
sv_cv_fault_linux_i386=no
sv_cv_fault_linux_i386_old=no
sv_cv_fault_linux_m68k=no
sv_cv_fault_linux_powerpc=no
sv_cv_fault_macosdarwin5_ppc=no
sv_cv_fault_macosdarwin7_ppc=no
sv_cv_fault_netbsd_alpha=no
sv_cv_fault_osf_alpha=no
sv_cv_fault_posix=yes
sv_cv_func_getpagesize=yes
sv_cv_func_mmap_anon=yes
sv_cv_func_mmap_anonymous=yes
sv_cv_func_mmap_devzero=yes
sv_cv_func_sysconf_pagesize=yes
sv_cv_have_sigsegv_recovery=yes
sv_cv_have_stack_overflow_recovery=yes
sv_cv_host=x86_64-unknown-linux4.15.0-gnu
sv_cv_leave_handler_longjmp=yes
sv_cv_leave_handler_longjmp_setcontext=yes
sv_cv_leave_handler_longjmp_sigaltstack=yes
sv_cv_leave_handler_siglongjmp=yes
sv_cv_leave_handler_siglongjmp_setcontext=yes
sv_cv_leave_handler_siglongjmp_sigaltstack=yes
sv_cv_macro_pagesize=no
sv_cv_procfsvma=no
sv_cv_sigaltstack=yes
sv_cv_sigaltstack_low_base=yes
sv_cv_stack_direction=-1
sv_cv_stack_direction_msg='grows down'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/missing --run aclocal-1.11'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/missing --run tar'
AR='ar'
AUTOCONF='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/missing --run autoconf'
AUTOHEADER='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/missing --run autoheader'
AUTOMAKE='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/missing --run automake-1.11'
AWK='gawk'
CC='gcc'
CCDEPMODE='depmode=none'
CFG_HANDLER='handler-unix.c'
CFG_LEAVE='leave-nop.c'
CFG_STACKVMA='stackvma-linux.c'
CFLAGS='-g -O2'
CPP='gcc -E'
CPPFLAGS=''
CYGPATH_W='echo'
CYGWIN_FALSE=''
CYGWIN_TRUE='#'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DLLTOOL='false'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
ENABLE_EFAULT_FALSE=''
ENABLE_EFAULT_TRUE='#'
EXEEXT=''
FAULT_CONTEXT='ucontext_t'
FAULT_CONTEXT_INCLUDE='#include <ucontext.h>'
FGREP='/bin/grep -F'
GREP='/bin/grep'
HAVE_SIGSEGV_RECOVERY='1'
HAVE_STACK_OVERFLOW_RECOVERY='1'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='/usr/bin/ld -m elf_x86_64'
LDFLAGS=''
LIBOBJS=''
LIBS=''
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
MAKEINFO='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/missing --run makeinfo'
MANIFEST_TOOL=':'
MKDIR_P='/bin/mkdir -p'
NM='/usr/bin/nm -B'
NMEDIT=''
OBJDUMP='objdump'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='libsigsegv'
PACKAGE_BUGREPORT=''
PACKAGE_NAME=''
PACKAGE_STRING=''
PACKAGE_TARNAME=''
PACKAGE_URL=''
PACKAGE_VERSION=''
PATH_SEPARATOR=':'
PLATFORM='x86_64-unknown-linux4.15.0-gnu'
RANLIB='ranlib'
RELOCATABLE='no'
SED='/bin/sed'
SET_MAKE=''
SHELL='/bin/bash'
STRIP='strip'
VERSION='2.9'
ac_ct_AR='ar'
ac_ct_CC='gcc'
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE=''
am__fastdepCC_TRUE='#'
am__include='include'
am__isrc=''
am__leading_dot='.'
am__quote=''
am__tar='${AMTAR} chf - --owner=root --group=root "$$tardir"'
am__untar='${AMTAR} xf -'
bindir='${exec_prefix}/bin'
build='x86_64-unknown-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-unknown-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/carolhanna/Security_Project/gnu_dataset/libsigsegv-2.9/build-aux/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='/bin/mkdir -p'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME ""
#define PACKAGE_TARNAME ""
#define PACKAGE_VERSION ""
#define PACKAGE_STRING ""
#define PACKAGE_BUGREPORT ""
#define PACKAGE_URL ""
#define PACKAGE "libsigsegv"
#define VERSION "2.9"
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE_SYS_SIGNAL_H 1
#define CFG_SIGNALS "signals.h"
#define HAVE_UNISTD_H 1
#define HAVE_GETPAGESIZE 1
#define HAVE_SYSCONF_PAGESIZE 1
#define HAVE_MMAP_ANON 1
#define HAVE_MMAP_ANONYMOUS 1
#define HAVE_MMAP_DEVZERO 1
#define HAVE_UCONTEXT_H 1
#define CFG_FAULT "fault-linux-i386.h"
#define CFG_MACHFAULT "fault-none.h"
#define STACK_DIRECTION -1
#define HAVE_MINCORE 1
#define HAVE_STACKVMA 1
#define CFG_STACKVMA "stackvma-linux.c"
#define HAVE_GETRLIMIT 1
#define HAVE_SETRLIMIT 1
#define HAVE_SIGALTSTACK 1
#define HAVE_WORKING_SIGALTSTACK 1
#define CFG_LEAVE "leave-nop.c"
#define CFG_HANDLER "handler-unix.c"
#define HAVE_UINTPTR_T 1

configure: exit 0
