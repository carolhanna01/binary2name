2007-12-31  Kevin Ryde  <user42@zip.com.au>

	* Version 2.1 released.

2007-12-13  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-2.0: Revert "conditionalize" option, because it
	didn't work properly and would be better as conditionalizing chunks of
	defs instead of per-object/per-function.
	* gtk-2.0.defs (GtkLinkButton): Comment out, for now.
	* gtk-support.c: Comment out gtk_link_button_set_uri_hook_interp.
	* configure.ac (AC_CHECK_FUNCS): Remove gtk_link_button_new.
	
2007-12-11  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (AC_INIT): Bump to version 2.1.

	* guile-gtk-compat.h (scm_from_uint32): New, supporting uint32 type in
	build-guile-gtk-2.0.

2007-11-10  Kevin Ryde  <user42@zip.com.au>

	* gtk-2.0/gtk.scm (gtk-show-error): Add a comment on some g_log
	warnings from gtk (which seem to have got better by themselves).

2007-09-17  Kevin Ryde  <user42@zip.com.au>

	* Makefile.am, gdk-pixbuf/Makefile.am, glade/Makefile.am,
	gtk-gl/Makefile.am: Bump library -version-info.

	* guile-gtk.texi (Gdk Module): In gdk-window-set-user-data, no need
	for a caution about recreation of the Scheme object, being a sub-class
	of GObject means it exists for as long as the window does.
	(Internals): New chapter.
	And various further @cindex entries.

2007-09-14  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk-compat.h: Renamed from compat.h.
	* Makefile.am, gdk-support.c, gtk-support.c, guile-compat.c,
	guile-gtk.c, gdk-pixbuf/gdk-pixbuf-support.c, build-guile-gtk-2.0,
	tests/tests.c: Update accordingly.
	* Makefile.am (include_HEADERS): Add guile-gtk-compat.h, to get it
	installed ready for use if applications generate wrappers with
	build-guile-gtk-2.0, as per "examples/foo".
	
2007-09-10  Kevin Ryde  <user42@zip.com.au>

	* COPYING, all files: GPL version 3.
	* README: For Gnome support see guile-gnome, rather than guile-gobject.

	* guile-gtk.texi (Introduction): URL of guile-gnome.
	(Installing): Notes on guile threads setting used at compile time.
	(Gdk Module): GdkWindow ok for equality, use GdkFont as the example.
	Separate the gdk-event accessor func descriptions for clarity.  In
	gdk-window-set-user-data, GdkWindow objects are unique as of gtk 2, so
	guile properties work.
	And some misc tweaks elsewhere.

	* guile-gtk.c (sgtk_to_strv): Stray ";"s made c99 variable defns.
	(BOXED_SEQNO, BOXED_PTR): Use SCM_CELL_WORD_0 and SCM_CELL_WORD_1
	instead of SCM_CAR and SCM_CDR, since the latter are supposed to be
	for pairs only, and in particular they check that under the
	SCM_DEBUG_CELL_ACCESSES option.

	* gtk-threads.c: Detect pthreads vs no threads in guile 1.8 at
	runtime, so you don't have to rebuild guile-gtk for that difference.
	Unfortunately however guile 1.8.2 inlines threads-dependent code for
	scm_cell(), so this doesn't yet actually work.

2007-08-16  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-2.0: Recognise a "conditionalize" option in
	define-object and define-func, to emit "#if FOO" tests around relevant
	code.

	* guile-gtk.texi (Installing): Put --prefix under a table item.
	(Gtk Extras): Remove gtk-radio-menu-item-new-from-widget and
	gtk-radio-menu-item-new-with-label-from-widget, these are in Gtk
	itself (as per 2007-02-22 change to gtk-compat.c).

	* guile-gtk.c (sgtk_valid_strv, sgtk_to_strv, sgtk_from_strv): New.
	(sgtk_arg2scm, sgtk_gvalue2scm, sgtk_valid_for_type, sgtk_scm2ret,
	sgtk_scm2gvalue): Recognise G_TYPE_STRV under G_TYPE_BOXED and treat
	it as a list of strings, or #f for NULL.  This lets
	gtk-object-get/gtk-object-set handle "char**" properties like the
	"authors" in GtkAboutDialog.

	* guile-gtk.c (warn_return_unspecified): New function.
	(inner_callback_marshal, inner_closure_marshal): Use it to warn about
	returning #unspecified to a callback that expects a return value
	(usually a gdk event handler).

	* gtk-2.0.defs (GtkTextDirection, gtk_widget_get_direction)
	(gtk_widget_set_direction, gtk_widget_get_default_direction)
	(gtk_widget_set_default_direction): New.
	(gtk_dialog_get_response_for_widget): New.
	(gtk_dialog_add_button): Return the button widget.
	(gtk_accelerator_set_default_mod_mask,
	gtk_accelerator_get_default_mod_mask): New.

	* gtk-2.0.defs (GtkAboutDialog, gtk_about_dialog_new, GtkLinkButton,
	gtk_link_button_new, gtk_link_button_new_with_label): New.
	* configure.ac (AC_CHECK_FUNCS): Add gtk_link_button_new.
	* guile-gtk.c, guile-gtk.h (sgtk_about_dialog_activate_link_marshal):
	New.

	* gtk-2.0.defs, gtk-support.c, guile-gtk.h
	(gtk_about_dialog_set_email_hook_interp,
	gtk_about_dialog_set_url_hook_interp,
	gtk_link_button_set_uri_hook_interp): New.

2007-04-11  Kevin Ryde  <user42@zip.com.au>

	* gdk-2.0.defs (includes): Add fallback defines for PANGO_PIXELS_FLOOR
	and PANGO_PIXELS_CEIL which are not in gtk 2.6 / pango 1.8.1.
	Reported by Paul Emsley.

	* build-guile-gtk-2.0 (int, uint, uint32): Use own registrations of
	these types, with scm_from_int etc.  Previous register-integer-type
	meant they were treated as long and ulong and could be silently
	truncated on a 64-bit system (where int!=long).

	* Makefile.am (AM_ETAGSFLAGS): Add scm_c_define pattern, to pick up
	some defns in gtk-support.c and gdk-support.c.

2007-03-20  Kevin Ryde  <user42@zip.com.au>

	* examples/continuations.scm: Misc changes for gtk 2.
	(event-loop): gtk-main-iteration returns a boolean.
	(gtk-signal-connect-delayed): Pass args to the callback.
	(yes-or-no?): Use gtk-message-dialog-new 'yes-no for the dialog, to
	get nice icons.

	* examples/test-gdk.scm (div): Use truncate to avoid fractions in
	guile 1.8.  In guile 1.6 quotient rounds towards zero like truncate,
	so results the same.
	(round-exact): New function.
	(draw-arc, update): Use it, to avoid fractions in guile 1.8.
	(configure, expose, draw-poly, button1-motion, button-release,
	drag-poly): Return #f to propagate events to other handlers.  There
	might not be any others by default, but propagating is the right thing
	generally.
	
	* examples/test-gtk.scm: Misc updates for gtk 2.
	(hack-gtk-radio-menu-item-new-with-label-from-widget): New function,
	helping create initial entry in radio group.
	(create-clist, create-radio-buttons, make-menu): Use it.
	(create-list): Must put GtkList in a GtkViewport, it can't go directly
	into a GtkScrolledWindow.
	(make-counter): Change gtk-label-set to gtk-label-set-text, new name
	in gtk 2.
	(make-counter): Return #t explicitly from idle or timeout callback,
	instead of #unspecified, in the interests of clarity.

2007-02-27  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (g_object_ref_sink): Check if available, it's not in
	glib 2.6, or sometime thereabouts.
	* guile-gtk.c (g_object_ref_sink): Fallback definition, needed in
	particular for Gtk 2.4.  Reported by Dale Smith.

2007-02-22  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.texi (GdkPixbuf Module): Remove notes on equality of
	GdkPixbuf and GdkPixbufAnimation objects, they're GObjects now so
	follow the rules for those.

	* gdk-pixbuf/gdk-pixbuf.defs: GdkPixbufFrame gone in gtk 2, so
	comments about trouble handling it don't apply.

	* gtk-compat.c, guile-gtk.h (gtk_radio_menu_item_new_from_widget):
	Remove, now in Gtk itself.

	* gtk-2.0.defs (gtk_radio_menu_item_new_from_widget,
	gtk_radio_menu_item_new_with_label_from_widget): Remove "(null-ok)"
	from group args, since NULL is not ok.

2006-12-23  Kevin Ryde  <user42@zip.com.au>

	* Version 2.0 released.

	* gdk-pixbuf/Makefile.am (check_PROGRAMS), glade/Makefile.am
	(check_PROGRAMS), gtk-gl/Makefile.am (check_PROGRAMS): Restrict these
	to _GDK_PIXBUF, BUILD_GLADE and BUILD_GTK_GL conditions, so as not to
	attempt to make each linktest program when configured --without the
	respective component.

2006-12-21  Kevin Ryde  <user42@zip.com.au>

	* gdk-2.0.defs (PANGO_PIXELS, PANGO_PIXELS_FLOOR, PANGO_PIXELS_CEIL,
	pango_layout_get_size): New.

	* gtk-2.0.defs (gtk_widget_get_parent): Typo "define-fun".
	(gtk_label_new_with_mnemonic, GtkImage, GtkIconSize,
	gtk_image_new_from_stock, gtk_image_menu_item_set_image,
	gtk_text_view_get_buffer): New.

	* gtk-support.c: Define gtk-response-none etc from GTK_RESPONSE_NONE
	etc of the GtkResponseType enum.
	* guile-gtk.texi (Gtk Module): Describe this.

2006-12-14  Kevin Ryde  <user42@zip.com.au>

	* Makefile.am (libguilegtk_2_0_la_LDFLAGS): Add $(GUILE_LDFLAGS), to
	ensure particular targeted guile is in the library dependencies.

	* gdk-2.0.defs, gdk-support.c, guile-gtk.h
	(gdk_drawable_copy_to_image): No need for _interp on this, the copying
	is ok.

2006-12-13  Kevin Ryde  <user42@zip.com.au>

	* gtk-2.0.defs (gtk_widget_get_display, gtk_window_move, GtkWrapMode,
	gtk_text_view_scroll_to_iter, gtk_text_view_set_editable,
	gtk_text_view_set_wrap_mode): New.

	* gdk-2.0.defs (gdk_display_get_default, gdk_display_beep,
	gdk_display_sync, gdk_display_flush, gdk_colormap_query_color,
	gdk_draw_layout_with_colors): New.
	(gdk_color_white_interp, gdk_color_black_interp): Typo "define"
	instead of "define-func" meant these were omitted.
	(includes): Add <gdk/gdkx.h>.

	* tests/gdk.scm: Further tests.

	* build-guile-gtk.1: New man page.
	* Makefile.am (dist_man_MANS): Add it.
	
	* guile-gtk.texi: Drop @value{VERSION} from the @settitle.
	(Glade Module): Nothing special about glade-init now.  GladeXML now
	child of GObject.
	
	* gtk-gl/gdk-gl.defs (includes): Just <gdk/gdk.h> not
	<gtk-1.2/gdk/gdk.h>.

2006-12-09  Kevin Ryde  <user42@zip.com.au>

	* gtk-2.0.defs (gtk_button_set_label, gtk_button_get_label): New.
	* tests/gtk.scm: Exercise them.  And lose
	gtk-container-query-child-args and gtk-object-query-args that snuck in
	somehow.

	* guile-gtk.texi (General Conventions): GType and GObject moved from
	GtkType and GtkObject in Gtk Module chapter.
	(Gdk Module): Remove gdk-rgb-init, nothing special to say about it now.
	(GdkPixbuf Module): Correction, has to be `(gtk-2.0 gdk-pixbuf)'
	there's no `(gtk gdk-pixbuf)' alias.
	(Glade Module): glade-xml-txtdomain is gone, and glade-init does exist.

	* guile-gtk.h (sgtk_type_info): Move init_func into this common
	sgtk_type_info part rather than sgtk_object_info.  In Gtk 2 all types
	have init funcs.
	* build-guile-gtk-2.0 (emit-object-info): Move initializer
	accordingly.
	(emit-boxed-info): Add gettypefuncname output.
	(emit-enum/flags-map): Ditto, looking for list of options as first
	form, to allow "gettypefuncname" override.

	* gdk-2.0.defs (sgtk_timestamp, GdkSelection, GdkSelectionType,
	GdkTarget, GdkWMDecoration, GdkWMFunction, GdkRgbCmap, GdkRegion):
	NULL gettypefuncname's, Gdk doesn't provide types as such for these.
	* gtk-2.0.defs ((GtkFundamentalType, GtkNotebookPage): Ditto.
	* gtk-gl/gdk-gl.defs (GdkGLConfig): Ditto.

	* guile-gtk.c (sgtk_try_missing_type): Remove types known to Gtk 2 --
	GdkGC, GtkToolbarStyle, GtkToolbarChildType, GtkTreeViewMode,
	GtkSpinButtonUpdatePolicy, GtkCellType, GdkOverlapType,
	GdkWMDecoration, GdkWMFunction, GdkVisibilityState, GdkInputSource,
	GdkImage.  This makes the "missing" empty, long may it remain so.
	(sgtk_fillin_type_info): Use sgtk_type_from_name for the type lookup,
	so as to get initializers per below.
	(boxed_free): Uncomment scm_gc_unregister_collectable_memory, wasn't
	meant to be disabled.
	(all_type_infos_find): New.
	(sgtk_type_from_name): Search all_type_infos for a type
	initializer if name not already known to g_type_from_name.
	(sgtk_find_object_info): init_func moves into header part of struct.

	* gdk-2.0.defs (gdk_colormap_sync): Gone private in Gtk 2.

	* examples/continuations.scm, examples/run-glade.scm,
	examples/test-dnd.scm, examples/test-glade.scm: Use "2.0" throughout.

	* guile-gtk.h (sgtk_type_from_name, sgtk_closure_marshal,
	sgtk_closure_destroy): Add prototypes.

	* glade/glade-support.c (scm_glade_connect_dispatch): Use
	g_signal_connect_closure, since in Gtk 2 gtk_signal_connect_full
	doesn't support a marshaller.  Arg types are GObject now GtkObject
	now too.

	* examples/simple.glade: Redo with glade-2.

	* examples/foo/configure.in, examples/foo/foo.defs,
	examples/foo/foo.scm, examples/foo/Makefile.am,
	examples/foo/test-foo.scm: Update to "2.0" throughout.
	* examples/foo/configure.in: Bump to version 0.2.

	* tests/glade.scm: Enable malloced-steady on glade-xml-new, hopefully
	ok in Gtk 2.

2006-12-08  Kevin Ryde  <user42@zip.com.au>

	Gtk bits:

	* gtk-2.0.defs, gtk-support.c, guile-gtk.h, guile-gtk.texi
	(gtk_object_query_args_interp, gtk_container_query_child_args_interp):
	Gone.  Could be implemented with g_object_class_list_properties and
	gtk_container_class_list_child_properties, but for now plan to wrap
	those instead of trying to keep the past way.

	Build bits:

	* Makefile.am: Update to "2.0" throughout.

	* guile-gtk-aclocal.sh (gtk-config): Don't use this, it's the Gtk 1.2
	program.  (The new pkg-config seems to have no way to ask about macros
	directories, or a general --prefix.)
	(-I macros): Remove, we no longer keep private copies.

	* gdk-pixbuf/linktest.c, glade/linktest.c, gtk-gl/linktest.c: New
	files, copies of top-level linktest.c.
	* gdk-pixbuf/Makefile.am, glade/Makefile.am, gtk-gl/Makefile.am: Use
	them in "make check" for unresolved symbols, as at top-level.

	* guile-gtk.texi: Update to "2.0" throughout.
	(Gdk Module): gdk-major-version and gdk-minor-version come from
	library vars not compile-time constants.
	(Known Bugs): gdk-colormap-alloc-color seems fixed in Gtk 2.

	* README: Update to "2.0" throughout.
	* NEWS: Start entry for 2.0.

	* gtk-2.0/Makefile.am, gtk-1.2/config.scm.in, gtk-2.0/dynlink.scm,
	gtk-2.0/gdk.scm, gtk-2.0/gtk.scm, gtk-2.0/repl.scm,
	gtk-2.0/threads.scm: Moved from gtk-1.2 directory, provide gtk-2.0
	modules, load the 2.0 support libraries.

	* gtk/config.scm, gtk/dynlink.scm, gtk/gdk.scm, gtk/gtk.scm,
	gtk/repl.scm, gtk/threads.scm: Load the gtk-2.0 modules.

	* gtk-2.0/gtk.scm (gtk-dialog-new-with-buttons,
	gtk-dialog-add-buttons): New, providing what are varargs functions at
	the C level.

	* tests/tests.scm, tests/gdk.scm, tests/gtk.scm, tests/gdk-pixbuf.scm,
	tests/glade.scm, tests/gdk-gl.scm, tests/gtk-gl-area.scm: Use "2.0"
	throughout.
	* tests/gdk.scm, tests/gtk.scm: Various further tests and adaptions to
	Gtk 2.

	* gtk-threads.c: In the Guile 1.6 support code:
	(g_mutex_lock_guile_impl, g_mutex_unlock_guile_impl): New helper
	functions, wrapping scm_mutex_lock and scm_mutex_unlock.
	(HAVE_THREAD_CREATE): Drop this conditional, glib 2 certainly has the
	thread_create field.
	(g_thread_create_guile_impl): Add GError parameter.  Remove bogus
	data.thread use (no such field).
	(g_thread_exit_guile_impl): New.
	(g_thread_functions, sgtk_init_threads): Use initializer for
	g_mutex_lock_guile_impl, g_mutex_unlock_guile_impl, scm_cond_signal,
	scm_cond_broadcast, scm_cond_wait, rather than explicit assignments in
	sgtk_init_threads.
	(sgtk_init_threads): Use g_main_context_add_poll, since
	g_main_add_poll is gone in Glib 2.

	C code bits:

	* compat.h (scm_to_uint, scm_keyword_to_symbol): New 1.6 compatibility.

	* guile-gtk.h: #include <gtk/gtk.h>, pkg-config flags gets gtk 2.
	Drop GTK_2_0 conditional.

	* guile-gtk.c: Use just #include <gtk/gtk.h>, pkg-config flags gets
	gtk 2.  Drop GTK_2_0 conditional.

	* guile-gtk.c (boxed_info_to_seqno): New, locate sgtk_boxed_info entry
	in type_info_tab.
	(enter_type_info, sgtk_maybe_find_type_info, sgtk_boxed2scm):
	GTK_TYPE_SEQNO has gone in Gtk 2 and types aren't sequential numbers,
	so put sgtk_type_info entries in type_info_tab in any order and just
	search for them.  May be able to do this more efficiently later.

	* guile-gtk.c (sym_gtk_version): Change from gtk-1.2 to gtk-2.0, don't
	bother with conditionals on GTK_MAJOR_VERSION/GTK_MINOR_VERSION.

	* guile-gtk.c (sgtk_register_type_infos_gtk): Rewrite using
	g_boxed_type_register_static, since gtk_type_unique can now only
	create sub-types of GtkObject.

	* guile-gtk.c: GtkObject proxies become GObject.
	(gtkobj_free): Use g_object_unref not gtk_object_unref.
	(gtkobj_marker_hook): Drop the GTK_2_0 conditional.
	(gtkobj_marker_hook_print): Print "GObject" in message.
	(make_gobject): Renamed from make_gtkobj.  Use g_object_ref_sink to
	take ownership of the floating reference on newly created GObjects.
	
	* guile-gtk.c, guile-gtk.h (sgtk_wrap_gtkobj): Take type GObject not
	GtkObject.
	(sgtk_wrap_gtkobj_nocopy): New, supporting GObjects which are created
	with a ref count of 1 (things that used to be boxed types usually).
	(sgtk_is_a_gtkobj): Take GType not guint.
	(sgtk_get_gtkobj): Return GObject* not GtkObject*.

	* guile-gtk.c (sgtk_arg2scm): Use G_TYPE_FUNDAMENTAL, add case for
	G_TYPE_OBJECT.
	(sgtk_valid_for_type): Transformed from sgtk_valid_arg, taking just
	GType rather than GtkArg.
	(sgtk_scm2arg): Remove, no longer needed.

	* guile-gtk.c (gtk_class_new): Use g_type_query and
	g_type_register_static instead of gtk_type_query and gtk_type_unique.
	(sgtk_gtk_object_get): Rewrite using g_object_class_find_property and
	g_object_get_property.

	* guile-gtk.c (sgtk_build_params): New, replacing sgtk_build_args,
	putting together GParameter's instead of GtkArg's.
	(sgtk_gtk_object_new): Use g_object_newv instead of gtk_object_newv,
	and to that end use sgtk_build_params.  Error on attempt to
	instantiate when G_TYPE_IS_ABSTRACT.
	(sgtk_gtk_object_set): Use g_object_set_property instead of
	gtk_object_setv.  (There's no function in Gtk 2 taking a whole group
	of new settings, they have to be done one by one.)

	* guile-gtk.c (sgtk_find_object_info_from_type): Lookup by name using
	sgtk_find_object_info now that SEQNOs have gone.  Can probably do
	better in the future.
	(sgtk_scm2ret): Add G_TYPE_OBJECT case.  Don't bother with GTK_2_0
	conditional.
	(sgtk_find_object_info): Remove SEQNO lookup, not possible now.  Dummy
	out gtk_object_query_args, gone from Gtk 2, believe unnecessary now.
	(gtk_signal_new_generic): G_TYPE_IS_OBJECT rather than
	GTK_FUNDAMENTAL_TYPE(type)==GTK_TYPE_OBJECT for type check on type.
	Remove gtk_object_class_add_signals, believe unnecessary in Gtk 2.

	C code bits - Gtk:
	
	* gtk-compat.c: #include <gtk/gtk.h>, pkg-config flags gets gtk 2.
	Drop GTK_2_0 conditional.
	* gtk-compat.c, guile-gtk.h (gtk_radio_menu_item_new_from_widget):
	Remove, this is in Gtk 2 itself.

	* gtk-support.c (_sgtk_helper_toscm_copy_GtkWidget): sgtk_wrap_gtkobj
	now takes GObject.

	C code bits - Gdk:

	* gdk-support.c (sgtk_gdk_gc_values_fill, gdk_window_new_interp):
	Update for GdkPixmap, GdkColormap and GdkVisual now objects not boxed.
	(gdk_event_source): "source" field now within the "device" struct.
	(gdk_event_new): Remove commented out code, now within Gtk itself.

	* gdk-support.c (gdk_get_leader_window_id): Rewrite using
	GDK_WINDOW_XID on default group of default display.
	(gdk_window_get_id): Rewrite using GDK_WINDOW_XID.

	* gdk-support.c, guile-gtk.texi (sgtk_gdk_geometry_fill): Add
	user-pos, user-size and win-gravity.

	* gdk-support.c (gdk_gc_get_values_interp): GdkPixmap now a GObject.
	(_sgdk_helper_toscm_copy_GdkVisual): GdkVisual now a GObject.

	* gdk-support.c, guile-gtk.texi (sgtk_init_gdk_support): Define
	`pango-scale' from PANGO_SCALE constant.

	Gtk-GL bits:

	* gtk-gl/Makefile.am, gtk-gl/gtk-gl-area.defs, gtk-gl/gdk-gl.defs,
	gtk-gl/gtk-gl-area.scm, gtk-gl/gdk-gl.scm: Update throughout to "2.0",
	including library as libguilegtkgl-2.0.la.


2006-12-07  Kevin Ryde  <user42@zip.com.au>

	Build bits:
	
	* configure.ac (AC_PREREQ): Use autoconf 2.61.
	(AC_INIT): Bump version to 2.0.
	(PKG_CHECK_MODULES): Replacing AM_PATH_GTK and the test of
	gtk_config_major_version.
	(--with-gdk-pixbuf, --with-libglade, --with-gtkgl): Refer to (gtk-2.0
	...) module in help messages, and PKG_CHECK_MODULES for detection
	instead of AM_PATH_GDK_PIXBUF, AM_PATH_LIBGLADE and AM_PATH_GTKGL.
	(AC_OUTPUT): gtk-1.2/Makefile and gtk-1.2/config.scm become
	gtk-2.0/Makefile and gtk-2.0/config.scm.
	
	* macros/gdk-pixbuf.m4, macros/libglade.m4, macros/gtkgl.m4: Remove
	files, superceded by pkg-config bits.
	* Makefile.am (EXTRA_DIST): Remove from dist.

	* build-guile-gtk-2.0: Renamed from buile-guile-gtk-1.2.
	* Makefile.am: Update accordingly.

	* build-guile-gtk-2.0: (register-object-type): New gettypefuncname
	option, to override the "get_type" function name (needed for
	GdkWindow).  
	(register-object-type): Nasty hack for GObject having NULL supertype.
	(emit-glue): Define GTK_ENABLE_BROKEN, to get various old Gtk bits.

	* build-guile-gtk-2.0 (register-object-type): Use "copy" option on
	object->SCM conversion, to call sgtk_wrap_gtkobj_nocopy when #f,
	needed for various things that were boxed and are now objects but
	which keep their "copy #f" status.
	* guile-gtk.c, guile-gtk.h (sgtk_wrap_gtkobj_nocopy): New.

	* build-guile-gtk-2.0: (emit-func): New gerror? option, for final
	GError parameter on funcs.  An error from such a func results in an
	scm_error_scm with key 'g-error (similar to what gnome-guile is does).
	* guile-gtk.c, guile-gtk.h (sgtk_throw_gerror): New, supporting this.

	Gdk level bits, plus pango:

	* gdk-2.0.defs: Renamed from gdk-1.2.defs.
	* Makefile.am: Update accordingly.

	* gdk-2.0.defs (GdkWindowType): New value 'foreign; 'pixmap gone.
	(GdkWindowHints): New values 'win-gravity, 'user-pos. 'user-size.
	(GdkFunction): New value 'nor.
	(GdkGravity): New.
	* guile-gtk.h (sgtk_gdk_gravity_info): New declaration for gdk-glue.c.

	* gdk-2.0.defs (GObject): New base of objects.
	* gdk-support.c, guile-gtk.h (sgtk_g_object_get_type): New helper for
	it.

	* gdk-2.0.defs (GdkDisplay): New.

	* gdk-2.0.defs (GdkColormap, GdkPixmap, GdkWindow, GdkVisual): Now
	GObjects.
	* guile-gtk.h (sgtk_gdk_colormap_info, sgtk_gdk_pixmap_info,
	sgtk_gdk_window_info, sgtk_gdk_visual_info): Update declarations
	sgtk_object_info instead of sgtk_boxed_info.

	* gdk-2.0.defs (GdkDrawable): Now a GObject.
	(GdkWindow, GdkPixmap): Now GObject subtypes of GdkDrawable.
	(GdkBitmap): Now an alias for GdkPixmap, no attempt at scheme-level
	checking of depth currently.
	(GdkImage): Now a GObject.
	(GdkRegion): Add gdk_region_copy.
	(GdkDragContext): Now a GObject.
	(GdkCursor): Add gdk_cursor_ref for copy.
	(GdkGC): Now a GObject.
	(gdk_region_intersect, gdk_region_union, gdk_region_subtract,
	gdk_region_xor, gdk_region_union_with_rect): Now modify given region
	object rather than return a new one.  This is annoyingly incompatible,
	but go with what Gtk 2 does rather than trying to stay in Gtk 1.2
	style.
	(gdk_drawable_get_image): New.

	* gdk-2.0.defs, gtk-support.c, guile-gtk.h
	(gdk_drawable_copy_to_image_interp): New

	* gdk-2.0.defs (gdk_key_repeat_disable, gdk_key_repeat_restore): Gone

	* gdk-2.0.defs, gdk-support.c, guile-gtk.h, guile-gtk.texi
	(gdk_color_hash): No need for interp any more, takes just a single
	parameter in Gtk 2.

	* gdk-2.0.defs (gdk_event_new): New.
	* guile-gtk.texi (Gdk Extras): Remove caveat about gdk_event_new, it
	exists now.

	* gdk-2.0.defs, gdk-support.c, guile-gtk.h, guile-gtk.texi
	(gdk_event_pressure, gdk_event_xtilt, gdk_event_ytilt,
	gdk_event_deviceid): Remove, no such fields any more.

	* gdk-2.0.defs (PangoLanguage, PangoFontDescription): New.
	(PangoFontMetrics, pango_font_metrics_get_ascent,
	pango_font_metrics_get_descent): New.
	(PangoContext, pango_context_get_metrics, pango_context_get_language,
	pango_context_get_font_description): New.
	(PangoLayout, pango_layout_new, pango_layout_get_context,
	pango_layout_get_font_description, pango_layout_get_text,
	pango_layout_set_text, pango_layout_get_pixel_size, gdk_draw_layout):
	New.
	(includes): Change to <gdk/gdk.h>, <gdk/gdkrgb.h>, pkg-config cflags
	gets gtk 2.

	Gtk level bits:

	* gtk-2.0.defs: Renamed from gtk-1.2.defs.
	* Makefile.am: Update accordingly.

	* gtk-2.0.defs (GtkWindowType): Value 'dialog gone.
	(GtkMenuFactoryType, GtkTroughType): Gone.
	(GtkFundamentalType): Values gone 'foreign, 'callback, 'signal,
	'c-callback.  Value 'object disabled (temporarily hopefully), because
	GTK_TYPE_OBJECT is no longer a constant.
	(GtkAccelFlags): Value gone 'signal-visible.
	(GtkAccelGroup): Now a GObject.
	(GtkStyle): Now a GObject, and field "font" is gone.
	(gtk_draw_oval, gtk_draw_cross, gtk_draw_ramp, gtk_paint_oval,
	gtk_paint_cross, gtk_paint_ramp): Gone.
	(gtk_paint_tab): Add state_type parameter.
	(GTK_OBJECT_DESTROYED): Gone.

	* gtk-2.0.defs, guile-gtk.c, guile-gtk.h (gtk_signal_connect): Rewrite
	using g_signal_connect_closure instead of gtk_signal_connect_full.
	* guile-gtk.c (struct closure_info, inner_closure_marshal,
	sgtk_closure_marshal, sgtk_closure_destroy,
	gtk_signal_connect_interp): New, supporting this.

	* gtk-2.0.defs (gtk_widget_popup, gtk_widget_push_style,
	gtk_widget_pop_style, gtk_widget_set_default_style): Gone.
	(gtk_widget_get_parent, gtk_widget_create_pango_layout,
	gtk_widget_create_pango_context, gtk_widget_get_pango_context): New.
	(gtk_container_focus, gtk_container_register_toplevel,
	gtk_container_unregister_toplevel): Gone.
	(gtk_fixed_put, gtk_fixed_move): Params now plain int not int16.
	(GtkData): Gone.
	(GtkAdjustment): Now a GtkObject rather than GtkData.
	(gtk_bin_get_child): New.
	(gtk_button_box_set_child_size_default,
	gtk_button_box_set_child_ipadding_default): Gone.
	(gtk_toolbar_new): Parameters gone.
	(gtk_toolbar_get_orientation, gtk_toolbar_get_style): New.
	(gtk_toolbar_set_space_size, gtk_toolbar_set_space_style,
	gtk_toolbar_set_button_relief, gtk_toolbar_get_button_relief): Gone.
	(GtkButton): Field "child" gone.
	(gtk_button_new_from_stock, gtk_label_set_text_with_mnemonic,
	gtk_label_get_mnemonic_keyval): New.

	* gtk-2.0.defs, gtk-support.c, guile-gtk.h
	(gtk_combo_set_popdown_strings): Change to plain wrapper, remove
	gtk_combo_set_popdown_strings_interp.  The things the interp was doing
	are ok now: gtk 2 allows an empty list, and sgtk_scm2list doesn't leak
	on an invalid element.

	* gtk-2.0.defs (GtkTooltips): Now child of GtkObject not GtkData.
	(gtk_tooltips_set_colors): Gone.
	(gtk_menu_item_new_with_mnemonic): New.
	(gtk_menu_item_set_placement, gtk_menu_item_accelerator_size,
	gtk_menu_item_configure, gtk_menu_get_uline_accel_group,
	gtk_menu_ensure_uline_accel_group): Gone.
	(GtkImageMenuItem, gtk_image_menu_item_new_from_stock,
	gtk_check_menu_item_new_with_mnemonic): New.
	(GtkSeparatorMenuItem, gtk_separator_menu_item_new,
	gtk_option_menu_get_history): New.
	(gtk_spin_button_configure, gtk_spin_button_new): Now double instead
	of float for climb_rate.
	(gtk_spin_button_new_with_range): New.
	(gtk_spin_button_get_value_as_float): Return is now double not float,
	despite the name.
	(gtk_spin_button_set_value, gtk_spin_button_spin): Now double not
	float.
	(gtk_spin_button_set_shadow_type): Gone.
	(GtkFontSelectionDialog, GtkColorSelectionDialog): Now children of
	GtkDialog.
	(GtkColorSelectionDialog): Fields main_vbox and reset_button gone.
	(gtk_color_selection_set_opacity, gtk_scale_value_width,
	gtk_scale_draw_value): Gone.
	(gtk_ruler_set_range): Now double not float.
	(GtkDialogFlags, gtk_dialog_response, gtk_dialog_add_action_widget,
	gtk_dialog_set_default_response, gtk_dialog_set_response_sensitive,
	gtk_dialog_new_with_buttons, gtk_dialog_add_button): New.

	* gtk-2.0.defs, gtk-support.c, guile-gtk.h (GtkMessageDialog,
	GtkMessageType, GtkButtonsType, gtk_message_dialog_new_interp): New,
	but no support for formatting directives in the "new" func.

	* gtk-2.0.defs (gtk_paned_handle_size): Gone.
	(gtk_paned_gutter_size): Size is now int not uint16.

	* gtk-2.0.defs, guile-gtk.c, guile-gtk.h (gtk-signal-emit,
	sgtk_signal_emit): Take GObject rather than GtkObject.  Use
	g_signal_emitv rather than gtk_signal_emitv, and thus build GValue's
	instead of GtkArg's.  Add a return value.
	* guile-gtk.c (sgtk_gvalue2scm, sgtk_scm2gvalue,
	sgtk_apply_conversion): New.

	* gtk-2.0.defs (gtk_accel_group_attach, gtk_accel_group_detach): Gone.
	(gtk_accel_groups_activate): accel_group now GObject not GtkObject.
	(gtk_accel_group_add, gtk_accel_group_remove): Gone.
	(GtkTextIter, gtk_text_iter_set_offset):
	New.

	* gtk-2.0.defs, gtk-support.c, guile-gtk.h (gtk_text_iter_new_interp):
	New.
	
	* gtk-2.0.defs (GtkTextTagTable, gtk_text_tag_table_new): New.
	(GtkTextBuffer, gtk_text_buffer_new, gtk_text_buffer_get_text,
	gtk_text_buffer_get_end_iter, gtk_text_buffer_set_text,
	gtk_text_buffer_insert): New.
	(GtkTextView, gtk_text_view_new, gtk_text_view_new_with_buffer): New.
	(includes): Just <gtk/gtk.h>, pkg-config cflags gets gtk 2.

	Gdk-Pixbuf bits:

	* gdk-pixbuf/Makefile.am, gdk-pixbuf/gdk-pixbuf.scm: Update throughout
	to "2.0", including library as libguilegdkpixbuf-2.0.la.

	* gdk-pixbuf/gdk-pixbuf.defs (GdkPixbuf, GdkPixbufAnimation): Now
	GObjects.
	(GdkPixbufFrameAction): Gone.
	(gdk_pixbuf_new_from_file, gdk_pixbuf_animation_new_from_file): Add
	gerror.
	(gdk_pixbuf_animation_get_num_frames): Gone.
	(GdkPixbufLoader): Now GObject instead of GtkObject.

	* gdk-pixbuf/gdk-pixbuf.defs, gdk-pixbuf/gdk-pixbuf-support.c,
	gdk-pixbuf/gdk-pixbuf-support.h (gdk_pixbuf_loader_write_interp): Add
	gerror.  In the code use gsize rather than size_t for count arg.

	* gdk-pixbuf/gdk-pixbuf.defs (gdk_pixbuf_loader_close): Add gerror.
	(gdk_cursor_new_from_pixbuf): New.

	Glade bits:

	* glade/Makefile.am, glade/glade.defs, glade/glade.scm: Update
	throughout to "2.0", including library as libguileglade-2.0.la.
	
	* glade/glade.defs (glade_load_module): Gone.
	(GladeXML): Now a GObject, and field txtdomain gone.
	(glade_xml_new): New "domain" parameter, allow it to default to NULL
	same as "root" parameter.
	(glade_xml_get_widget_by_long_name, glade_get_widget_long_name): Gone.


2006-12-07  Kevin Ryde  <user42@zip.com.au>

	* Version 0.60.

	* gtk-1.2.defs (gtk_style_attach): Revert this addition, a plain
	wrapper is not enough.

	* tests/glade.scm, tests/gtk-gl-area.scm, tests/gdk-gl.scm: New, at
	least seeing the modules will load.
	* tests/Makefile.am (TESTS): Add them.
	* tests/tests.scm: Add gtk-gl to LD_LIBRARY_PATH hack.

	* tests/gdk-pixbuf.scm: Use load ../gdk-pixbuf/gdk-pixbuf.scm rather
	than duplicating its merge-compiled-code.

	* guile-gtk.texi (Gtk GL Module): Clarify attrlist args.
	(Example Programs): Show "guile -s calc.scm" as example.

	* INSTALL: Update to autoconf 2.61 version.

2006-12-06  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (AC_INIT): Bump version to 0.60.
	* NEWS: Start a section for 0.60.

	* gtk-compat.c: #include "guile-gtk.h" rather than <guile-gtk.h> since
	it's certainly the local copy we want.

	* build-guile-gtk-1.2 (emit-struct-info): GtkTypeInfo fields
	reserved_1 and reserved_2 are gpointer not GtkArgSetFunc.

	* gtk-1.2/gdk.scm, gdk-support.c (gdk-major-version,
	gdk-minor-version): Set these from the variables gtk_major_version and
	gtk_minor_version to reflect the running Gtk, rather than hard-coding
	1.2.

	* gtk-1.2.defs (gtk_style_attach, gtk_get_current_event): New.

	* guile-gtk.texi (Gtk Module): Add gtk-major-version,
	gtk-minor-version, gtk-micro-version, gtk-binary-age,
	gtk-interface-age.
	(Tips and Techniques): primitive-_exit for avoiding atexit handlers.

	* gdk-1.2.defs (GdkFunction): Add 'clear, 'and, 'and-reverse,
	'and-invert, 'noop, 'or, 'equiv, 'or-reverse, 'copy-invert,
	'or-invert, 'nand, 'set, to make full set of values.

	* Makefile.am, gdk-pixbuf/Makefile.am, glade/Makefile.am,
	gtk-gl/Makefile.am: Bump --version-info according to additions or
	source revisions.

	* tests/gdk.scm (gdk-major-version, gdk-minor-version,
	gdk-priority-events): New tests, that they're at least numbers.
	* tests/gtk.scm (gtk-major-version): Expect >= 1.

2006-10-14  Kevin Ryde  <user42@zip.com.au>

	* compat.h: Include <libguile.h> explicitly, since without it the
	tests on SCM_MAJOR_VERSION can silently result in nothing done.

	* gdk-pixbuf/gdk-pixbuf.defs, gdk-pixbuf/gdk-pixbuf-support.c,
	gdk-pixbuf/gdk-pixbuf-support.h (gdk_pixbuf_loader_write): Redo as an
	interp to allow '\0' bytes in data.
	* tests/gdk-pixbuf.scm (gdk-pixbuf-loader-new,
	gdk-pixbuf-loader-write): New tests.

	* guile-gtk.texi: @settitle to "Guile Gtk" instead of "Gtk Guile".
	(Gtk Module): Add gtk-widget-size-request.
	* tests/gtk.scm (gtk-widget-size-request): Add this and misc other
	further tests.

2006-10-12  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_accel_groups_activate): Correction, returns bool.
	(gtk_menu_get_accel_group, gtk_menu_set_accel_group): New wrappers.

	* linktest.c (main): Add a return value to quieten gcc.

2006-10-10  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (int8): New type.
	* compat.h, guile-compat.c (scm_from_int8, scm_to_int8, sgtk_to_int8):
	New 1.6 compatibility bits.
	* gdk-1.2.defs (gdk_gc_set_dashes): Correction, want int8 numbers for
	the dash list values, not characters.
	* tests/gdk.scm (gdk-font?, gdk-gc-new-with-values, gdk-gc-set-dashes,
	gdk-window?): New tests.

2006-10-09  Kevin Ryde  <user42@zip.com.au>

	* gtk-threads.c (g_thread_self_guile_impl): Fix for 1.6 coop threads
	case, dodgy conditionals meant this was empty so no thread was set in
	the return.  Looks unused in gtk/glib 1.2 though.

	* guile-gtk.c (gtk_signal_new_generic): Throw an error for type not a
	subclass of GtkObject, rather than silently doing nothing.
	(sgtk_type_name): New function, helper GtkType to SCM string.
	(sgtk_build_args, sgtk_build_args, sgtk_signal_emit): Use it.

2006-10-07  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs, gtk-support.c, guile-gtk.h
	(gtk_widget_size_request_interp): New wrapper.

	* gtk-1.2.defs (gtk_item_factory_path_from_widget): Correction, return
	is static_string not string, though the other functions needed to use
	this aren't wrapped yet.
	(gtk_button_box_set_child_size_default,
	gtk_button_box_set_child_ipadding_default): Remove XXX comments, these
	exist.

	* gdk-support.c (gdk_property_get_interp): Remove unused var scmdata.

2006-06-10  Kevin Ryde  <user42@zip.com.au>

	* Version 0.5.

2006-05-23  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_button_set_relief, gtk_button_get_relief): New
	wrappings.

	* gdk-support.c (sgtk_gdk_gc_values_fill): Use sgtk_font_conversion in
	#:font, to allow a string like other font args.

	* build-guile-gtk-1.2 (emit-funcs): Emit type predicates for boxed
	types, eg. `gdk-window?'.
	* guile-gtk.texi (Gdk Module): Describe this.

2006-05-17  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (GtkProgressBarOrientation, GtkProgressBarStyle,
	gtk_progress_bar_new_with_adjustment, gtk_progress_bar_set_bar_style,
	gtk_progress_bar_set_orientation): New.
	(gtk_progress_bar_set_discrete_blocks,
	gtk_progress_bar_set_activity_step,
	gtk_progress_bar_set_activity_blocks): "blocks" and "step" are uints.

2006-05-15  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (rect-null-ok): New type.
	* guile-gtk.c, guile-gtk.h (sgtk_scm2rect_null_ok): Support for it.
	* gtk-1.2.defs: Add various GtkStyle draw and paint funcs.
	* tests/gtk.scm (gtk-paint-hline): New tests.

2006-05-13  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (int16, uint16): New types.
	* compat.h, guile-compat.c (scm_to_int16): New 1.6 compatibility.

	* gtk-1.2.defs, gtk-support.c, guile-gtk.h
	(gtk_combo_set_popdown_strings_interp): Some explicit code to handle
	the strings conversion, fixing the memory leak (a leak introduced by
	the cstr stuff I think).
	* compat.h, guile-compat.c (scm_to_size_t, scm_car, scm_cdr): New 1.6
	compatiblity.
	* BUGS: gtk-combo-set-popdown-strings now ok.

	* gtk-1.2.defs (GtkBin): Add child field.
	(gtk_fixed_put, gtk_fixed_move): Use int16, to avoid silent wraparound
	on bigger inputs.
	(gtk_paned_handle_size, gtk_paned_gutter_size): Use "uint16" which is
	the actual arg type.
	(gtk_plug_new): Arg should be "uint32", not "int".
	(GtkSocket, gtk_socket_new, gtk_socket_steal): New.

	* tests/gtk.scm: More tests.
	* tests/tests.scm (malloced-steady): Revise to cope with fluctuating
	+8 / -8 uordblks in guile 1.8.  Not sure of the actual cause, and
	indeed this workaround is not too good.

	* gdk-1.2.defs (gdk_colormap_change, gdk_colormap_sync): New.

	* build-guile-gtk-1.2 (bool, gpointer, atom): Use scm_is_true instead
	of SCM_NFALSEP.

2006-05-11  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_scm2ret): For GTK_TYPE_STRING, use
	scm_to_locale_string, though it seems you can't actually return a
	string.
	* tests/gtk.scm: Exercise signal returning string (doesn't work).
	Exercise gtk-combo-set-popdown-strings, which alas leaks memory.
	* BUGS: Note gtk-combo-set-popdown-strings.

	* guile-gtk.c (xstrdup, xstrndup, SCM_SYSCALL): Remove, unused.
	* guile-gtk.c, guile-gtk.h (sgtk_string_conversion): Remove,
	superceded by cstr bits.

	* gtk-1.2.defs (gtk_menu_shell_select_item, gtk_menu_shell_deselect,
	gtk_menu_shell_activate_item, gtk_accel_groups_activate): New wrappers.

	* gtk-1.2.defs (gtk_box_reorder_child): "int" rather than "uint" for
	the position arg, which is per function prototype, though only
	positive values make sense.

	* gtk-1.2.defs, tests/gtk.scm (gtk_box_query_child_packing): New
	wrapper.

	* tests/gdk.scm (gdk-drag-begin): New tests.

	* tests/Makefile.am (EXTRA_DIST): Distribute the tests.
	(CLEANFILES): Cleanup tests.x snarf.

2006-05-09  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (CFLAGS): Remove -DSCM_ENABLE_DEPRECATED=1, have now
	updated to 1.8 style.

2006-05-07  Kevin Ryde  <user42@zip.com.au>

	* tests/gtk.scm, tests/gdk.scm: More tests.

2006-05-04  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (emit-funcs): Drop SCM_DEFER_INTS /
	SCM_ALLOW_INTS, in 1.6 they don't do anything we seem to need, and in
	1.8 they're deprecated.

	* guile-gtk.texi (General Conventions): Revise threading protection
	described, it never actually worked on a per-function basis.

2006-04-15  Kevin Ryde  <user42@zip.com.au>

	* guile-compat.c (sgtk_to_locale_stringn): Correction, change
	SCM_ROSTRINGP to SCM_STRINGP||SCM_SUBSTRP, don't want to allow
	symbols, which SCM_ROSTRINGP gives.  And should be SCM_ROCHARS for
	access, though SCM_STRING_CHARS seemed to work.

	* compat.h, guile-compat.c (scm_c_vector_length, scm_c_vector_ref,
	scm_c_vector_set_x): Redo as C funcs, to get type checking same as 1.8.

	* guile-gtk.c (sgtk_scm2raw): Rewrite in 1.8 style.  Use cblk to hold
	malloced space.  Support u8 an s8 vectors in 1.8.
	* guile-gtk.h (sgtk_raw): Change "must_free" to an SCM "keep" value.
	* guile-gtk.c, guile-gtk.h (sgtk_raw_finish): Remove.
	* build-guile-gtk-1.2 (raw-data-r): Remove 'finish, no longer used.
	* compat.h, guile-compat.c (scm_c_generalized_vector_length,
	scm_c_generalized_vector_ref): New 1.6 compats.
	* compat.h (scm_u8vector_p, scm_s8vector_p): New compat funcs, treat
	byvect as an s8vector.

	* gdk-support.c (gdk_colormap_alloc_colors_interp): Use scm_from_bool
	instead of SCM_BOOL.
	* compat.h (scm_from_bool): New 1.6 compatibility.

	* guile-gtk.c (sgtk_valid_enum, sgtk_valid_point): Use
	scm_is_signed_integer for range and type check.

	* guile-gtk.c (sgtk_scm2enum): Use scm_num2int rather than
	scm_num2long, since gint is the return value.

	* gtk-1.2.defs, gtk-support.c, guile-gtk.h
	(gtk_object_query_args_interp): Renamed from
	gtk_object_query_args_scm, share code with
	gtk_container_query_child_args_interp.
	(gtk_container_query_child_args_interp): New function.

	* guile-gtk.c (gtkobj_free, sgtk_composite_inconversion,
	hack_compiled_switches): Use scm_is_eq, for
	SCM_DEBUG_TYPING_STRICTNESS.
	* guile-gtk.c (sgtk_callback_trampoline): Use SCM_UNBNDP.

2006-04-09  Kevin Ryde  <user42@zip.com.au>

	* gdk-support.c (check_bitmap_data_size): New function.
	(gdk_image_new_bitmap_interp, gdk_bitmap_create_from_data_interp): Use
	it, for exact data size test.

	* guile-gtk.texi (Gdk Module): Add gdk-image-new-bitmap, describing
	data types and size requirements.

	* compat.h (SCM_GC8MARKP, SCM_SETGC8MARK, SCM_GC_MARK_P,
	SCM_SET_GC_MARK, SCM_ARRAY_FLAG_CONTIGUOUS, SCM_SET_UVECTOR_BASE,
	SCM_SET_UVECTOR_LENGTH, SCM_UVECTOR_MAX_LENGTH): Remove old compat
	bits, unused.
	* compat.h, configure.ac (scm_c_define_module): Remove fallback,
	unused.
	(scm_bits_t): Remove fallback, not needed for 1.6 and up.
	* configure.ac (scm_c_read_string): Remove test, unused.

	* guile-gtk.h (GtkWidgetFlags): Drop Gtk 1.0 fallback.
	* guile-gtk.c (gtk_class_new): Drop Gtk 1.0 conditional on
	base_class_init_func.

2006-04-07  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (emit-funcs): Change !=SCM_UNDEFINED to
	!SCM_UNBNDP, for strict typing.

	* gtk-support.c (gtk_rc_get_default_files_interp): Use scm_makfromstrs.
	(gtk_object_query_args_scm): Use scm_list_5 and scm_from_locale_string.
	(gtk_selection_data_data): Use scm_from_locale_stringn.
	* compat.h (scm_from_locale_stringn): New 1.6 compat.

	* gdk-support.c (gdk_event_string,
	gdk_string_to_compound_text_interp):  Use scm_from_locale_stringn.
	(gdk_property_get_interp): Use scm_take_locale_stringn.

	* compat.h (scm_take_locale_stringn): scm_take_str from 1.6 is not a
	direct equivalent.
	* guile-compat.c (sgtk_take_locale_stringn): New code doing the
	necessary '\0' termination.

	* guile-gtk.c (sgtk_flags2scm): Comments to remind why the mask and
	test is implemented the way it is.

	* guile-gtk.c (sgtk_scm2raw): Typo should be "#undef FUNC_NAME".

	* guile-gtk.c (sgtk_valid_arg): Add range checks to GTK_TYPE_INT,
	GTK_TYPE_UINT, GTK_TYPE_LONG and GTK_TYPE_ULONG.
	* compat.h (scm_is_signed_integer, scm_is_unsigned_integer),
	guile-compat.c (sgtk_is_signed_integer, sgtk_is_unsigned_integer): New
	1.6 compatibility

	* guile-gtk.c (sgtk_arg2scm): Use scm_take_locale_string and
	scm_from_locale_string for GTK_TYPE_STRING.

	* guile-gtk.c, guile-gtk.h (sgtk_gtk_object_new, sgtk_gtk_object_set,
	sgtk_build_args): Do more in the common sgtk_build_args.  Use
	gtk_object_newv rather than separate gtk_object_new and
	gtk_object_set.  Use a keep_list to protect new SCM objects obtained
	from type_info->conversion, which includes cstr strings now.  Use a
	cblk to hold/free the args block.

	* guile-gtk.c (sgtk_signal_emit): Use cblk for info and args blocks,
	easier than explicit freeing and in particular fixes a little memory
	leak of the info block in the case of an invalid argument type.

	* guile-gtk.c, guile-gtk.h (sgtk_make_cblk): void* for parameter,
	don't want pointer type checking.

	* guile-gtk.c (sgtk_init_substrate): Add sgtk_type_info for
	GTK_TYPE_STRING to run sgtk_to_cstr.
	(sgtk_valid_arg): For GTK_TYPE_STRING demand cstr smob object.
	(sgtk_scm2arg): Use sgtk_cstr2ptr.

	* compat.h: Add #include <libguile/extensions.h> for
	scm_c_register_extension prototype in 1.6.

	* guile-gtk.c (sgtk_init, make_argv): Simplify and merge make_argv
	into sgtk_init, use scm_to_locale_string.
	* compat.h (scm_to_int): New 1.6 compat.

2006-03-31  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (char): Remove scm2c-does-type-checking, since
	SCM_CHAR doesn't do a type check.  This change catches bogus args
	passed for instance to gdk-char-width.

	* build-guile-gtk-1.2 (float, double): Use scm_is_real and
	scm_to_double directly, no need to go via sgtk_valid_float,
	sgtk_scm2float, sgtk_valid_doubles and gtk_scm2double.  Add
	scm2c-does-type-checking since the conversion has a type check (it did
	before the present change too).
	* guile-gtk.c (sgtk_scm2arg, sgtk_scm2ret): Use scm_to_double for
	types GTK_TYPE_FLOAT and GTK_TYPE_DOUBLE, no need to go via
	sgtk_scm2float and sgtk_scm2double.
	* guile-gtk.c (sgtk_arg2scm), build-guile-gtk-1.2 (float): Use
	scm_from_double directly, no need to go via sgtk_float2scm.
	* guile-gtk.c, guile-gtk.h (sgtk_valid_float, sgtk_float2scm,
	sgtk_scm2float, sgtk_valid_double, sgtk_scm2double): Remove, no longer
	used.
	* compat.h (scm_to_double): New 1.6 compatibility macro.

	* guile-compat.c, compat.h (scm_to_uint8, scm_to_uint16,
	scm_to_uint32): New 1.6 compatibility.

	* guile-compat.c (sgtk_malloc): Moved and renamed from guile-gtk.c.
	* compat.h (scm_malloc): Expose this compat, not just in guile-gtk.c.

	* guile-compat.c, compat.h (sgtk_to_locale_string,
	sgtk_to_locale_stringn, scm_cell): Moved from guile-gtk.c.
	guile-compat.c was meant to be the place for stuff like this.

	* guile-gtk.c, guile-gtk.h (cstr, cblk): New smob types for holding
	strings and blocks of memory at the C level.
	* compat.h (scm_gc_register_collectable_memory,
	scm_gc_unregister_collectable_memory, SCM_SMOB_DATA_2): New 1.6 compat
	macros.
	* build-guile-gtk-1.2 (string): Change to use cstr smob as an
	intermediate, add scm2c-does-type-checking.
	(cstring): Define as an alias for string, "char *" and "const char *"
	have always been handled the same.

	* guile-gtk.c (sgtk_color_conversion): Use scm_to_locale_string
	instead of SCM_STRING_CHARS.

	* build-guile-gtk-1.2 (emit-funcs): Support null-ok on a type which
	has scm2c-does-type-checking.

	* build-guile-gtk-1.2: Use scm_is_false, scm_is_true and SCM_UNBNDP
	instead of == SCM_BOOL_F, SCM_BOOL_T and SCM_UNDEFINED, for the
	benefit of a debug build where SCM is a struct.

	* guile-gtk.c, guile-gtk.h (sgtk_gdk_font_load): Put prototype in the
	.h file so it's checked against gdk-glue.c (which contains the
	function).

	* gdk-support.c (gdk_property_change_interp): Use
	scm_to_locale_stringn instead of SCM_STRING_CHARS and
	SCM_STRING_LENGTH.  Don't store terminating '\0' in the property.

	* gdk-support.c (gdk_property_change_vector): Rewrite using cblk to
	avoid memory leaks on invalid values in array.  Use scm_to_uint8,
	scm_to_uint16, scm_to_uint32 for conversions, to get correct range
	checks.

	* gdk-support.c (gdk_window_new_interp): Use cstr smobs instead of
	SCM_STRING_CHARS.

	* gdk-support.c (gdk_text_property_to_text_list_interp): Use
	scm_to_locale_stringn.

	* guile-gtk.c (sgtk_scm2arg, sgtk_scm2ret): Use scm_num2int and
	scm_num2uint for those GTK_TYPEs, rather than scm_num2long and
	scm_num2ulong, giving tighter range checking.

	* gdk-support.c (gdk_selection_property_get_interp): Use
	scm_take_locale_stringn instead of scm_take_str.  Cast guchar* arg to
	avoid a gcc warning.
	* compat.h (scm_take_locale_stringn): New 1.6 compat.

	* tests/tests.scm, tests/gdk.scm, tests/gtk.scm: More tests.

2006-03-28  Kevin Ryde  <user42@zip.com.au>

	* Makefile.am (libguilegtk_1_2_la_SOURCES): Move compat.h to here,
	instead of EXTRA_DIST.

2006-03-25  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (scm_list_1, scm_gc_protect_object): Remove old guile
	1.4 compatibility tests.
	(AC_INIT): Put mailing list for bug reports.
	* compat.h (scm_gc_protect_object, SCM_STRING_CHARS,
	SCM_STRING_LENGTH, SCM_SYMBOL_CHARS, SCM_VECTOR_LENGTH, scm_list_1,
	scm_list_2, scm_list_3, scm_list_4, scm_list_5, scm_list_n): Remove
	old guile 1.4 compatibility bits.

	* guile-gtk.c, compat.h (sgtk_to_locale_stringn): New function, use it
	for sgtk_to_locale_string.
	* compat.h (scm_to_locale_stringn): New compat.

	* compat.h (scm_is_string): Use SCM_ROSTRINGP, because we only ever
	read, so shared substrings are ok (or should be).

	* gdk-support.c (gdk_draw_text_interp, gdk_text_extents_interp,
	gdk_text_width_interp, gdk_text_measure_interp,
	gdk_text_height_interp, sgtk_string_parse_to_color): Use
	scm_to_locale_stringn.

	* guile-gtk.c (sgtk_arg2scm): Use SCM_MAKE_CHAR instead of gh_char2scm.
	(sgtk_valid_arg): Use SCM_CHARP instead of gh_char_p.  Use scm_is_real
	instead of gh_number_p.  Use scm_is_string instead of gh_string_p.
	(sgtk_scm2arg, sgtk_scm2ret): Use SCM_CHAR instead of gh_scm2char.
	Use scm_is_true instead of SCM_NFALSEP.

	* guile-gtk.c (sgtk_string_conversion): Dirty hack for guile 1.8.0 so
	that shared and read-only substrings work as args to wrapped funcs.

	* guile-gtk.c (sgtk_font_conversion): Remove
	SCM_STRING_COERCE_0TERMINATION_X, the generated sgtk_gdk_font_load
	does everything necessary (ie. sgtk_string_conversion).

	* compat.h (SCM_STRING_COERCE_0TERMINATION_X): Remove guile pre-1.6
	fallback to SCM_COERCE_SUBSTR.
	(SCM_VALIDATE_DOUBLE_COPY): Remove, unused.

2006-03-22  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_scm2arg): Should be "(long)SCM_ARG1" not
	"(ulong)SCM_ARG1", and ulong looks like it's only a glibc typdef
	anyway.  Reported by hoa van nguyen.

2006-03-21  Kevin Ryde  <user42@zip.com.au>

	* tests/tests.scm (path): Further hack for gdk-pixmap and glade
	uninstalled shared libraries.

	* guile-gtk.c (sgtk_valid_float, sgtk_valid_double): Tighten test to
	scm_is_real, rather than SCM_NUMBERP, to exclude complex numbers.
	The conversions already checked, the change here gets it detected
	earlier and hence a better error message.
	* compat.h (scm_is_real): New compatibility for 1.6.
	
2006-03-19  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_clist_get_column_title): Newly wrapped.

	* guile-gtk.c (sgtk_scm2flags): Change scm_num2long to scm_num2int
	since that's the type returned.  Let scm_num2int do the type checks
	rather than explicit scm_integer_p and SCM_INUMP.
	(sgtk_valid_flags): Tighten test to require proper list, same as
	sgtk_scm2flags does.  (Though sgtk_valid_flags is presently unused.)

	* gdk-support.c (gdk_property_change_vector): Remove bogus end-of-list
	tests.  Use scm_c_vector_length and scm_c_vector_ref.

2006-03-17  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (AC_INIT): Bump to version 0.5.
	* NEWS: Start an 0.5 part.

	* compat.h (scm_c_vector_length, scm_c_vector_set_x,
	scm_c_vector_ref): Changed from SCM_VECTOR_REF and SCM_VECTOR_SET.
	* guile-gtk.c: Use them.

	* compat.h (scm_is_eq): New compatibility for 1.6.
	* gdk-support.c: Use it.

	* compat.h (SCM_WRITABLE_VELTS, SCM_RWSTRINGP, scm_c_read_string):
	Remove old fallback definitions, no longer used.

	* guile-gtk.texi (Gdk Module, Known Bugs): gdk-window-new is ok, just
	needs main loop to finish destroy.

2006-03-09  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_try_missing_type): Add GdkPixmap, which we want to
	distinguish from GdkWindow.
	* guile-gtk.h (sgtk_gdk_pixmap_info): Now a separate extern, not an
	alias for sgtk_gdk_window_info.

	* tests/gdk-pixbuf.scm: New file.
	* tests/Makefile.am: Add it.
	* tests/gdk.scm: More tests.

	* guile-gtk.texi (Gdk Module, Known Bugs): gdk-window-destroy doesn't
	leak memory, but you do need to run the gtk-main loop to free
	everything.

2006-03-05  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (define-boxed-union): New defining type.
	* gdk-1.2.defs (GdkPixmap): Own boxed type, so as to use
	gdk_pixmap_unref (which is not the same as gdk_window_unref).
	(GdkBitmap): An alias of GdkPixmap rather than GdkWindow.
	(GdkDrawable): Union of GdkWindow and GdkPixmap.

	* gdk-1.2.defs (gdk_gc_new, gdk_image_get, gdk_pixmap_new,
	gdk_bitmap_create_from_data_interp,
	gdk_pixmap_create_from_data_interp, gdk_pixmap_create_from_xpm,
	gdk_pixmap_colormap_create_from_xpm,
	gdk_pixmap_create_from_xpm_d_interp,
	gdk_pixmap_colormap_create_from_xpm_d_interp): GdkDrawable rather than
	GdkWindow for parameters.  Although gdk.h shows GdkWindow, believe a
	pixmap is also acceptable for all these, and was of course accepted by
	guile-gtk in the past when GdkPixmap was an alias for GdkWindow.
	
	* gdk-1.2.defs (gdk_draw_point, gdk_draw_line, gdk_draw_lines,
	gdk_draw_segments, gdk_draw_rectangle, gdk_draw_polygon, gdk_draw_arc,
	gdk_draw_string, gdk_draw_text_interp, gdk_draw_text_wc,
	gdk_draw_points, gdk_draw_image, gdk_draw_pixmap): Corrections,
	parameters should be GdkDrawable not GdkWindow.

	* gdk-pixbuf/gdk-pixbuf.defs (gdk_pixbuf_render_to_drawable,
	gdk_pixbuf_render_to_drawable_alpha, gdk_pixbuf_get_from_drawable):
	Correction to parameters, should be GdkDrawable not GdkWindow.
	(gdk_pixbuf_render_threshold_alpha): Correction to parameter, should
	be GdkBitmap not GdkWindow.

	* guile-gtk.texi (Gdk Module): Describe GdkBitmap vs GdkPixmap.
	Improve GdkWindow destroy notes.
	(Known Bugs): Add gdk-window-new/gdk-window-destroy memory leak.
	Remove GdkBitmap/GdkPixmap improper freeing, now fixed.

	* configure.ac: Change minimum Guile required from 1.5.1 to 1.6.4.
	1.5 was a development series, so 1.6 is all that needs to be
	considered, and 1.6.4 is the lowest one that's good for us.  Use
	GUILE_PROGS and run $GUILE too, instead of just "guile".

	* gtk-support.c (sgtk_init_gtk_support): gtk_major_version etc are
	uint rather than ulong, so use scm_from_uint.

2006-03-04  Kevin Ryde  <user42@zip.com.au>

	* gtk-threads.c: Redo #if conditionals to be clearer about which test
	is for which guile.

	* configure.ac (malloc, malloc.h): New tests.
	(tests/Makefile): New output file.
	* Makefile.am (SUBDIRS): Add tests.
	* tests/Makefile.am, tests/tests.c, tests/tests.scm, tests/gtk.scm,
	tests/gdk.scm: New files.

	* guile-gtk.c (sgtk_make_cell, scm_cell): Change to use scm_cell,
	provide an equivalent for guile 1.6.

	* compat.h: Change to test guile 1.6 on its version number.
	* configure.ac (HAVE_GUILE_1_8): Remove.

	* compat.h (SCM_SIMPLE_VECTOR_SET_X): Replacement for guile 1.6.
	* guile-gtk.c (sgtk_composite_inconversion, sgtk_cvec2scm),
	gdk-support.c (gdk_event_message, gdk_mbstowcs_interp): Use it.

	* compat.h (scm_c_make_vector): Replacement for guile 1.6.
	* guile-gtk.c (sgtk_composite_inconversion), gdk-support.c
	(gdk_event_message): Use it.

	* guile-gtk.c (scm_malloc, sgtk_strdup, sgtk_to_locale_string): New
	for guile 1.6 compatibility.
	* compat.h (scm_to_locale_string): New for guile 1.6.

	* guile-gtk.c (sgtk_keyword_to_locale_string,
	sgtk_symbol_to_locale_string): New.
	(sgtk_valid_senum, sgtk_scm2senum, sgtk_scm2atom, sgtk_valid_type,
	sgtk_scm2type, sgtk_build_args, sgtk_gtk_object_get): Use them, to
	avoid SCM_SYMBOL_CHARS and SCM_KEYWORDSYM.

	* compat.h (scm_take_locale_symbol): Replacement for guile 1.6.
	* guile-gtk.c (sgtk_atom2scm): Use scm_take_locale_symbol, since the
	return from gdk_atom_name otherwise is just g_free()ed.

2006-03-02  Kevin Ryde  <user42@zip.com.au>

	* gtk-threads.c: Add support for Guile 1.8 pthreads or no threads.

	* compat.h (scm_gc_malloc, scm_gc_free): Replacements for guile pre
	1.8.0.
	* guile-gtk.c (make_gtkobj, gtkobj_free): Use them.
	(sgtk_scm2enum): Drop SCM_INUMP, leave it all to scm_num2long.

2006-03-01  Kevin Ryde  <user42@zip.com.au>

	* compat.h (scm_is_false, scm_is_true, scm_is_integer, scm_is_keyword,
	scm_is_vector, scm_from_locale_string, scm_from_locale_symbol):
	Replacements for guile pre 1.8.0.
	* guile-gtk.c, gdk-support.c, build-guile-gtk-1.2: Use these.  Drop
	some SCM_NIMP no longer needed.

2006-02-28  Kevin Ryde  <user42@zip.com.au>

	* README: Note guile 1.6.4 or higher is needed.  Reported by Greg
	Badros.

	* guile-gtk.texi: Some @xref's should be @pxref.

	* configure.ac (HAVE_GUILE_1_8): New AC_DEFINE, testing
	scm_c_make_string.

	* gtk-1.2.defs (GtkPolicyType): Add GTK_POLICY_NEVER.

	* compat.h (scm_from_int, scm_from_uint, scm_from_long,
	scm_from_ulong, scm_from_double, scm_is_string,
	scm_take_locale_string, scm_is_symbol, scm_is_pair, scm_is_null):
	Replacements for guile pre 1.8.0.
	* guile-gtk.c, gdk-support.c, gtk-support.c, build-guile-gtk-1.2: Use
	these, drop SCM_NIMP from those tests, don't use "== SCM_EOL" as that
	breaks when SCM is a struct.
	* guile-gtk.c, guile-gtk.h (sgtk_double2scm): Remove, no longer used.

2005-04-11  Kevin Ryde  <user42@zip.com.au>

	* gtk-threads.c (errno): Remove extern declaration, <errno.h> provides
	whatever macro etc is needed, a plain variable is not right for glibc.

	* guile-gtk.c (SCM_GC_P): Change from scm_gc_heap_lock to
	scm_gc_running_p.  scm_gc_heap_lock is gone from guile 1.8.

2005-04-02  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (AC_INIT): Bump to version 0.41.
	(AC_COPYRIGHT): Correction to program name.

2005-03-17  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_unprotect, sgtk_protect, gtkobj_free): Add parens
	to suppress gcc warnings.

	* configure.ac (AM_INIT_AUTOMAKE): Add no-dependencies, since depcomp
	is usually more trouble than its worth.

2005-03-13  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_slist2scm, sgtk_list2scm): Initialize "res" so
	list being constructed doesn't have garbage at the end (that can cause
	a segv if a gc occurs).

2005-02-28  Kevin Ryde  <user42@zip.com.au>

	* gdk-support.c, gdk-1.2.defs, guile-gtk.texi (gdk_event_new): Remove,
	cannot easily be implemented correctly.

	* gdk-1.2.defs (gdk_window_set_icon): Add null-ok to args.

2005-02-24  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (GtkWidget): Correction to requisition-width,
	requisition-height; were opposite way around.

	* guile-gtk.c (sgtk_flags_comp): Correction to comparison, subtraction
	to a signed result is wrong when values are more than 2^31 apart,
	because the value wraps around to the opposite sign.  This was seen on
	i386 in certain circumstances, causing flags to be unrecognised by
	sgtk_enum_flags_bin_search.

2005-02-17  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_clist_set_cell_style): Add null-ok.

	* guile-gtk.c (sgtk_scm2raw): Conditionalize uniform byte vector case
	for use only in guile 1.6, the interface has changed in guile pre-1.8.

	* guile-gtk.texi (Installing): Should be --with-glade.
	(Gdk Module): Describe gdk-rectangle-intersect.

2004-12-21  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (AC_INIT): Set to version 0.40.

2004-11-28  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_clist_set_row_style): null-ok on style param.

2004-09-27  Kevin Ryde  <user42@zip.com.au>

	* gdk-support.c (gdk_event_time, gdk_event_x, gdk_event_y,
	gdk_event_pressure, gdk_event_xtilt, gdk_event_ytilt,
	gdk_event_button, gdk_event_state, gdk_event_source,
	gdk_event_deviceid, gdk_event_x_root, gdk_event_y_root): Add
	GDK_2BUTTON_PRESS and GDK_3BUTTON_PRESS, which give GdkEventButton
	same as GDK_BUTTON_PRESS.

2004-09-16  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_clist_set_row_style): Add null-ok to style
	parameter, the code accepts this and it's what gtk_clist_get_row_style
	returns initially.

2004-09-09  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (CFLAGS): Forcibly add -DSCM_ENABLE_DEPRECATED=1, for
	the benefit of guile pre-1.8.

	* compat.h (SCM_SYMBOL_CHARS): Move compatibility define into
	SCM_STRING_UCHARS block, since SCM_SYMBOL_CHARS is no longer a macro
	in guile pre-1.8.

	* gtk-1.2.defs (gtk_text_insert): length default to -1, meaning whole
	string.
	* guile-gtk.texi (Gtk Module): Describe this.

2004-09-03  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs, gtk-support.c, guile-gtk.h
	(gtk_rc_get_default_files_interp): New function.

2004-08-30  Kevin Ryde  <user42@zip.com.au>

	* compat.h (SCM_STRING_CHARS, SCM_STRING_LENGTH): Test #ifndef
	SCM_STRING_UCHARS since in latest guile SCM_STRING_CHARS is no longer
	a macro.

	* gtk-1.2.defs (gtk_calendar_select_month, gtk_calendar_select_day,
	gtk_calendar_mark_day, gtk_calendar_unmark_day): Parameters are guint,
	despite returns begin gint.

	* gtk-1.2.defs (gtk_widget_set_style): null-ok on style arg.
	(gtk_widget_set_rc_style, gtk_widget_ensure_style): New functions.

	* gtk-compat.c (gtk_style_get_white_interp): Remove gdk_color_copy to
	avoid memory leak, the defs wrapper code does the copy.

2004-07-20  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.texi (Gtk Module): Add GtkCList gtk-clist-selection.
	Reported by Roland Besserer.

2004-06-17  Kevin Ryde  <user42@zip.com.au>

	* configure.ac (AC_COPYRIGHT, AH_TOP): Add copyright notice.

	* configure.ac (AC_INIT): Update home page to gnu.org.  Reported by
	Greg Troxel.

	* gtk-1.2.defs (GtkCalendarDisplayOptions): New enum.
	(gtk_calendar_display_options, gtk_calendar_get_date): New functions.

	* guile-gtk.c (sgtk_valid_complen): Remove elts variable, unused since
	chagne to SCM_VECTOR_REF.

	* guile-gtk.h (sgtk_init_gtk_gdk_glue_types,
	sgtk_register_type_infos_gtk, sgtk_init_gdk_support,
	sgtk_init_gtk_support, sgtk_init_threads,
	gtk_editable_insert_text_scm, gtk_list_prepend_item,
	sgtk_init_gtk_gtk_glue_types): Add prototypes.
	
2004-03-30  Mikael Djurfeldt  <djurfeldt@nada.kth.se>

	* compat.h (SCM_WRITABLE_VELTS): New macro.

	* gdk-support.c (gdk_event_message): Use SCM_WRITABLE_VELTS.

2004-02-16  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.texi (Known Bugs): Note bad GdkPixmap and GdkBitmap
	garbage collection.

2004-02-14  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.texi (Known Bugs): New section.

2004-01-23  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_color_conversion): Use
	gtk_widget_get_default_colormap rather than gtk_widget_peek_colormap.
	The latter is not public and was only ever a replacement function
	calling the former, so this is in fact no change.

	* gtk-compat.c guile-gtk.h (gtk_widget_peek_colormap): Remove.
	* configure.ac (AC_CHECK_FUNCS): Remove gtk_widget_peek_colormap.
	
	* guile-gtk.texi (Gtk Module): Add GtkStyle field accessor functions.

2004-01-09  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (sgtk_type2scm): Remove unused variable "z".

	* gtk-1.2.defs (gtk_rc_add_default_file, gtk_rc_parse_string,
	gtk_rc_reparse_all, gtk_widget_get_pointer): New functions.

	* gtk-1.2.defs, gtk-support.c, guile-gtk.h (gtk_style_white,
	gtk_style_black, gtk_style_fg, gtk_style_bg, gtk_style_light,
	gtk_style_dark, gtk_style_mid, gtk_style_text, gtk_style_base): New
	functions.

	* guile-gtk.texi (Gdk Module): Add gdk-colormap-alloc-colors.
	(Gdk Extras): In gdk-color-intern, refer to
	gtk-widget-get-default-colormap.
	(Gdk Extras): In gdk-color-new, there's no type parameter.
	(Glade Module): Remove glade-xml-get-widget, no default name param.
	(Tips and Techniques): Note gdk-colormap-alloc-color return bugs.

2003-10-05  Kevin Ryde  <user42@zip.com.au>

	* gdk-support.c (gdk_gc_get_values_interp): Remove unused "list"
	variable.

	* gdk-support.c (gdk_colormap_free_colors_interp): Validate colors
	list taken.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h
	(gdk_colormap_alloc_colors_interp): Rewrite returning failure count
	and list of #t/#f, and modifying colors given, per C function.
	* gdk-support.c (sgtk_append_element): Remove, no longer used.
	(sgtk_string_parse_to_color, sgtk_helper_valid_GdkColor): New
	functions.

	* guile-gtk.c, gdk-support.c, compat.h (SCM_VECTOR_REF,
	SCM_VECTOR_SET): Move to compat.h.

2003-10-02  Marius Vollmer  <marius.vollmer@uni-dortmund.de>

	* gdk-support.c (SCM_VECTOR_SET): Define, when it isn't already.

2003-09-26  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.texi (Gdk Module): Add gdk-gc-new-with-values,
	gdk-window-set-geometry-hints.
	(Gtk Extras): Add gtk-radio-menu-item-new-from-widget,
	gtk-radio-menu-item-new-with-label-from-widget.
	Misc tweaks elsewhere.

	Revert this, not true:
	* gtk-compat.c (gtk_radio_menu_item_new_with_label_from_widget,
	gtk_radio_menu_item_new_from_widget): Remove, these were accepted into
	Gtk itself back in 1997.

2003-09-25  Kevin Ryde  <user42@zip.com.au>

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_window_get_children):
	Use an interp to free the returned list, avoiding a memory leak.

	* gdk-1.2.defs, guile-gtk.c, guile-gtk.h (gdk_window_destroy): Use an
	interp to avoid the unref gdk_window_destroy does.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h
	(gdk_window_set_geometry_hints_interp): Rewrite taking keyword args.
	* gdk-support.c, guile-gtk.h (sgtk_gdk_geometry_fill): New helper.

2003-09-24  Marius Vollmer  <marius.vollmer@uni-dortmund.de>

	* Make sure that all files have a copyright notice that is
	appropriate for a GNU package.

	* gtk-gl/gtk-gl-area.scm, glade/glade.scm,
	gdk-pixbuf/gdk-pixbuf.scm: Use the (gtk-1.2 ...) modules instead
	of (gtk ...).

	* README: Removed paragraph about who started guile-gtk and who is
	maintaining it.

	* gdk.defs: Removed, it is not used.

2003-09-21  Kevin Ryde  <user42@zip.com.au>

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h
	(gdk_gc_new_with_values_interp): New function.
	* gdk-support.c, guile-gtk.h (sgtk_gdk_gc_values_fill): New helper.
	* guile-gtk.h (sgtk_gdk_pixmap_info): New define, an alias for
	sgtk_gdk_window_info.

2003-09-19  Kevin Ryde  <user42@zip.com.au>

	* gdk-support.c (gdk_property_change_list, gdk_property_change_vector,
	gdk_mbstowcs_interp, gdk_colormap_alloc_colors_interp): Use g_new
	rather than scm_must_malloc for temporary memory, since it's not
	subject to gc the way scm_must_malloc is meant to express, and
	negatives don't work with scm_done_malloc in Guile 1.6.4.
	gdk_property_change_list and gdk_property_change_vector were in fact
	missing scm_done_malloc, making scm_mallocated increase indefinitely.

	* gtk-compat.c (gtk_pixmap_new_interp): Remove, not currently used,
	and its operation is now done by gtk-pixmap-new-from-file.

	* gtk-compat.c (gtk_radio_menu_item_new_with_label_from_widget,
	gtk_radio_menu_item_new_from_widget): Remove, these were accepted into
	Gtk itself back in 1997.

	* gtk-support.c (kw_type, kw_flags): Use SCM_KEYWORD.
	(sym_type, sym_flags): Remove, no longer used.
	(sgtk_init_gtk_support): Remove kw_type, kw_flags initializers.
	SCM_KEYWORD protects against garbage collection, though in fact in
	Guile 1.6 keywords go permanently into an obarray anyway.

	* guile-gtk.c (sgtk_find_object_info): Comment out "Fresh info"
	printf, not wanted in normal operation.

	* gdk-pixbuf/gdk-pixbuf.defs (gdk_pixbuf_new, gdk_pixbuf_copy,
	gdk_pixbuf_new_from_file, gdk_pixbuf_add_alpha,
	gdk_pixbuf_get_from_drawable, gdk_pixbuf_scale_simple,
	gdk_pixbuf_composite_color_simple,
	gdk_pixbuf_animation_new_from_file): Add "copy #f" to return values.

2003-09-10  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.texi: New file.
	* Makefile.am (info_TEXINFOS): Add it.

2003-09-03  Kevin Ryde  <user42@zip.com.au>

	* build-guile-gtk-1.2 (rect): For c2args, emit "&foo" since rectangle
	functions normally expect a pointer.
	* gdk-support.c, guile-gtk.h (gdk_rectangle_intersect_interp,
	gdk_rectangle_union_interp): Use this.
	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_gc_set_clip_rectangle,
	gdk_region_union_with_rect, gdk_region_rect_in): No need for _interp
	any more.

	* gtk-1.2.defs (gtk_style_set_background, gtk_widget_queue_clear,
	gtk_widget_queue_clear_area, gtk_type_is_a, GTK_CHECK_TYPE): New
	functions.

	* gdk-support.c (gdk_window_new_interp): Add remaining optional
	GdkWindowAttr keyword arguments, inline fill_window_attrs, no need to
	dup and free the title string, initialize keywords and use them in
	examining the args.
	* guile-gtk.h (sgtk_gdk_colormap_info, sgtk_gdk_cursor_info): Add
	declarations.

	* guile-gtk.h, guile-gtk.c, gdk-support.c, gtk-support.c: Move various
	"extern" declarations to guile-gtk.h to get them type checked against
	the definitions in the glue files.

	* gtk-guile.c: Remove, not used since change of 2001-06-11.

2003-08-28  Kevin Ryde  <user42@zip.com.au>

	* gdk-pixbuf/gdk-pixbuf.defs (gdk_pixbuf_new_from_xpm_data_interp):
	New function.
	(includes): Add gdk-pixbuf-support.h.
	* gdk-pixbuf/gdk-pixbuf-support.c, gdk-pixbuf/gdk-pixbuf-support.h:
	New files.
	* gdk-pixbuf/Makefile.am (libguilegdkpixbuf_1_2_la_SOURCES): Add them.

	* gdk-pixbuf/gdk-pixbuf.defs (gdk_pixbuf_render_threshold_alpha,
	gdk_pixbuf_render_to_drawable, gdk_pixbuf_render_to_drawable_alpha):
	Add initcode gdk_rgb_init().

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_list_visuals): Use an
	_interp to free the returned list.

	* gdk-support.c (gdk_selection_property_get_interp): Tweak to
	initialize prop_type and prop_format unconditionally, so as not to
	depend on gdk_selection_property_get at all for this.  Use 0 for
	prop_format not given by gdk_selection_property_get.

2003-08-17  Kevin Ryde  <user42@zip.com.au>

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_event_string): Return
	#f for key.string == NULL as occurs for GDK_KEY_RELEASE, previously
	returned an empty string, but only due to a of 0 bytes from NULL.  Use
	scm_mem2string to return whole key.length, since string can contain
	'\0' bytes.

	* gdk-1.2.defs (gdk_fontset_load): Accept only a string, per C func.
	* gdk-support.c, guile-gtk.h (gdk_fontset_load_interp): Remove.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h
	(gdk_color_new_from_rgb_interp): Remove, better done directly with
	gdk-rgb-xpixel-from-rgb.

	* glade/glade.defs (glade_xml_get_widget): Must have name parameter,
	NULL is not valid.

	* gtk-1.2/gtk.scm (gtk-idle-add): Correction, use gtk-priority-default
	as per C function, not 0.

	* gdk-support.c (sgtk_init_gdk_support): Add gdk-priority-events.
	* gtk-support.c (sgtk_init_gtk_support): Add gtk-priority-redraw
	gtk-priority-resize, gtk-priority-high, gtk-priority-internal,
	gtk-priority-default, gtk-priority-low.

	* build-guile-gtk-1.2 (emit-funcs): Add "initcode" option to insert
	code at the start of a function.

2003-08-11  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2/gtk.scm (gtk-idle-add-priority): New function.
	* gtk-1.2.defs (gtk_idle_add_full): Add comment about relation to
	gtk-idle-add-priority.

	* gtk-1.2.defs (gtk_set_locale): New function.

	* gdk-pixbuf/gdk-pixbuf.defs (gdk_pixbuf_animation_ref,
	gdk_pixbuf_animation_unref): Remove, not wanted at the Scheme level.

	* gdk-pixbuf/gdk-pixbuf.defs (GdkPixbufFrame): Add comments about why
	this isn't done.

2003-08-09  Kevin Ryde  <user42@zip.com.au>

	* gdk-1.2.defs (GdkEventMask): Add GDK_PROPERTY_CHANGE_MASK,
	GDK_VISIBILITY_NOTIFY_MASK, GDK_PROXIMITY_IN_MASK,
	GDK_PROXIMITY_OUT_MASK, GDK_SUBSTRUCTURE_MASK.

	* gdk-1.2.defs (GdkColor): Add comments about gdk_color_copy and
	gdk_color_free.
	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_color_new): New.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_event_new): New.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (pixel_from_rgb_interp):
	Remove.
	* gdk-1.2.defs (gdk_rgb_xpixel_from_rgb): Add.

	* gdk-1.2.defs (gdk_font_load, gdk_fontset_load): Add comment about
	returned ref count.

	* gdk-support.c, guile-gtk.h (gdk_rgb_ditherable_interp,
	gdk_rgb_set_verbose_interp): Correction, return and param are gboolean.

	* gtk-compat.c (gtk_color_selection_set_color_interp): Don't change
	opacity, when in use.
	(gtk_color_selection_get_color_interp): Use 4 doubles to allow for
	opacity return, but ignore that value.

2003-08-05  Kevin Ryde  <user42@zip.com.au>

	* gdk-support.c (gdk_event_deviceid): Use proximity.deviceid.
	(gdk_event_source): Use proximity.source.
	(gdk_event_state): Use crossing.state.
	(gdk_event_time): Use crossing.time.

	* gdk-1.2.defs: Add comments about various unimplemented functions.

	* gdk-1.2.defs, gdk-support.c (gdk_add_client_message_filter_interp):
	Comment out, since it doesn't work in its present form.

	* gdk-1.2.defs (gdk_event_send_client_message,
	gdk_event_send_clientmessage_toall): Take GdkEvent parameters, as per
	C functions.
	* gdk-support.c, guile-gtk.h (gdk_event_send_client_message_interp,
	gdk_event_send_clientmessage_toall_interp, fill_client_message):
	Remove, no longer used.

	* gtk-compat.c (gtk_color_selection_get_color_interp): Remove comment
	about gdk_color_copy, it's the right way to create a GdkColor.

2003-07-19  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.h (gdk_window_get_id): Add prototype, for use by
	gdk-1.2.defs.

	* gdk-1.2.defs (gdk_window_get_geometry): Return multiple values per C
	function, not a rectangle.  Don't use interp.
	* gdk-support.c, guile-gtk.h: (gdk_window_get_geometry_interp):
	Remove, no longer used.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h
	(gdk_string_to_compound_text_interp): Return the status code, put text
	return in same position in values as the C function.

	* gdk-support.c (gdk_image_new_bitmap_interp): Copy data into a
	malloced block, as demanded by gdk_image_new_bitmap.

	* guile-gtk.c (sgtk_try_missing_type): Add GdkImage.

2003-07-08  Kevin Ryde  <user42@zip.com.au>

	* gtk-1.2.defs (gtk_label_new, gtk_frame_set_label): Add null-ok.

2003-07-03  Kevin Ryde  <user42@zip.com.au>

	* gtk-support.c (_sgtk_helper_toscm_copy_GtkWidget): New function.
	* gtk-support.c, guile-gtk.h (gtk_container_children_interp): New
	function.
	* gdk-1.2.defs (gtk_container_children): Use it.
	This change fixes a memory leak in gtk-container-children, the GList
	returned by gtk_container_children must be freed by the caller.

	* gdk-1.2.defs (gdk_event_get_time, gdk_event_time): Revert change by
	Marko to return sgtk_timestamp, it doesn't work for arbitrary time
	values.  Go back to returning plain uint.

	* gdk-1.2.defs (gdk_gc_copy): Remove comments about hypothetical
	create-and-copy.

	* gdk-1.2.defs (GdkEvent): Reinstate copy option gdk_event_copy, and
	describe why it's there.

2003-06-19  Kevin Ryde  <user42@zip.com.au>

	* gtk-compat.c (gtk_type_get_info): Remove, no longer used.
	* configure.ac (AC_CHECK_FUNCS): Remove gtk_type_get_info, now unused.

	* gdk-1.2.defs (gdk_color_change): Don't use _interp, take parameters
	same as the C function.
	* gdk-support.c, guile-gtk.h (gdk_color_change_interp): Remove, no
	longer used.

	* guile-gtk.c (gtk_signal_new_generic): Use gtk_marshal_NONE__NONE as
	the default marshaller, not actually right for C callbacks, but fine
	for Scheme where sgtk_callback_marshal is used explicitly.

2003-06-18  Mikael Djurfeldt  <djurfeldt@nada.kth.se>

	* gdk-1.2.defs (gdk_event_send_clientmessage_toall_interp):
	Renamed from gdk_event_send_client_message_toall_interp; Declared
	as returning no values.

	* gdk-support.c, guile-gtk.h
	(gdk_event_send_clientmessage_toall_interp): Renamed from
	gdk_event_send_client_message_toall_interp and declared as void;
	Call gdk_event_send_clientmessage_toall instead of
	gdk_event_send_client_message_toall (which doesn't exist in
	libgdk).

2003-06-17  Mikael Djurfeldt  <djurfeldt@nada.kth.se>

	* gtk-threads.c (GUILE_GTKTHREADS_UPDATE): Enable by default.  (We
	should be able to rely on the presence of the gtk-threads-update
	function which is quite necessary when using
	gtk-threads-ensure-handler.)

2003-06-15  Kevin Ryde  <user42@zip.com.au>

	* guile-gtk.c (gtk_class_new): Use gtk_type_query rather than
	gtk_type_get_info, the latter got reverted out of gtk.
	(gtk_signal_new_generic): Use sgtk_callback_marshal for marshalling.

	* gdk-1.2.defs (GdkColor): Add setters for all fields.

2003-05-31  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs, guile-gtk.h, gdk-support.c
	(gdk_property_change_interp): New.

2003-05-30  Kevin Ryde  <user42@zip.com.au>

	* gdk-1.2.defs (gdk_threads_enter, gdk_threads_leave): Add undeferred,
	since these are thread safe, and in particular enter needs other
	threads runnable to release the mutex.
	* guile-gtk.c (sgtk_init_substrate): Move sgtk_init_threads ....
	(sgtk_init_with_args): ... to here, to ensure glib threading is setup
	before gtk_init and gdk_init run.

2003-05-25  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs, guile-gtk.h, gdk-support.c
	(gdk_gc_set_clip_rectangle_interp, gdk_rectangle_intersect_interp,
	gdk_rectangle_union_interp, gdk_region_union_with_rect_interp,
	gdk_region_rect_in_interp): Changed to input GdkRectangle's
	instead of (x,y,w,h) to comply with C functions.
	* gdk-1.2.defs, guile-gtk.h, gdk-support.c
	(gdk_text_property_to_text_list_interp,
	gdk_string_to_compound_text_interp, gdk_atom_intern,
	gdk_atom_name, gdk_property_get_interp, gdk_property_delete): New.
	* gdk-support.c (gdk_selection_property_get_interp): Now uses data
	to determine the success of the C function call.
	
2003-05-17  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2 (emit-converter-if-defined): Now generates
	"x_x_intern" instead of "->XX".
	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (gdk_font_intern,
	gdk_color_intern): Removed (now they are generated).

	* gdk-1.2.defs (gdk_drag_get_selection, gdk_drag_abort,
	gdk_drop_reply, gdk_drag_context_new, gdk_drag_drop,
	gdk_drag_find_window, gdk_drag_begin, gdk_drag_motion,
	gdk_drop_finish, gdk_drag_get_protocol): New.
	* gdk-support.c (gdk_selection_property_get_interp): Corrected
	data type.

2003-05-16  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs (GdkSelectionType, GdkTarget): New (while not
	really used).
	* gdk-1.2.defs, guile-gtk.h, gdk-support.c
	(gdk_selection_owner_set, gdk_selection_owner_get, 
	gdk_selection_convert, gdk_selection_property_get_interp,
	gdk_selection_send_notify): New.

2003-05-15  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2, guile-gtk.h, guile-gtk.c, gdk-support.c:
	Backed out the mark method as well as GdkWindow user_data and
	event filters. The chosen design conflicted with GTK. There is no
	satisfactory way to implement them, but on the other hand, they
	are unlikely to be needed by GTK applications.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h (GdkEvent): Completed
	support.
	* gdk-1.2.defs (gdk_event_handler_set): Left unimplemented because
	GTK reserves the function for itself.
	* gdk-1.2.defs: turned floats to doubles

	* build-guile-gtk-1.2, guile-gtk.h, guile-gtk.c (sgtk_boxed_info):
	Added a 'mark method to be called during GC. It is needed to
	implement GdkWindow user_data and event filters.
	* gdk-1.2.defs, guile-gtk.h, gdk-support.c (GdkWindow): Completed
	support.
	* gdk-1.2.defs (GdkBitmap, GdkPixmap): Added (copy #f) options
	where I had forgotten them.

2003-05-13  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2, gdk-1.2.defs: Backed the 'physical option
	out -- the idea is not feasible.

2003-05-13  Mikael Djurfeldt  <mdj@kvast.blakulla.net>

	* build-guile-gtk-1.2 (emit-func): Bugfix: Changed
	scm_error_num_args --> scm_error_num_args_subr.

2003-05-12  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2 (require-copier): New.
	* build-guile-gtk-1.2 (register-boxed-converter): Added
	'uncopiable type property.
	* gdk-1.2.defs (boxed types): Reinserted copy methods where
	needed.
	* gdk-1.2.defs (boxed types): Specified (copy #f) where needed and
	simplified copying semantics.
	* gdk-1.2.defs, gdk-support.c, guile-gtk.h
	(gdk_color_new_from_rgb_interp): Renamed this nonstandard function
	from gdk_color_new_interp.
	* gdk-support.c (gdk_color_white_interp, gdk_color_black_interp):
	Copy local color variable before returning.
	
	* guile-gtk.h, guile-gtk.c (xmalloc, xrealloc): Make static again.
	* gdk-support.c (gdk_wcstombs_interp): Rely on null-termination.
	* gdk-support.c (gdk_mbstowcs_interp,
	gdk_colormap_alloc_colors_interp): Use scm_must_malloc instead of
	xmalloc.
	* buile-guile-gtk-1.2 (emit-destructor-if-physical,
	emit-converter-if-defined): Weren't called for ptypes. Fixed.

2003-05-12  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2 (emit-converter-if-defined): New.
	* gdk-1.2.defs (gdk_font_intern, gdk_color_intern): Updated
	deprecation comment.

2003-05-11  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2 (char): The scheme type is now 'character'
	instead of 'number'.

2003-05-11  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs (GdkColormap, GdkFont): declared physical.

	* build-guile-gtk-1.2 (scm-name): Allow symbol as value.

2003-05-12  Kevin Ryde  <user42@zip.com.au>

	* gtk-support.c (sgtk_init_gtk_support): Add gtk_major_version,
	gtk_minor_version, gtk_micro_version, gtk_binary_age,
	gtk_interface_age.
	* gtk-1.2/gtk.scm (gtk-major-version, gtk-minor-version): Remove.
	* gtk-1.2.defs (gtk_check_version): New function.

2003-05-09  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2: The defs files didn't specify destructors.
	  Instead, the garbage collector was trusted to release resources.
	  This is the right strategy as long as the resource is a piece of
	  client RAM. However, we must release X server resources as soon
	  as they are no longer needed.

	  I have now introduced a new option for define-boxed and
	  define-struct: (physical #t). When set, the function specified
	  in the free option becomes callable from guile code. The proxy
	  object stays alive, but any reference to it causes an assertion
	  to fail.

	* gdk-1.2.defs: As a first application of destructors, I added the
	  (physical #t) option to GdkCursor.

2003-05-09  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h: Declared text as SCM
	  instead of string (as was previously done in gdk_draw_text_scm).
	  That is necessary because text may well contain nonterminating
	  zero bytes.

	* This part of the GDK spec seems a bit confused. Several
	  functions come in four variants: char, string, text and text_wc.
	  However, not all combinations are specified (or implemented).
	  So, for example, there is no gdk_text_wc_height.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h: I allow the fontset
	  name to be either a string or a list of strings, which are
	  joined with commas. The strings themselves may contain commas.

	* gdk-support.c: Fixed an earlier bug. I used scm_list_p instead
	  of SCM_CONSP and SCM_NULLP.

2003-05-08  Marko Rauhamaa  <marko@pacujo.net>

	* build-guile-gtk-1.2, guile-gtk.c: GDK and GTK differ in the
	  reference count policy. While GTK returns the widgets with a
	  reference count 0, GDK returns them with a reference count 1.
	  That means that gdk-1.2.defs should not increment the reference
	  count -- but it was doing that.

	  It turns out that the different GDK types don't need a copy
	  option (= "method") at all whether they have reference counts or
	  not. I made the copy option optional (previously the omission of
	  the copy option caused a runtime crash).

	* gdk-1.2.defs: Added GdkFontType. Added it to GdkFont.

	* gdk-1.2.defs: Moved GdkFillRule among other enums.

	* gdk-1.2.defs: Removed copy options (previously: gdk_..._ref,
	  gtk_no_copy, gtk_fake_copy, gdk_..._copy).

	* gdk-1.2.defs: Removed now redundant (copy #f) options from
	  return values.

	* gdk-1.2.defs: Removed redundant conversion option from GdkFont.

	* gdk-1.2.defs: Changed GdkWChar from uint to uint32 (since it is
	  now available).

	* gdk-1.2.defs: Removed useless size options -- but left it with
	  gtimer, since define-struct still requires a dummy size.

	* gdk-1.2.defs: Indicated that gdk_font_intern and
	  gdk_color_intern are now deprecated. (I don't think anybody used
	  them anyway.)

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h: Changed the signature
	  of pixel-from-rgb from (visual red green blue) to (visual rgb)
	  for consistency's sake.

	* gdk-support.c, gtk-compat.c: Now that copying is no longer done,
	  needed to explicitly copy the return values of gdk-color-new,
	  gdk-color-parse and gtk-style-get-white.

	* gdk-support.c, guile-gtk.h: Removed sgtk_gdk_drag_context_ref as
	  no longer needed.

2003-05-08  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs: Specified the fields of GdkVisual.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h: Implemented the
	  auxiliary function pixel-from-rgb presented in the GDK
	  documentation.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h: Added the visual
	  functions.

2003-05-08  Marko Rauhamaa  <marko@pacujo.net>

	* Completed colormap and color support. Functions marked as
	  obsolete by the GDK spec haven't been implemented.

2003-05-06  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs: Decided not to implement the function
	  gdk_rgb_xpixel_from_rgb since it would have no use in scheme
	  code. Instead, I implemented (gdk-color-new rgb), which calls
	  gdk_rgb_xpixel_from_rgb to create a new GdkColor. Gdk-color-new
	  has no C equivalent.

	* gdk-1.2.defs: Made the "pixel" field of GdkColor accessible to
	  scheme code.

	* gdk-1.2.defs, guile-gtk.h, gdk-support.c: Implemented GdkRgbCmap
	  and the remaining RGB functions.

	* All RGB functions make sure gdk_rgb_init gets called. The
	  redundant function gdk-rgb-init is still accessible from scheme
	  code, though.

2003-05-06  Marko Rauhamaa  <marko@pacujo.net>

	* gdk-1.2.defs, guile-gtk.h, gdk-support.c: Added
	  gdk-bitmap-create-from-data, gdk-pixmap-create-from-data,
	  gdk-pixmap-create-from-xpm-d,
	  gdk-pixmap-colormap-create-from-xpm-d.

	* gdk-1.2.defs: Corrected gdk_pixmap_create_from_xpm: window is
	  mandatory.

	* guile-gtk.c: Now cvec composite types add zero termination to C
	  vectors (input parameters only).

2003-05-06  Marko Rauhamaa  <marko@pacujo.net>

	* The changes compile. No testing has been carried out yet.

	* build-guile-gtk-1.2: Added yet another builtin integer type:
	  uint32. Since the integer and unsigned types are registered
	  almost identically, I introduced register-integer-type and
	  register-unsigned-type for the job.

	* gdk-1.2.defs: Removed redundant conversion option for GdkColor.

	* gdk-1.2.defs, gdk-support.c, guile-gtk.h: Added GdkImage and the
	  related functions.

	* gdk-1.2.defs: Removed gdk_region_destroy, which I accidentally
	  introduced in the previous commit. (The GC should be let to deal
	  with client memory resources.)

2003-05-05  Mikael Djurfeldt  <djurfeldt@nada.kth.se>

	* gtk-threads.c: Support new thread macros (SCM_PTHREAD_THREADS et
	al).

	* gdk-support.c (gdk_mbstowcs_scm, gdk_gc_get_values_scm): Changed
	long2num and sgtk_long2num into scm_long2num.

2003-05-01  Marko Rauhamaa  <marko@pacujo.net>

	* The new code is mainly additional functionality. It compiles but
	  I haven't run any of the code yet.

	* build-guile-gtk-1.2: Added a new predefined type 'char for
	  gdk_gc_set_dashes.

	* build-guile-gtk-1.2 and guile-gtk.[ch]: Added a new predefined
	  type 'segment for gdk_draw_segments.

	* gdk-1.2.defs: Chose not to implement these functions:

	  + gdk_init, gdk_init_check, gdk_exit (because gtk+ calls them
	    automatically)

	  + gdk_set_sm_client_id (because I don't understand it yet)

	  + gdk_get_use_xshm, gdk_set_use_xshm (because they are unlikely
	    to be of concern to guile applications)

	  + gdk_gc_new_with_values (because the individual field setters
	    and gdk_gc_new are fully sufficient and convenient).

	* gdk-1.2.defs and guile-gtk.h: Added a new auxiliary data type
	  sgtk_timestamp, which is typedef'ed from guint32; that way
	  'current-time can be specified symbolically in scheme code.

	* gdk-1.2.defs: Removed GdkGCValuesMask. It was never used and, I
	  think, will not be needed (see also gdk_gc_get_values below).

	* gdk-1.2.defs: Defined an alias GdkWChar for uint for
	  gdk_draw_text_wc. (I trust uint to correspond to guint32 because
	  currently there is no alternative.)

	* gdk-1.2.defs: Added the types GdkFillRule and GdkRegion for
	  GDK's region routines.

	* gdk-1.2.defs: Added the functions gdk_gc_copy,
	  gdk_gc_set_dashes, gdk_rectangle_intersect, gdk_rectangle_union,
	  gdk_region_new, gdk_region_polygon, gdk_region_destroy,
	  gdk_regions_intersect, gdk_regions_union, gdk_regions_subtract,
	  gdk_regions_xor, gdk_region_union_with_rect, gdk_region_offset,
	  gdk_region_shrink, gdk_region_empty, gdk_region_equal,
	  gdk_region_point_in, gdk_region_rect_in, gdk_region_get_clipbox,
	  gdk_draw_segments, gdk_draw_text_wc, gdk_wcstombs, gdk_mbstowcs,
	  gdk_get_display, gdk_pointer_grab, gdk_pointer_ungrab,
	  gdk_pointer_is_grabbed, gdk_keyboard_grab, gdk_keyboard_ungrab,
	  gdk_key_repeat_disable, gdk_key_repeat_restore,
	  gdk_error_trap_push, gdk_error_trap_pop.

	* gdk-1.2.defs: Added the function gdk_gc_get_values. Instead of
	  GdkGCValuesMask, it returns a list with the GC values as
	  elements.
	  (See also gdk_gc_get_values_scm below.)

	* gdk-support.c and guile-gtk.h: Added extra glue code for
	  gdk_wcstombs_scm, gdk_mbstowcs_scm, gdk_rectangle_intersect_scm,
	  gdk_rectangle_union_scm, gdk_region_union_with_rect_scm,
	  gdk_region_rect_in_scm, gdk_region_get_clipbox_scm. (Note how
	  much manual coding is still necessary!)

	* gdk-support.c and guile-gtk.h: Added also the extra glue
	  function gdk_gc_get_values_scm. Had to resort to direct extern
	  references to gdk-glue.c:

	  extern sgtk_boxed_info sgtk_gdk_color_info, sgtk_gdk_font_info,
	    sgtk_gdk_window_info;

	  extern sgtk_enum_info sgtk_gdk_function_info, sgtk_gdk_fill_info,
	    sgtk_gdk_subwindow_mode_info, sgtk_gdk_line_style_info,
	    sgtk_gdk_cap_style_info, sgtk_gdk_join_style_info;

	  There should maybe be a cleaner way to refer to entities defined
	  in gdk-1.2.defs.

	* guile-gtk.[ch]: Made xmalloc and xrealloc non-static so I could use
	  xmalloc in gdk_wcstombs_scm and gdk_mbstowcs_scm.

	* guile-gtk.h: Removed duplicate declarations of gtk_style_fg_gc
	  and gtk_style_bg_gc.

2003-04-19  Marius Vollmer  <mvo@zagadka.de>

	* gdk-support.c (gdk_gc_set_clip_rectangle_scm): New.
	* guile-gtk.h (gdk_gc_set_clip_rectangle_scm): New prototype.
	* gdk-1.2.defs (gdk_gc_set_clip_rectangle_scm): New.

2003-04-18  Marius Vollmer  <mvo@zagadka.de>

	* Makefile.am (libguilegtk_1_2_la_SOURCES): Added gdk-support.c.
	(BUILT_SOURCES, CLEANFILES): Added gdk-support.x.

	* gdk-support.c: New file.  Moved all gdk support functions from
	gtk-support.c to here.
	(sgtk_init_gdk_support): New.
	(fill_window_attrs, free_window_attrs, gdk_window_new_scm): New.

	* gtk-support.c: Moved all gdk support functions over to gdk-support.c.

	* guile-gtk.h (gdk_window_new_scm): New prototype.

	* gdk-1.2.defs: Specify sgtk_init_gdk_support as extra-init-code.
	(gdk_window_new_scm, gdk_window_destroy, gdk_window_show,
	gdk_window_hide, gdk_window_withdraw, gdk_events_pending,
	gdk_event_get, gdk_event_peek, gdk_event_get_graphics_expose,
	gdk_event_put, gdk_set_show_events): New.
	
2003-03-30  Daniel Skarda  <0rfelyus@ucw.cz>

	* gtk-1.2.defs (GtkStyle): Add font field.
	(GtkTreeItem): Add subtree field.
	(gtk_accelerator_name): New function.
	
	* gdk-1.2.defs (gdk_screen_width, gdk_screen_height,
	gdk_screen_width_mm, gdk_screen_height_mm, gdk_string_height,
	gdk_keyval_name, gdk_keyval_from_name, gdk_keyval_to_upper,
	gdk_keyval_to_lower, gdk_keyval_is_upper, gdk_keyval_is_lower):
	New functions.

	Thanks to Kevin Ryde for patch.

     Reduce number of compiler warnings a little bit.
	
	* guile-gtk.c (sgtk_arg_cleanup): Add break statement after default.

	* guile-gtk.h (sgtk_boxed_info::cleanup): (SCM*) -> (SCM).
	(gtk_object_query_args_scm): New prototpe.
	
	* build-guile-gtk-1.2 (static_string): "char*" -> "const char*"

	* gtk-gl/gtk-gl-area.defs: Include gdk-gl-support.h 

	* gtk-support.c (gtk_widget_allocation_*_scm): Removed
	* gtk-support.c (gtk_widget_allocation_*_scm): Removed
	* gtk-1.2.defs (gtk_widget_allocation_*_scm): Removed.
	Functions are already generated by GtkWidget fields.

	* gtk-gl/gdk-gl.defs (gdk_gl_wait_gdk, sgtk_gl_wait_gl): Fixed
	typo in func name.

	* gtk-support.c: Include string.h (because of strncpy and strlen)

     Clean up.

	* examples/calc.scm: Use guile isntead of guile-gtk.

	* examples/metaspline.scm: New starting boilerplate (use guile,  not
	/usr/local/bin/guile-gtk) 
	
2003-03-16  Daniel Skarda  <0rfelyus@ucw.cz>

	* guile-gtk.c (sgtk_flags2scm): Fix the all-*-mask bug.

        * gtk-1.2.defs (gtk_main_iteration, gtk_main_iteration_do, gtk_true,
        gtk_false, gtk_events_pending): Make returns #t/#f.

	Thanks to Kevin Ryde for patch and bug reports.
	
2003-01-22  Daniel Skarda  <0rfelyus@ucw.cz>
	
	* gdk-1.2.defs (GdkFont): Add ascent and descent fields.
	(gdk_window_get_events, gdk_window_at_pointer, gdk_window_get_pointer,
	gdk_window_raise, gdk_window_set_background,
	gdk_window_set_back_pixmap, gdk_window_set_events): New functions.
	
	* gtk-1.2.defs (GtkTreeItem): Add expanded field
        (GtkMenuItem): Add submenu field.
        (gtk_window_add_accel_group, gtk_window_remove_accel_group,
        gtk_toggle_button_get_active): New functions.

	Thanks to Kevin Ryde for patches for both .defs files

    Deprecation:

	* configure.ac: Check for scm_c_issue_deprecated_warning and
	libguile/deprecated.h 

	* build-guile-gtk-1.2 (emit-func) Implement "deprecated" feature.

	* guile-gtk.h (sgtk_issue_deprecation_warning): New function.
	* guile-gtk.c (sgtk_issue_deprecation_warning): New function.
	
    Misc:

	* guile-gtk-aclocal.sh: Look for aclocal-1.5 as well.

	* gtk-1.2.defs (gtk_toggle_button_set_state): Deprecated.
	(gtk_toggle_button_set_active): New function.
	
	* build-guile-gtk-1.2 (emit-field-accessors): Removed exclamation
	mark from setters (exclamation marks have not been used at all so
	it would be confusing to have both *-set-foo and *-set-bar!
	functions) 
	
2003-01-03  Daniel Skarda  <0rfelyus@ucw.cz>

        * gtk-1.2.defs (GtkAdjustment): Add setters for the fields.	
	Thanks to Kevin Ryde.

2002-12-19  Marius Vollmer  <mvo@zagadka.ping.de>

	* examples/continuations.scm (event-loop): Treat return value of
	gtk-main-iteration differently (hopefully correctly).

2002-12-18  Mikael Djurfeldt  <mdj@kvast.blakulla.net>

	* gtk-threads.c (g_thread_functions): Renamed from
	g_guile_thread_functions_for_glib.
	(sgtk_init_threads): Initialize some fields of g_thread_functions
	dynamically.

2002-12-09  Mikael Djurfeldt  <djurfeldt@nada.kth.se>

	* configure.ac (SCM_MUTEX_INIT_TWO_ARGS): Define if scm_mutex_init
	takes two arguments.

	* gtk-threads.c; Test for pthreads.
	(g_mutex_new_guile_impl): Call scm_mutex_init with correct number
	of arguments.

2002-12-07  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.2.defs (GtkEntry): Added text_area field.
	(GtkText): Likewise. 

	* gdk-1.2.defs (GtkCursor): Fill in.
	(GdkCursor, gdk_cursor_new, gdk_cursor_new_from_pixmap,
	gdk_window_set_cursor): New.
	
2002-11-28  Daniel Skarda  <0rfelyus@ucw.cz>

	* guile-gtk.c (sgtk_arg_cleanup): Check for boxed type (obj can
	be #f - NULL)

2002-11-24  Daniel Skarda  <0rfelyus@ucw.cz>

	* configure.ac: AC_INIT parameter fix.

2002-11-22  Daniel Skarda  <0rfelyus@ucw.cz>

      GtkSelectionData fix:
	
	* guile-gtk.h (sgtk_boxed_info): Added cleanup slot.

	* guile-gtk.c (sgtk_valid_boxed): Check for BOXED_PTR != NULL
	(sgtk_boxed_invalidate): New function (NULLification :o).
	(boxed_print): Print info about invalidation.
	(sgtk_arg_cleanup): New function.
	(inner_callback_marshal): Clean up arguments.
	
	* build-guile-gtk-1.2 (emit-boxed-info, emit-struct-info): Support
	for cleanup parameter in define-struct and define-boxed. Cleanup
	method is called from 

	* gtk-1.2.defs (GtkSelectionData): Use sgtk_boxed_invalidate.
	
      Misc:

	* ChangeLog: Fix missing entries from 2002-11-07 (Wow,
	self-referencing ChangeLog :)

	* autogen.sh: Use guile-gtk-aclocal.sh instead of aclocal

	* guile-gtk-aclocal.sh: Another desperate change: prefer aclocal
	over -1.6 and -1.7 suffixes (we should respect users setting of
	alternatives).

	* configure.in -=> configure.ac: Use Autoconf 2.5x naming
	convention (configure.in used autoconf 2.5x macros anyway).
	Force Autoconf 2.5x.
	
2002-11-17  Mikael Djurfeldt  <mdj@linnaeus>

	* configure.in (HAVE_SCM_T_BITS): Provide 3 args to AC_DEFINE.

2002-11-17  Marius Vollmer  <mvo@zagadka.ping.de>

	* Makefile.am (install-exec-local): Prefix filenames with
	$(DESTDIR).  Thanks to Stanislav Brabec!

2002-11-15  Mikael Djurfeldt  <mdj@linnaeus>

	* guile-gtk-aclocal.sh: Prefer aclocal-1.7 above aclocal-1.6.

	Fixes for separate build-tree:

	* Makefile.am (ACLOCAL): Replaced $(top_srcdir) --> .

	* configure.in: Added output for gtk/config.scm.

	* build-guile-gtk-1.2 (read-file): Load scheme code from
	import-path instead of using load-from-path.

	* gdk-pixbuf/Makefile.am, glade/Makefile.am, gtk-gl/Makefile.am
	(BUILD): Look for config.scm in	top_builddir instead of top_srcdir.
	(*-glue.c): Added -I $(srcdir) to build rule.

	These changes adds coop-pthreads support:

	* gtk-threads.c: Updated copyright notice with 2002.
	(g_mutex_trylock_guile_impl): Use scm_mutex_trylock instead of
	coop_mutex_trylock.
	(struct spawn_data::thread): Removed.
	(spawn): Don't initialize data member thread.
	(g_thread_create_guile_impl): Use the SCM handle as new
	representation for the thread.
	(g_thread_join_guile_impl, g_thread_self_guile_impl): Support both
	coop and coop-pthreads.
	(struct g_guile_thread_functions_for_glib): Use scm_yield instead
	of coop_yield; only supply coop_abort with coop threads.

	These changes adapt guile-gtk to guile-1.6 while maintaining
	backward compatibility:

	* Makefile.am (EXTRA_DIST): Added compat.h

	* gtk-support.c: #include "compat.h"

	* guile-gtk.c (sgtk_scm2senum, sgtk_scm2arg, sgtk_scm2ret,
	sgtk_color_conversion, sgtk_font_conversion,
	sgtk_string_conversion): Use SCM_STRING_COERCE_0TERMINATION.
	(Should be here for backward compatibility, no?)

	* build-guile-gtk-1.2 (emit-glue, emit-main): Emit #include
	"config.h" and #include "compat.h".

2002-11-07  Marius Vollmer  <mvo@zagadka.ping.de>

	* examples/test-glade.scm: Use the (gtk-1.2 ...) modules, not the
	(gtk ...) ones.

	* autogen.sh: Do not use Gnome stuff, do it straight.

2002-11-07  Daniel Skarda  <0rfelyus@ucw.cz>

      Better aclocal support:

	* guile-gtk-aclocal.sh: New file (use it instead of aclocal)

	* macros/*.m4: New files (for guile-gtk bootstrapping, when you do
	not have installed *-dev files).

	* Makefile.am (ACLOCAL): Use guile-gtk-aclocal.sh
	
2002-11-07  Daniel Skarda  <0rfelyus@ucw.cz>

      Misc:
	
	* build-guile-gtk-1.2 (GtkTargetEntry,raw-rata-r): Added new types
	for Dnd bindings.
	(defined-name): Added support for canonical-nmae option - types in
	gtk-gl-area have strange (GL) names.
	
	* gtk-support.c (gtk_fake_copy): New funciton (replace g_timer_fake_copy).

	* guile-gtk.h: Update.
	(sgtk_raw): New type.

	* guile-gtk.c (sgtk_scm2cvec): '() should be converted to res.vec = NULL
	(sgtk_raw_finish, sgtk_scm2raw): New function to support raw-type.

	* gtk-1.2.defs (gtk_widget_queue_draw, gtk_widget_queue_draw_area): New
	functions. 

	* configure.in: Test for GdkPixbuf, libGlade and GtkGLArea.
	Bumped version to 0.40.	
	
      GdkPixbuf:

	* build-guile-gtk-1: Support for functions with too much arguments
	- the number of required arguments guile can pass to C funciton is
	limited.

	* gdk-1.2.defs (GdkRgbDither): New enum.

	* gdk-pixbuf/gdk-pixbuf.defs, gdk-pixbuf.scm: New files. Improved
	version of gdk-pixbuf bindings from gnome-guile.
	
      Drag'n'Drop:

	* gdk-1.2.defs (GdkDragAction,GdkDragprotocol,GdkDragContext): New types.
	(gdk_event_(selection|target|requestor|drag_context): New accessors.
	(gdk_rag_status): New function.

	* gtk-1.2.defs (GtkDestDefaults, GtkSelectionData): New types.
	(gtk_drag_*): 15 new complete dnd funciton bindings.
	(gtk_selection_*): New function bindings.
	
	* guile-gtk.c (sgtk_scm2gtk_target_entry): New function, convert
	list to GtkTargetEntry.

	* gtk-support.c (gdk_event_(time|x_root|y_root): support DND events.
	(gdk_event_(selection|target|property|requestor|drag_context): New helpers.
	(gdk_drag_context_(ref|targets): GdkDragContext helpers.
	(gtk_selection_data_data): GtkSelectionData helper.

      Pixmaps:
	
	* gtk-1.2/gtk.scm (gtk-pixmap-new-from-file): New helper funciton.

	* gdk-1.2.defs (GdkPixmap,GdkBitmap,GdkDrawable): New alises.
	(gdk_gc_*): Uncommented gc functions, use GdkPixmap (GdkBitmap) type.
	(gdk_pixmap_colormap_create_from_xpm): New function.

	* gtk-1.2.defs (gtk_pixmap_new): corresponds to C function
	(gtk_pixmap_get): New function.

     libGlade bidnings:
       
	* glade/glade.defs, glade.scm: New files. Improved version of
	libglade bindings from gnome-guile.

	* glade/glade-support.c, glade/glade-support.h: New files.
	
      GtkGLArea bindings:

	* gtk-gl/gdk-gl-support.c, gdk-gl-support.h: New files.

	* gtk-gl/gdk-gl-types.scm: New file.
	
	* gtk-gl/gdk-gl.defs: New file - gdk-gl bindings

	* gtk-gl/gtk-gl-area.defs: New file - GtkGLArea bidnings.

	* gtk-gl/gtk-gl-area.scm, gdk-gl.scm: New files. 
	
      Examples:

	* examples/test-dnd.scm, examples/*.xpm: New files.

	* examples/run-glade.scm, examples/test-glade.scm, 
	examples/*.glade: New files.
	
	* examples/test-gtk.scm (create-pixmap): GtkPixmap update.

	* examples/Makefile.am: Add new files to noinst_DATA
	(noinst_DATA): Added missing test.xpm (fixie).
	
2002-11-06  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk.defs (gdk_event_area): Commented in.

2002-10-19  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (gtkobj_free): Do not move the proxy itself to the
	global lists of protshells.

2002-09-02  Marius Vollmer  <mvo@zagadka.ping.de>

	Released guile-gtk-1.2-0.31

	* linktest.c, Makefile.am (check_PROGRAMS, linktest_SOURCES,
	linktest_LDADD): New, to test for unresolved link-time references.

	* configure.in: Bumped version to 0.31. 

	* guile-gtk.c (SCM_VECTOR_REF, SCM_VECTOR_SET): Define when not
	already defined.
	(sgtk_list_finish): Fix typo.

2002-09-01  Marius Vollmer  <mvo@zagadka.ping.de>

	Released guile-gtk-1.2-0.30.

2002-09-01  Marius Vollmer  <mvo@zagadka.ping.de>

	* examples/foo/Makefile.am (BUILT_SOURCES): Removed main.c.

	* examples/foo/test-foo.scm: Use (gtk-1.2 ...) modules, not the
	(gtk ...) ones.

	* examples/foo/foo.scm: Do not use merge-compiled-code, use
	load-extension and export.

	* examples/foo/configure.in: Use build-guile-gtk-1.2 instead of
	build-guile-gtk.

	* examples/foo/Makefile.am: Removed guile-foo target.  Renamed
	library to libguile-gtk-foo.la.
	* examples/foo/foo.defs: Updated for new library name.

	* gtk/Makefile.am (EXTRA_DIST): Distribute config.scm instead of
	config.scm.in.

	* gtk-1.2/config.scm.in: Replaced uses of myprefix with prefix.
	Likewise for exec_prefix.  Hardcode gtkconf-version and
	gtkconf-guilegtk-lib.

	* examples/foo/configure.in: Removed Gnome cruft.  Renamed package
	to foo-example.

	* configure.in (myprefix, myexec_prefix): Removed. 

	* Makefile.am: Include "." in INCLUDES for vpath builds.

	* build-guile-gtk, build-guile-gtk-1.2: Use (gtk-1.2 config)
	instead of (gtk config).  Renamed.
	* Makefile.am: Updated for above renaming.
	(install-exec-local): New, to install build-guile-gtk alias and
	remove guile-gtk.
	
	* examples/foo.*: Moved into foo/ subdirectory.

2002-08-27  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c: Do not use SCM_DEFER_INTS and SCM_ALLOW_INTS.  Do
	not use SCM_LIST2 and SCM_LIST1.

	* gtk-1.2/config.scm.in: Use (gtk-1.2 config) as the module name.

	* guile-gtk.c: Don't use scm_cell, scm_malloc, etc yet.  Use less
	gh_ functions.

	* Makefile.am (BUILD): Use gtk-1.2/config.scm.

	* configure.in: Generate gtk-1.2/config.scm.

	* gtk-1.2/Makefile.am: Distribute config.scm.in.  Install with
	gtk-1.2 prefix.

	* guile-gtk.c: Don't deal with absent Guile features, they are
	supposed to be there.

	* Makefile.am: Removed support for 1.3 version.  Defer to
	Makefiles in subdirs instead of doing all the work here.

	* configure.in: Changed package name to "guile-gtk-1.2".  Gnome
	specific bits.  Use GUILE_FLAGS instead of GUILE_CHECK_GNOME.
	Request gthread module for Gtk.  Don't check for Guile functions,
	they are supposed to be there.

	* guile-compat.c: Hurray!  Empty!

	* examples/Makefile.am: Added a proper Makefile for the example
	dir.

	* gtk-1.2/, gtk/: Renamed (gtk ...) modules to (gtk-1.2 ...) and
	provided aliases for the old names.

2002-08-23  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c, gtk-support.c, build-guile-gtk: Avoid deprecated
	features of Guile.

	* Makefile.am (snarfing): Move input file to start of arguments.
	this is needed due to a bug in guile-snarf.

2002-08-23  Marius Vollmer  <mvo@zagadka.ping.de>

	Started branch that will lead to a simplified guile-gtk-1.2
	package.

2002-01-04  Ariel Rios  <ariel@gnu.org>

	* configure.in: Bump version number to 0.21pre4

2001-11-21  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk/repl.scm (gtk-repl): Do not use `define-module' on
	non-toplevel.

2001-08-21  Ariel Rios  <ariel@gnu.org>

	* gtk/config.scm.in: Change the value of gtkconf-gtk-2-0.

2001-08-21  Ariel Rios  <ariel@gnu.org>	

	* configure.in: Comment PKG-CONFIG stuff for now

2001-08-21  Ariel Rios  <ariel@linuxppc.org>

	* configure.in : Check for Guile 1.5 or newer.

2001-08-16  Jens Finke <jens@gnome.org>
	
	* Makefile.am (install-data-local): Added DESTDIR variable to path.

2001-07-24  Seth Alves  <alves@hungry.com>

	* build-guile-gtk (emit-funcs): Use the string "set" instead
	of the symbol 'set when creating the field setter's name.
	Fix some small problems in the argument list of emit-func
	when outputting a setter.  Using (setter #t) as a field
	argument in an object definition should work again.

2001-06-29  Seth Alves  <alves@hungry.com>

	* gtk-threads.c: track the change of variable names in guile.
	scm_whatever_t became scm_t_whatever .

	* build-guile-gtk (emit-struct-info): output sizeof statement
	without quotes so the compiler sees it as an int rather than a string

2001-06-11  Ariel Rios  <ariel@linuxppc.org>

	* Makefile.am : We no longer build guile-gtk since 
	dynamic linking works correctly and the need of a
	static binary is no longer required

2001-06-07  Ariel Rios  <ariel@linuxppc.org>

	* Makefile.am (.c.x): Make the snarfer do the right thing.
	We were using the snarfer in a hacky way that stopped
	working with recent guile changes

2001-06-04  Marius Vollmer  <marius.vollmer@uni-dortmund.de>

	* build-guile-gtk: Use `string-append*' instead of `string-append'
	in various appropriate places.

2001-06-05  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk/dynlink.scm (merge-compiled-code): Use `load-extension'
	instead of `dynamic-link' and `dynamic-call'.

	* guile-gtk.c (GTKOBJP, GTKOBJ_PROXY, GTKTYPEP, GTKTYPE): Use
	SCM_SMOB_PREDICATE and SCM_SMOB_DATA for added abstracness.
	(sgtk_register_glue): Use `scm_c_register_extension' instead of
	the `scm_register_module_xxx' magic.
	(sgtk_flags_comp): Use SCM_UNPACK so that integral types are
	subtracted, not pointers.
	(sgtk_enum_flags_init): Use scm_gc_protect_object instead of
	scm_protect_object.
	(sgtk_cvec2scm): Big fix: use scm_c_make_vector instead of
	scm_make_vector.

	* guile-gtk.h (gdk_window_get_size_scm,
	gdk_window_get_origin_scm): Add prototypes.

	* gtk-1.2.defs, gtk-1.3.defs, gdk-1.2.defs, gdk-1.3.defs
	(options): Remove `other-inits'.

	* build-guile-gtk (emit-glue): Do not emit code for registering
	the `other-inits'.  This was not needed for quite some time.

2001-06-04  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_enum_flags_init, sgtk_senum2scm,
	sgtk_atom2scm): Use scm_str2symbol instead of scm_intern0 or
	scm_intern.  (The `intern' functions are going away soon.)

2001-05-30  Ariel Rios  <ariel@linuxppc.org>

	* wrap-guile-gtk (define-gmodule): Do the right thing (TM)

2001-05-29  Ariel Rios  <ariel@linuxppc.org>

	* wrap-guile-gtk (define-gmodule): Creates string that define a module
	(define-type): Created new types.
	(define-interface): Creates new interfaces
	(enum-do-let): Creates enumerations
	(enum-do-let): Format an enumeration value
	(enum-do-values): Maps the previous functions
	(in-module): Helper function
	(c-name): Ditto
	(values): Ditto

2001-05-22  Ariel Rios  <ariel@linuxppc.org>

	* configure.in : We no longer presume that guile is installed in some "common" place 
	(which is not always true for CVS versions of guile :-) and does not utilize GUILE_INCS
	variable.... Thanks to Dan Skarda  <0rfelyus@atrey.karlin.mff.cuni.cz>

2001-05-20  Ariel Rios  <ariel@linuxppc.org>

	* guile-gtk.c (sgtk_shell):  Use scm_current_module instead of the root_module
	which is now deprecated in guile.

2001-05-20  Ariel Rios  <ariel@linuxppc.org>

	* guiledlopenhelper.c (sgtk_dlopenhelper_init): Use scm_c_define_gsubr instead of
	scm_c_make_gsubr

	* build-guile-gtk (emit-funcs): Ditto.
	
2001-05-20  Ariel Rios  <ariel@linuxppc.org>

	* guiledlopenhelper.c (sgtk_dlopenhelper_init): Use scm_c_make_gsubr instead of
	deprecated scm_make_gsubr

	* build-guile-gtk (emit-funcs): Ditto.

2001-04-28  Ariel Rios  <ariel@linuxppc.org>

	* build-guile-gtk (emit-funcs): Second arg of scm_num2long is now
	a lovely long and not a char *.
	(emit-funcs): Ditto for scm_num2ulong
	(emit-funcs): Use identity instead of deprecated id.
	(type-c2args): Ditto.

	* guile-gtk.c (sgtk_scm2enum): Second arg of scm_num2long is now a
	lovely long and not a char *.
	(sgtk_scm2flags): Ditto
	(sgtk_scm2arg): Ditto
	(sgtk_scm2ret): Ditto

2001-04-28  Ariel Rios  <ariel@linuxppc.org>

	* gtk/repl.scm (make-event-repl): Use new two argument version of eval

	* gtk/event-repl.scm (make-event-repl): Ditto

2001-04-28  Ariel Rios  <ariel@linuxppc.org>	

	* guile-gtk.c (make_argv): Use !SCM_STRINGP instead of
	deprecated SCM_NSTRINGP

	* gtk-1.2.defs (includes): Include gtk headers from gtk-1.2 as required
	by gtk 1.2.10

	* guile-gtk.c: Ditto

	* gtk-support.c: Ditto

	* gtk-compat.c: Ditto

	* configure.in: Require gtk 1.2.10

2001-04-16  Ariel Rios  <ariel@linuxppc.org>

	* configure.in: Bump to version 0.21

2001-04-13  Ariel Rios  <ariel@linuxppc.org>

	* gtk-1.2.defs (GtkToolbarSpaceStyle): New enum
	(gtk_toolbar_set_space_style): Small nit

2001-04-04  Ariel Rios  <ariel@arcavia.com>

	* gtk-1.2.defs, gtk.defs: gtk_toolbar_set_space_style, 
	gtk_toolbar_get_button_relief, gtk_toolbar_set_tooltips: NEW 
	(GtkReliefStyle): New enum

2001-04-03  Ariel Rios  <ariel@linuxppc.org>

	* guile-gtk.c: Include stdio.h. It caused problems
	in some platforms.

2001-03-31  Martin Baulig  <baulig@suse.de>

	* acinclude.m4 (AM_MY_PATH_GTK): Include contents of gtk.m4 here
	and call the macro AM_MY_PATH_GTK.

	* configure.in: Use AM_MY_PATH_GTK instead of AM_PATH_GTK.

2001-02-25  Ariel Rios  <ariel@arcavia.com>

	* Makefile.am (EXTRA_DIST): Include the .defs translation
	in the distribution.

2001-02-04  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs, gdk-1.3.defs, gtk-support.c
	(gdk_window_get_origin_scm): Added, to go with
	gdk_window_get_size.

2001-01-29  Ariel Rios  <ariel@arcavia.com>

	* Makefile.am (install-data-local): Uncomment rep.scm installation

2001-01-30  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.2.defs, gtk-1.3.defs (GtkWidget): Added subfields of
	`allocation' and `requisition' using the new `cname' option.

	* build-guile-gtk (emit-field-accessors): Handle `cname' option in
	field specifier.  See NEWS.

2001-01-28  Ariel Rios  <ariel@arcavia.com>

	* Makefile.am: Install rep.scm

	* build-guile-gtk (emit-funcs): Added cstring type that will be used
	in constant char * types.

2001-01-21  Marius Vollmer  <mvo@zagadka.ping.de>

	* configure.in: Check for pkg-config, and do not use the new
	Gnome-2 autoconf stuff when it is not found.  Instead, use the old
	way of checking for Gtk+ then.

	* gtk/repl.scm (gtk-repl): Pass gdk-flush itself to add-hook, not
	the result of calling gdk-flush.  Strange, how got this in there?
	Do only start the threaded repl when we have the `threads'
	feature.  Start the old event repl else.
	
2001-01-20  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sym_repl): New.
	(hack_compiled_switches): Add a `(use-modules (gtk repl))' form to
	the compiled actions.

	* gtk-1.2/gtk.scm: Do not use `(gtk event-repl)' module.  Removed
	all repl code.

	* gtk/repl.scm: New file, contains the repl code from
	gtk/event-repl.scm, gtk-1.2/gtk.scm and gtk-1.3/gtk.scm.  Also
	contains new code for a threaded repl, which is now the default.

	* Makefile.am (install-data-local): Do not install event-repl.scm.
	Install repl.scm in gtk directory instead.

2000-12-11  Ariel Rios  <ariel@arcavia.com>

	* guile-gtk.c (sgtk_init_substrate): Removed unused stuff

2000-12-02  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.3.defs (gdk_event_button_state, gdk_event_key_state):
	Removed commented definition.
	(gdk_event_state): New, and return GdkModifierType instead of uint
	like gdk_event_button_state etc did.

2000-11-30  Martin Baulig  <baulig@suse.de>

	* configure.in: Make the check for thread_create actually work.
	* gtk-threads.c: #include <config.h>.

	* gtk/config.scm.in (gtkconf-gtk-2-0): Added.
	* configure.in (GTKCONFIG_GTK_2_0): Added, either `#t' or `#f'.

	* build-guile-gtk (emit-object-info): Use G_TYPE_OBJECT for
	GTK+ 2.x and GTK_TYPE_OBJECT for GTK+ 1.x.

2000-11-30  Martin Baulig  <baulig@suse.de>

	* guile-gtk.c (sgtk_signal_emit): Make this work with GTK+ 1.3.

2000-11-29  Martin Baulig  <baulig@suse.de>

	* Makefile.am (INCLUDES): Put $(GTK_CFLAGS) first, before
	$(GUILE_INCS).

2000-11-29  Martin Baulig  <baulig@suse.de>

	* examples/autogen.sh: New file.
	* examples/NO-AUTO-GEN: Removed.
	* examples/configure.in: Use gnome-common here as well.

2000-11-29  Martin Baulig  <baulig@suse.de>

	* autogen.sh: Use gnome-common with the GNOME 2 macros.

	* configure.in: Make conditional GNOME 1.x / 2.x support work,
	use pkg-config to check for GTK+.

	* NO-AUTO-GEN: Removed.

2000-11-19  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs (GdkPoint): Completely removed commented out
	definition.

	* gtk-support.c, guile-gtk.h (gdk_draw_text_scm): New.

	* gdk-1.2.defs (gdk_draw_text, gdk_draw_text_scm): Use
	gdk_draw_text_scm instead of gdk_draw_text.  Keep Scheme name.
	Add text parameter.
	(gdk_draw_points): Use `(cvecr point)' as type of points
	parameters.  Remove npoints parameter.

	* build-guile-gtk (->string, string-append*): New.
	(canonicalize): Use "->string".  Everywhere: use string-append*
	instead of string-append.

	* configure.in: Use AC_CHECK_PROG instead of AC_PATH_PROG.
	AC_PROG_PATH was used incorrectly, anyway.  Set GTK_CONFIG_2_0
	when checking for gtk-config-2.0, not GTK_VERSION.  GTK_VERSION
	already has a meaning, which is not whether gtk-config-2.0 has
	been found.  Add "$" in test whether GTK_CONFIG_2_0 is yes or no.

2000-11-08  Ariel Rios <ariel@arcavia.com>

	* NEWS: Updated for version 0.20

2000-10-31  Ariel Rios <ariel@arcavia.com>

	* guile-gtk.c (enter_type_info): We now use G_TYPE_BRANCH_SEQNO in
	the Gtk2.0 port.
	(sgtk_maybe_find_type_info): Ditto.
	(sgtk_boxed2scm): Ditto
	(sgtk_find_object_info_from_type): Ditto.
	(sgtk_find_object_info): Ditto.

2000-10-29  Ariel Rios  <ariel@arcavia.com>

	* gtk-1.3.defs (GtkColorSelectionDialog): Removed changed fields.
	(GtkFundamentalType): Comment GTK_TYPE_OBJECT.

2000-10-29  Ariel Rios  <ariel@arcavia.com>

	* gdk-1.3.defs (gdk_pixmap_create_from_xpm): Change definition d'accord to gdk function.
	(GTimer): Comment definition.

2000-10-26  Ariel Rios  <ariel@arcavia.com>

	* gdk-1.2.defs: gdk_draw_point, gdk_draw_line, gdk_draw_text: NEW 

2000-10-20  Ariel Rios  <ariel@arcavia.com>

	* gtk-1.3.defs (GtkFundamentalType): Comment out foreign, callback, args and c-callbacks types.

	* gdk-1.3.defs (GdkWindowType): Removed pixmap enum and added a foreign. Please notice that from now
	on 1.3 and 1.2 files are different!

2000-10-20  Ariel Rios  <ariel@arcavia.com>

	* gtk-1.3.defs (includes): Include the gtk 2.0 headers. 
	gdk-1.3.defs: Ditto.

2000-10-19  Ariel Rios  <ariel@arcavia.com>

	* gtk-support.c: Include config.h

2000-10-04 Ariel Rios   <ariel@arcavia.com>

	* guile-gtk.h: Include headers correctly.

	* gtk-compat.c: Ditto.

2000-10-04    Ariel Rios  <ariel@arcavia.com>

	* gtk-support.c (gdk_event_pressure): Put function inside and #ifndef clause.
	(gdk_event_xtilt): Ditto
	(gdk_event_button): Ditto
	(gdk_event_source): Ditto
	(gdk_event_deviceid): Ditto.
	(gdk_get_leader_window_id): Ditto. 
	(gdk_window_get_id): Ditto.

2000-10-03  Ariel Rios  <ariel@arcavia.com>

	* guile-gtk.c: Correct included headers.

2000-09-30  Ariel Rios  <ariel@arcavia.com>

	* guile-gtk.c (sgtk_scm2ret):Conditionally set GTK_TYPE_OBJECT since in
	GTK 2.0 they are not fundamental types anymore. 
	(sgtk_valid_arg): Conditionally set GTK_TYPE_OBJECT and  GTK_TYPE_CALLBACK.
	Conditionally include the correct headers according to lib version.

2000-09-30  Ariel Rios  <ariel@arcavia.com> 
	
	* configure.in: Uncomment AC_DEFINE(GTK_2_0)
	* acconfig.h: Undef GTK_2_0

	
2000-09-30  Ariel Rios  <ariel@arcavia.com>

	* configure.in: Added commented stuff for defining GTK_2_0.  
	
2000-09-30  Ariel Rios  <ariel@arcavia.com>
	
	* guile-gtk.c:  _sgtk_object_proxy: Add a FIXME reference to remember that the proxy
	may need a GObject instead of a GtkObject.
	(gtkobj_marker_hook): Conditionally correctly use the ref_count according to the 
	Gtk version.
	(sgtk_scm2arg): Conditionally set the GTK_TYPE_CALLBACK and GTK_TYPE_OBJECT since in
	GTK 2.0 they are not fundamental types anymore.
	This Changes should not break compilation in 1.2 systems!
	

2000-09-29  Ariel Rios  <ariel@arcavia.com>

	* configure.in: Conditionally check whether if we have gtk-config-2.0. If so we built
	for the gtk-1.3 unstable series.

2000-09-21  Ariel Rios <ariel@arcavia.com>
	
	* configure.in: Bump version to 0.20.
        Let the games begin!

2000-09-05  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs, gdk-1.3.defs (gdk_event_area): Uncomment.  *
	gtk-support.c, guile-gtk.h (gdk_event_area): Return A
	GdkRectangle, not a pointer to it.  Thanks to Mark Seaborn!

	* guile-gtk.h (gtk_style_fg_gc, gtk_style_bg_gc,
	gtk_style_light_gc, gtk_style_dark_gc, gtk_style_mid_gc,
	gtk_style_text_gc, gtk_style_base_gc): New prototypes to fight
	compiler warnings.
	
2000-08-30  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_init_substrate): Call sgtk_init_threads.

	* gtk-support.c: Include "gtk-threads.h".
	(sgtk_threads_update): Added SCM_PROC for it.

	* configure.in: Pass `gthread' module flag to AM_PATH_GTK.  Added
	check for thread_create struct member.

	* acconfig.h: Added HAVE_THREAD_CREATE

	* Makefile.am: Added gtk-threads.c, gtk-threads.h, gtk/threads.scm
	in all the right places.

2000-08-25  Marius Vollmer  <mvo@dt.e-technik.uni-dortmund.de>

	* configure.in: Do not check for scm_the_root_module, check
	whether scm_eval_x takes two arguments instead.
	* guile-gtk.c (sgtk_shell): Use the result.

	* guile-gtk.c (sgtk_valid_complen): Correctly use actual_len
	instead of len.
	(sgtk_composite_inconversion): Copy vector completely on first
	changed element, not just up to this element.

2000-08-25  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs, gtk-support.c, guile-gtk.h
	(gdk_event_button_state, gdk_event_key_state): Removed.
	(gdk_event_state): New, and return GdkModifierType instead of uint
	like gdk_event_button_state etc did.
	
	* configure.in: Chek for scm_the_root_module.
	* guile-gtk.c (sgtk_shell): Use it as the second arg to scm_eval_x
	if its there.

2000-08-24  Marius Vollmer  <mvo@dt.e-technik.uni-dortmund.de>

	* gdk-1.2.defs (gdk-event-button-state, gdk-event-key-state),
	gtk-support.c guile-gtk.h (gdk_event_button_state,
	gdk_event_key_state): Return uint instead of bool.

2000-08-07  Marius Vollmer  <mvo@dt.e-technik.uni-dortmund.de>

	* guile-gtk.spec: Updated from the spec file used by Jason Cao to
	build the guile-gtk-0.19-1 RPM.

2000-07-05  Ariel Rios  <ariel@arcavia.com>

	* README: Updated for 0.19
	
	* NEWS: Ditto.
	
	* configure.in: Ditto.

2000-06-19  Ariel Rios  <ariel@arcavia.com>
        Thanks to Greg Badros!!!
	* guile-gtk.c (sgtk_init_substrate): Updated for upcoming new guile 1.4.
	The old stuff is commented until a correct hack in Makefile.am is included
	to handle old and newer guile versions.	

2000-05-23  Marius Vollmer  <mvo@dt.e-technik.uni-dortmund.de>

	* gtk-1.2.defs, gtk-1.3.defs (GtkAnchorType, gtk_window_set_modal,
	gtk_window_add_embedded_xid, gtk_window_remove_embedded_xid,
	gtk_window_set_default_size, gtk_window_set_position,
	gtk_window_set_transient_for): New.

	* gdk-1.2.defs, gdk-1.3.defs (gdk_string_width): New.

2000-05-16  Marius Vollmer  <mvo@dt.e-technik.uni-dortmund.de>

	* gtk-support.c (gtk_no_copy, gtk_no_free): New functions.
	* guile-gtk.h: Provide prototypes for them.

	* gtk-1.2.defs (GtkNotebookPage): Defined as (useless) boxed
	object by using the new gtk_no_copy/gtk_no_free functions.

	* guile-gtk.c: Include <string.h>.
	(tc16, illobj, ILLOBJP, ILLOBJ_TYPE, illobj_print, illobj_smob,
	sgtk_make_illegal_type_object): New stuff for representing objects
	of on illegal type.
	(sgtk_arg2scm): Use it instead of printing a message.
	(sgtk_init_substrate): Initialize illobj_smob.

2000-05-21  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.2.defs, gtk-1.3.defs (GtkStyle): Added white_gc and
	black_gc fields.
	(gtk_style_light_gc, gtk_style_dark_gc, gtk_style_mid_gc,
	gtk_style_text_gc, gtk_style_base_gc): Added.
	* gtk-support.c (gtk_style_light_gc, gtk_style_dark_gc,
	gtk_style_mid_gc, gtk_style_text_gc, gtk_style_base_gc): Added.
	
2000-05-12  Ariel Rios <ariel@arcavia.com>

	* toolkits/translate.scm: Updated newer version of the
        translator.

2000-05-12  Ariel Rios <ariel@arcavia.com>

	* toolkits/translate.scm: Set of functions to help
	translating gtk C header files unto defs files.
	
	* toolkits/case.scm: Added macro needed by the translator

2000-04-16  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_atom2scm): Bugfix: use the CAR of the returned
	cell as the symbol, not the cell itself.
	(make_gtkobj, sgtk_boxed2scm): Cast value to SCM in call to SCM_SETCDR.

	* guile-gtk.c: Include <string.h>.

2000-04-14  Marius Vollmer  <mvo@dt.e-technik.uni-dortmund.de>

	* configure.in (scm_simple_format): Check for it in libguile.
	* guile-gtk.c (throughout): Conditionally use ~A and ~S instead of
	%s and %S in error messages.

2000-04-12  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.h, guile-gtk.c  (sgtk_scm2atom, sgtk_atom2scm): New.
        * build-guile-gtk: Use it for now `atom' type.
	
	* gtk-1.2.defs, gtk-1.3.defs (gtk_selection_convert): New.

	* gdk-1.2.defs, gdk-1.3.defs (gdk_string_extents): New.

2000-04-09  Mikael Djurfeldt  <mdj@mdj.nada.kth.se>

	* gdk-1.2.defs, gdk-1.3.defs (gdk_threads_enter,
	gdk_threads_leave): New.

2000-04-08  Mikael Djurfeldt  <mdj@mdj.nada.kth.se>

	* gtk-1.2.defs, gtk-1.3.defs (gtk_pixmap_get): New.

2000-04-08  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-support.c (gdk_event_x, gdk_event_y): Handle
	GDK_ENTER_NOTIFY and GDK_LEAVE_NOTIFY.

	* guile-gtk.c, guile-gtk.h (sgtk_port2fileno): New.  This works
	with newer Guiles.
	* build-guile-gtk (file-descriptor): Use it.

2000-04-01  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-support.c (gdk_event_x, gdk_event_y): handle
	GDK_ENTER_NOTIFY and GDK_LEAVE_NOTIFY.

2000-03-27 Alexandre Muniz <munizao@xprt.net>

	* gtk-1.2.defs: GtkCTreeLineStyle: fixed typo.

2000-03-27  Ariel Rios  <ariel@arcavia.com>

	* gtk-1.2.defs: GtkCTreePos, GtkCTreeLineStyle: New enums. 

2000-03-15  Marius Vollmer  <mvo@zagadka.ping.de>

	gdk_color_copy was making problems, but everybody should have it
	by now.
	
	* configure.in (gdk_color_copy): No longer check for it.
	* guile-gtk.h (gdk_color_copy, gdk_color_free): Removed prototypes.
	* gtk-compat.c (gdk_color_copy, gdk_color_free): Removed functions.

2000-02-27  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.h (gdk_color_copy, gdk_color_free): Only declare
	prototypes when Gtk+ does not have these functions.  Remove
	`const' from gdk_color_copy argument.

	* guile-gtk.c (sgtk_init_with_args): Call gtk_set_locale.

2000-02-26  Ariel Rios  <ariel@arcavia.com>

	* configure.in: Bumped version number to 0.18

2000-02-26  Ariel Rios  <ariel@arcavia.com>
	
	* guile-gtk.h (gdk_color_copy): Do the parameter const 
 	Required for compilation in Gtk+1.2.7

2000-02-26  Ariel Rios  <ariel@arcavia.com>

	* Makefile.am: Added dynlink-old.scm to EXTRA_DIST.

2000-02-22  Ariel Rios  <ariel@arcavia.com>

	* README: Updated for version 0.18

2000-02-13  Martin Baulig  <martin@home-of-linux.org>

	* guile-gtk.h (gdk_color_copy): Don't make the parameter `const'.

2000-01-31  Marius Vollmer  <mvo@zagadka.ping.de>

	* Makefile.am (libguiledlopenhelper_la_LDFLAGS): Add -rpath
	option.  This is needed because libguiledlopenhelper is now a
	`EXTRA' library.  Thanks to Jacob Berkman!

	* gtk/dynlink-old.scm (merge-compiled-code-old): Renamed from
	merge-compiled-code, silly me.

2000-01-30  Ariel Rios <ariel@arcavia.com>

	* guile-gtk.h (gdk_color_copy): Typo.

2000-01-29  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs (gdk_pixmap_create_from_xpm): Add `null-ok' option
	to `mask' parameter.

	* guile-gtk.c (scm_done_malloc, scm_internal_cwdr, scm_puts):
	Declare prototypes only when configure didn't find the functions
	in libguile.
	(sgtk_composite_inconversion, sgtk_composite_outconversion):
	Return argument unchanged when it is not a list or vector.
	(sgtk_scm2slist, sgtk_scm2list, sgtk_scm2cvec): Handle SCM_BOOL_F
	by returning a NULL pointer.
	(sgtk_slist_finish, sgtk_list_finish, sgtk_cvec_finish): Do
	nothing when getting a NULL pointer.
	
2000-01-23  Marius Vollmer  <mvo@zagadka.ping.de>

	Using libltdl support from libguile.

	Makefile.am (lib_LTLIBRARIES): Replaced libguiledlopenhelper.la
	with $(LIBGUILEDLOPENHELPER).
	(EXTRA_LTLIBRARIES): Added libguiledlopenhelper.la.
	(install-data-local): Install gtk/dynlink-old.scm.
	gtk/dynlink-old.scm: Old contents of gtk/dynlink.scm.
	gtk/dynlink.scm: Use dynamic-link and dynamic-call directly when
	we are using ltdl, defer to gtk/dynlink-old.scm when not.
	(configure.in): Check for "lt_dlopen" in libguile.  Set
	USING_LTLDL, USING_LTDL_SCM and LIBGUILEDLOPENHELPER accordingly.
	Check only whether libtool wins when not using ltdl.
	gtk/config.scm.in (gtkconf-using-ltdl): New variable.
	
	Supporting type conversions with composites.

	* guile-gtk.c, guile-gtk.h (sgtk_composite_inconversion,
	sgtk_composite_outconversion): New.

	* build-guile-gtk: Updated error handling machinery to work with
	recent Guile versions.
	(type-conversion): Take a type object, not a symbol.  Get the
	conversion function from the `conversion' property of the type
	object.  Changed callers.
	(type-cname, type-isa, type-prop, type-name,
	type-scm2c-does-type-checking, type-scm2c, type-c2scm,
	type-c2args, type-c2refs, type-finish, type-can-be-passed,
	type-can-be-returned): Moved to the top-level.
	(type-set-prop): New.
	(emit-composite-helpers): emit conversion functions when element
	type has a conversion function.
	(composite-conversion): New.
	(realize-slist-type, realize-list-type, realize-cvec-type,
	realize-cvecp-type, realize-cvecr-type, realize-fvec-type): Use
	it.
	(register-boxed-converter, register-ptype-converter): Take form
	options as parameter.  Use them to get the conversion function.
	Changed callers.
	(register-object-type): Take form options as parameter.
	(string type): Specify conversion as type property, not as global
	option.

2000-01-20  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (emit-funcs): The `string' type now only accepts
	non-substrings.
	
	* gdk-1.2.defs, gdk-1.3.defs (gdk_pixmap_create_from_xpm): New.

	* configure.in (mylibdir): Removed.
	* gtk/config.scm.in (gtkconf-libdir): Construct from
	$myexecprefix.

	* gtk/config.scm.in (gtkconf-default-version): New variable, takes
	old role of gtkconf-version.
	(gtkconf-version): Initialize to `#f', will bet set to the right
	value once the glue code has been loaded.
	(gtkconf-guile-gtk-version): New variable, reflects version of
	guile-gtk package itself.
	* gtk/dynlink.scm (gtk-version-set): Take version number as string
	and construct prefix from it.  Set gtkconf-version.  Changed all
	callers.
	
2000-01-13  Ariel Rios  <ariel@arcavia.com>
        
	Corrections by Vladimir V. Tsychevski:THANKS!!! 
	* gtk-1.2.defs, gtk-1.3.defs, gtk.defs: 
	gtk_aspect_frame_new, gtk_progress_set_show_text, 
	gtk_progress_set_activity_mode, GtkPlug,
	gtk_aspect_frame_set: Corretly set bool type.

2000-01-10 Ariel Rios   <ariel@arcavia.com>

	* gtk-1.2.defs, gtk-1.3.defs: New Objects: GtkItemFactory(NEW)
	gtk_item_factory_from_widget, gtk_item_factory_path_from_widget: NEW 

1999-12-29  Ariel Rios  <jarios@usa.net>

	* gdk-1.2.defs, gdk-1.3.defs, gdk.defs: 
	  gdk_rgb_get_visual, gdk_rgb_init, gdk_rgb_get_visual: NEW

1999-12-19  Martin Baulig  <martin@home-of-linux.org>

	* gtk/dynlink.scm ((search-path-extended)): Use `(-[0-9]+)*' instead of `*' as
	pattern to get libraries with trailing version numbers.

1999-12-18  Martin Baulig  <martin@home-of-linux.org>

	* guile-gtk.c (sgtk_scm2enum, sgtk_valid_enum): Protect 'SCM_SYMBOLP'
	with `SCM_NIMP'.

1999-12-12 Ariel Rios <jarios@usa.net>

	* build-guile-gtk: Bad define error placement error corrected. We no longer
	  have the problem when using 'link' option.

1999-12-12  Martin Baulig  <martin@home-of-linux.org>

	* guiledlopenhelper.c (sgtk_dlopen): Use the `fullname' and RTLD_GLOBAL on NetBSD.
	(sgtk_dlsym): We need to prepend the symbol with a leading underscore on NetBSD.

	* configure.in: Don't consider libtool as winning when "deplibs_check_method" is
	"unknown".

1999-12-11  Ariel Rios <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: GtkLayout (NEW)
	  gtk_layout_new, gtk_layout_put, gtk_layout_move, gtk_layout_set_size,
	  gtk_layout_get_hadjustment, gtk_layout_get_vadjustment, gtk_layout_set_hadjustment,
	  gtk_layout_set_vadjustment, gtk_layout_freeze, gtk_layout_thaw. (NEW)
	
1999-12-10  Ariel Rios <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: gtk_spin_button_configure, gtk_spin_button_spin,
	  gtk_spin_button_set_numeric, gtk_spin_button_set_wrap, gtk_spin_button_set_shadow_type,
	  gtk_spin_button_set_snap_to_ticks, gtk_spin_button_update.
	  GtkSpinType enum. (NEW).

1999-11-18  Ariel Rios  <jarios@usa.net>

	* test-gtk.scm: Corrected bad define placement error.
	
1999-11-07  Ariel Rios  <jarios@usa.net>

	* Makefile.am: Remove references to enum-test.* and fake.h

1999-11-07  Ariel Rios  <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs:
	  Corrected gtk_widget_add_events.

1999-10-24  Ariel Rios  <jarios@usa.net>
	
	* Makefile.am: Included references to enum-test.defs,
          examples/calendar.scm, and enum-test.defs

1999-10-24  Ariel Rios  <jarios@usa.net>

	From Daniel Skarda THANKS!!!
	
	* gdk-1.2.defs, gdk-1.3.defs: (GTimer)
	  Later on I will create the proper glib.defs =)
	  g-timer-new, g-timer-start, g-timer-stop,
	  g-timer-reset: NEW
        * gtk-1.2.defs (gtk_accelerator_parse): Changed (ret ..) to
	 values .... 

	* gtk-1.2.defs (gtk_widget_add_events): NEW

	* configure.in: mylibdir - new variable (for gtkconf-libdir)
	
	* gtk/config.scm.in: gtkconf-libdir: NEW

	* gtk/dynlink.scm (default-lib-path): Now searchs also in libdir

	* build-guile-gtk (emit-funfs): 'c-definition - new type
	property. 

	* build-guile-gtk (load-scheme): Loads scheme code - suitable for
	example for loading definitions of "non-gtk" types (needed by
	guileGL bindings)

	* build-guile-gtk: types, register-type and make-type was moved
	out from emit-funcs - so now it is possible to register new types
	from "outside" (using load-scheme). You can also register realizer
	for your own composite types. For now only "simple" types can be 
	registered.

	* build-guile-gtk (define-type-alias): allow to define alias for
	type

	* build-guile-gtk (emit-struct-info): if "size" was specified in
	"(define-struct..." than sizeof() is not used for 
	GtkTypeInfo.object_size
	
	* guile-gtk.c (sgtk_valid_(flags|enum), sgtk_scm2(flags|enum)):
	Now these functions accepts also numbers instead symbols (or list
	of symbols). So now it is possible to write

		(gl-begin 'points)
		(gl-begin GL-POINTS)

	- these variants have same meaning - but the second one is faster
	(presumed that GL-POINTS is defined as appropriate integer constant) 
	
	* gtk-support.c (gtk_widget_allocation_*_scm): New functions - so
	you can get widget's width, height, x and y.

	* guile-gtk.c (enum/flags functions): Speed inmprovements in
	scm2enum and scm2flags.

	Instead of O(n) search and strcmp, scm2(enum|flags) functions
 	store and protect symbol so it compares only SCMs (no strings).
 	Symbols are sorted so we can perform binary search - O(log n).

	Flags and enums are now converted and validated at once so 
	scm_validate_(enum|flags) was retained only for compatibility and
	for (ret ...) expressions...

	These changes makes library binary backward incompatible (any
	other application which utilizes build-guile-gtk should be
	recompiled) .
	
	* build-guile-gtk (emit-enum/flags-info): emit function now
	reflects changes in enum/flags conversion
          
	  
1999-10-20  Ariel Rios  <jarios@usa.net>
	
	* gtk-1.2.defs, gtk-1.3.defs:
	  gtk_handle_box_set_shadow_type, gtk_handle_set_handle_position,
	  gtk_hanlde_box_set_snap_edge.
	  gtkhandlebox is completely wrapped.

1999-10-18  Ariel Rios  <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs:
	  gtk_paned_pack1, gtk_paned_pack2, gtk_paned_set_position,
          gtk_paned_compute_position: NEW
          gtkpaned.h is completely wrapped.

1999-10-17  Ariel Rios  <jarios@usa.net>
 	Released 0.17

1999-10-15  Ariel Rios  <jarios@usa.net>
	
	* NEWS: Updates for 0.17 release
	* configure.in: Bump to version 0.17
	
1999-10-10  Ariel Rios   <jarios@usa.net>

	* README: Minor typo corrections.

1999-10-05  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.3.defs: Include gdk-1.3.defs and not gdk-1.2.defs.

1999-10-05  Ariel Rios  <jarios@usa.net>

 	* NEWS: Updates for 0.17 release.

1999-10-05  Ariel Rios  <jarios@usa.net>

	* examples/calendar.scm: A new program demonstrating GtkCalendar 
	was created: NEW.

1999-10-05  Ariel Rios  <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: 
          gtk-main-iteration now returns an int according to gtkmain.h
          gtk-main-iteration-do, gtk-true, gtk-false, gtk-grab-get-current: NEW
  
1999-10-04  Ariel Rios  <jarios@usa.net>

	* Makefile.am: guile-gtk.spec was added to EXTRA_DIST

          From Greg Badros: THANKS!
      	* guile-gtk.spec: The rpm spec file was included: NEW

1999-10-03  Ariel Rios  <jarios@usa.net>
	
	* gtk-1.2.defs, gtk-1.3.defs: gtk-calendar-new, gtk-calendar-select-month,
	gtk-calendar-select-day, gtk-calendar-mark-day, gtk-calendar-umark-day,
	gtk-calendar-clear-marks, gtk-calendar-display-options, gtk-calendar-freeze,
	gtk-calendar-thaw, gtk-plug-new, gtk-tooltips-force-window: NEW
	GtkPlug, GtkCalendar: NEW Objects
	  
1999-10-03  Ariel Rios     <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: gtk-progress-bar-set-discrete-blocks,
	gtk-progress-bar-set-activity-step, gtk-progress-bar-set-activity-blocks: NEW 
        GtkProgress: NEW Object
        gtk-progress-set-text-alignment, gtk-progress-set-show-text, 
        gtk-progress-set-format-string, gtk-progress-set-adjustment,
        gtk-progress-configure, gtk-progress-set-percentage, 
        gtk-progress-set-value, gtk-progress-get-value,
        gtk-progress-set-activity-mode, gtk-progress-get-current-text,
        gtk-progress-get-text-from-value: NEW        

1999-10-03  Ariel Rios     <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: gtk-notebook-get-current-page,
        gtk-notebook-get-nth-page, gtk-notebook-page-num,
 	gtk-notebook-get-tab-label, gtk-notebook-set-tab-label-text,
        gtk-notebook-get-menu-label, gtk-notebook-set-menu-label,
        gtk-notebook-label-text, gtk-notebook-reorder-child: NEW

1999-10-03  Ariel Rios     <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: gtk_adjustment_changed,
        gtk_adjustment_value_changed, gtk_adjustment_value_changed: NEW

1999-10-02  Martin Baulig  <martin@home-of-linux.org>

	* build-guile-gtk: Added `long' type.

	* build-guile-gtk: Added `define-ptype' to .defs files for
	generic pointer types (like CORBA_Object for instance).

1999-10-01  Ariel Rios     <jarios@usa.net>

	* gtk-1.2.defs, gtk-1.3.defs: gtk_clist_set_reorderable,
        gtk_clist_set_use_drag_icons, gtk_clist_set_button_actions,
        gtk_clist_get_column_widget, gtk_clist_set_columns_autosize: NEW

1999-10-01  Martin Baulig  <martin@home-of-linux.org>

	* Makefile.am (libguiledlopenhelper_la_LIBADD): We need to add
 	$(GUILE_LIBS) here because the guile header files may access
	things in -lqthreads.

1999-09-30  Ariel Rios  <jarios@usa.net>

	From Daniel Skarda  THANKS!!
	* gtk-1.2.defs: New objects, flags etc: GtkTearoffMenuItem,
	GtkAccelFlags, GtkAccelGroup, GtkAccelLabel

	New functions: gtk_tearoff_menu_item_new, gtk_signal_emit_stop*,
	gtk_accel_group*, gtk_*uline*, gtk_accel_label*, ...

	* gdk-1.2.defs: New function: gdk_beep :)

	
1999-09-29  Ariel Rios  <jarios@usa.net>

        * README : Updates. New references to the new homepage and 
          mailing list were added.

1999-09-28  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_move_prots_to_global): New function.
	(gtkobj_free): Use it so that we do not forget about a freed
	proxy's protects.

1999-09-23  Marius Vollmer  <mvo@zagadka.ping.de>

	Bug fix of protection code.  It failed when one object was
	protected multiple times, and was not safe to be run during GC.
	Thanks to Greg Badros for providing the test case.
	
	* guile-gtk.h (sgtk_protect): Return a sgtk_protshell token
	instead of the protected object.
	(sgtk_unprotect): Expect a protshell token previously returned
	from sgtk_protect.
	
	* build-guile-gtk (callback, full-callback): Updated for new
	sgtk_protect interface.

	* guile-gtk.c (sgtk_protshell, sgtk_protshell_chunk): New.
	(sgtk_object_proxy::protects, global_protects): Now of type
	sgtk_protshell*.
	(sgtk_mark_protects): New static function.  Use this instead of
	scm_gc_mark where appropriate.
	(sgtk_protect, sgtk_unprotect): Maintain lists of sgtk_protshells
	instead of SCM lists.
	(sgtk_callback_marshall, sgtk_callback_destroy): Use
	sgtk_protshells as DATA tokens.
	(sgtk_init_substrate): Initialize sgtk_protshell_chunk.
	
1999-08-15  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* build-guile-gtk ((emit-funcs defs)): typo fix in rect type

	* configure.in (LIBS): autoconf checks for scm_fdes_to_port
	* guile-gtk.c (sgtk_fileno2port): 

1999-08-14  Martin Baulig  <martin@home-of-linux.org>

	* build-guile-gtk ((emit-func)): Truncate iptypes to the length
	of input-params; recent versions of guile raise an out-of-range
	exception in constructs like (for-each (lambda (p t)) x y) if
	x and y don't have the same length. This fixes bug #1860.

1999-08-14  Martin Baulig  <martin@home-of-linux.org>

	* guile-gtk.c (sgtk_fileno2port): Use scm_fdes_to_port and
	scm_setvbuf instead of scm_stdio_to_port and scm_setbuf0
	which has been removed recently.

1999-08-12  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* guile-gtk.c (sgtk_fileno2port): added
	also added SCM_SYSCALL (copied from _scm.h, without vms support)

	* build-guile-gtk ((emit-funcs defs)): file-descriptor can be
 	returned now

	* guile-gtk.h: added prototypes

	* guile-gtk.c (sgtk_valid_rect sgtk_scm2rect sgtk_rect2scm): added

	* gdk-1.3.defs: 
	* gdk-1.2.defs: replaced GdkRectangle with rect. The function is
 	still commented out because gdk_event_area isn't defined anywhere

	* build-guile-gtk ((emit-funcs defs)): added rect type

1999-07-20  Martin Baulig  <martin@home-of-linux.org>

	* build-guile-gtk ((emit-funcs defs)): Added `(finish func)'
	option for the parameters; see guile-gnome/gnorba.defs for an
	example.

1999-07-19  Martin Baulig  <martin@home-of-linux.org>

	* build-guile-gtk ((emit-struct-info defs)): New. Implement new
	`(define-struct name (copy ...) (free ...))' for arbitrary non-Gtk
	structs. This does basically the same than `(define-boxed)', but
	registers a new Gtk type.
	((emit-funcs defs)): Added `(realize-cvecp-type t mode)' which is
	the same as cvec but with &len/ptr.

	* guile-gtk.c (sgtk_register_type_infos_gtk): New function which
	will be called from the glue code to register the new Gtk types
	for the `(define-struct)'s.
	
1999-07-08  Marius Vollmer  <mvo@zagadka.ping.de>

	More stuff from Ariel Rios.  Thanks!
	* gtk-1.2.defs, gtk-1.3.defs (gtk_ruler_draw_ticks,
	gtk_ruler_draw_pos): New.

1999-07-07  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* build-guile-gtk ((emit-funcs defs)): converted ptypes to iptypes
 	where it only refers to input parameters.

1999-07-06  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (emit-funcs): Changed `let' to `letrec' so that
	`process-forms' can actually call itself recursively.  Boy, I feel
	ashamed.

	More stuff from Ariel Rios.  Thanks!
	* gtk-1.2.defs, gtk-1.3.defs (gtk_notebook_set_scrollable):
	Changed flag to type `bool'.
	(gtk_notebook_set_homogeneous_tabs, gtk_notebook_set_tab_hborder,
	gtk_notebook_set_tab_vborder, gtk_notebook_set_tab_label): New.

1999-07-06  Mikael Djurfeldt  <mdj@thalamus.nada.kth.se>

	* gdk-1.2.defs, gdk-1.3.defs (gdk_window_get_size_scm): New.
	* gtk-support.c (gdk_window_get_size_scm): New.

1999-06-30  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (emit-funcs): Fix silly typo and don't use
	improper internal define.  Should work now.

1999-06-29  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (emit-funcs): Do not call emit-funcs recursively
	when handling the sub-statement lists in `if' forms.  Calling it
	recursively would evaluate the sub-statements in a isolated
	environment.  Instead, define new local function process-forms and
	call that recursively.

1999-06-29  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* gtk/config.scm.in: defines gtkconf-autobuild-flags (from
 	AUTOBUILD_FLAGS)

	* build-guile-gtk ((emit-funcs defs)): rudimentary conditional
 	compile, the syntax is (if flag (declarations) (declarations)),
 	where flag simply checks for a symbol in gtkconf-autobuild-flags
	list	

	* configure.in (AUTOBUILD_FLAGS): check for buggy gnome-config.h;
	substitutes AUTOBUILD_FLAGS, check for cpp

1999-06-28  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* guile-gtk.c (sgtk_cvec2scm): added return obj; D'OH!

1999-06-27  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (realize-fvec-type): Include length in name of
	type.

1999-06-27  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.2.defs, gtk-1.3.defs (GtkArgFlags, GTK_OBJECT_TYPE,
	gtk_object_query_args_scm): New.
	* gtk-support.c (gtk_object_query_args_scm): New.
	
	From Ariel Rios.  Thanks!
	* gtk-1.2.defs, gtk-1.3.defs (gtk_editable_select_region,
	gtk_editable_insert_text_scm, gtk_editable_delete_text,
	gtk_editable_cut_clipboard, gtk_editable_copy_clipboard,
	gtk_editable_paste_clipboard, gtk_editable_delete_selection,
	gtk_editable_set_position, gtk_editable_get_position,
	gtk_editable_set_editable): New definitions.
	* gtk-support.c (gtk_editable_insert_text_scm): New.

	From Chris Ebenezer.  Thanks!
	* gtk-1.2.defs, gtk-1.2.defs
	(gtk_label_set, gtk_label_set_text): Use new name.
	(gtk_label_set_justify, gtk_label_set_line_wrap,
	gtk_label_set_pattern): New definitions.
	(gtk_preview_set_install_colormap): Changed argument type of
	`install_cmap' to `int'.
	
1999-06-22  Mikael Djurfeldt  <mdj@crunchy.nada.kth.se>

	* gdk-1.2.defs, gdk-1.3.defs (gdk_window_clear,
	gdk_colormap_alloc_color): New.

	* gtk-1.2.defs (gtk_curve_set_vector, gtk_curve_get_vector): New.

1999-06-22  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* build-guile-gtk: 
	(emit-funcs): multiple return values support (see *_with_default
	in gnome-config parts of gnome-defs for examples)
	
	(realize-cvecr-type):
	(realize-cvec-type): support for pass-by-reference

	* guile-gtk.c (sgtk_cvec2scm): added

1999-06-21  Miroslav Silovic  <silovic@zesoi.fer.hr>

	* build-guile-gtk ((emit-funcs defs)): removed extra argument to @@

1999-05-27  Marius Vollmer  <mvo@zagadka.ping.de>

	More bug fixes prompted by Markus Linnala.  More Thanks!
	
	* build-guile-gtk (emit-accessor): Always canonicalize return type
	to have explicitely no options to avoid confusion with composite
	types.  Previously, a composite type has been mistaken for a
	non-composite type with options.
	
	* guile-gtk.c (sgtk_scm2slist, sgtk_scm2list, sgtk_scm2cvec):
	Initialize elemets to NULL when FROMSCM is not given.  This gives
	semi-reasonable behaviour in case the called function does not
	initialize the composite itself.

	* gtk-1.2.defs, gtk-1.3.defs (GtkCList): Added "selection" field.
	
1999-05-26  Marius Vollmer  <mvo@zagadka.ping.de>

	Bug fixes prompted by Markus Linnala.  Thanks!

	* build-guile-gtk (make-type): Added "name" argument.  Changed all
	callers to supply a useful name.
	(type-name): New function.
	(type-can-be-passed, type-can-be-returned): New functions.
	(emit-composite-helpers): Only emit helpers that the element type
	can support.
	(realize-slist-type, realize-list-type, realize-cvec-type,
	realize-cvecr-type, realize-fvec-type): Use type-name to form the
	names of generated functions, not type-cname.
	(register-type 'static-string): Flag as not can-be-passed.
	(register-type 'callback): Flag as not can-be-returned.
	(register-type 'full-callback): Likewise.
	(register-type 'file-descriptor): Likewise.
	
	* gtk-1.2.defs, gtk-1.3.defs (gtk_clist_get_text): Correctly
	declare it to return a static_string in the "text" argument.

1999-05-13  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs, gdk-1.3.defs (gdk_window_get_parent): New, thanks
	to Jeffrey Nichols.

1999-05-06  Marius Vollmer  <mvo@zagadka.ping.de>

	* gdk-1.2.defs (gdk_window_get_id): New.
	* gdk-1.3.defs (gdk_window_get_id): New.
	* gtk-support.c (gdk_window_get_id): New.

1999-04-09  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.16.

1999-04-07  Marius Vollmer  <mvo@zagadka.ping.de>

	* configure.in: Bumped version number to 0.16.

	* gtk-support.c: Include <gdkprivate.h> to get at
	gdk_leader_window.
	(gdk_get_leader_window_id): New.
	* guile-gtk.h (gdk_get_leader_window_id): New prototype. 
	* gdk-1.2.defs, gdk-1.3.defs (gdk_get_leader_window_id): New.
	
1999-04-02  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (mode-helper-valid): New.  Use it in the
	composite type realization routines to allow non-`in' values to
	have arbitrary elements.

	* gtk-1.3.defs (gtk_curve_set_vector, gtk_curve_get_vector): New.

	* guile-gtk.c (sgtk_valid_complen): Don't check element validity
	when the predicate is NULL.
	(sgtk_scm2slist, sgtk_scm2list, sgtk_scm2cvec): Don't convert
	element when FROMSCM is NULL.
	
1999-03-23  Mikael Djurfeldt  <mdj@mdj.nada.kth.se>

	* configure.in: Use quotes in libtool winning regexp.  (sh on
	solaris can't handle it without quotes.)

1999-03-02  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.15.
	
	* configure.in: Changed version number to 0.15.

	* Makefile.am (all): Depend on libguilegtk.la.
	(libguilegtk.la): New target.

1999-03-01  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.3/gdk.scm: Copied from gtk-1.2/gdk.scm and adapted version
	numbers.
	* gtk-1.3/gtk.scm: Copied from gtk-1.2/gtk.scm and adapted version
	numbers.

	* gtk-1.2/gtk.scm: Correctly load libguilegtk-1.2.
	* gtk-1.2/gdk.scm: Define module (gtk-1.2 gdk), not (gtk-1.1 gdk).

	* gtk-1.3.defs: Copied from gtk-1.2.defs and adapted version
	numbers.
	* gdk-1.3.defs: Copied from gdk-1.2.defs.
	* gtk-1.0.defs, gtk-1.1.defs, gdk-1.0.defs, gdk-1.1.defs: Removed.

	* configure.in: Only accept Gtk versions 1.2 and 1.3.

	* Makefile.am: Tossed out support for gtk-1.0 and added support
	for gtk-1.3.
	(install-data-local): Removed debris removal commands

	* examples/foo.defs: Use (gtk-1.2 gtk) module.

	* gdk-1.2.defs (gdk_font_load): Flag return value as `not copied'.

	* examples/calc.scm, examples/test-gtk.scm: Correct showstopping
	typo "view-port" -> "viewport".

	* build-guile-gtk (emit-boxed-info): Put conversion functions into
	generated sgtk_boxed_info structures.

	* guile-gtk.c (sgtk_maybe_find_type_info): New function.
	(sgtk_build_args): Look up conversion in type_info and apply it.
	(sym_gtk_version): Support 1.3 instead of 1.0.
	
	* guile-gtk.h (sgtk_type_info): Added "conversion" field.

1999-02-27  Gregory McLean <gregm@comstar.net>

	* s/gtk-1.1/gtk-1.2/g
        * s/gdk-1.1/gdk-1.2/g
 	* Whee it compiles against gtk+ 1.2 ;)

1999-02-17  Marius Vollmer  <mvo@zagadka.ping.de>

	* build-guile-gtk (gtkconf-cflags): Define.  It was used already,
	but not defined.

1999-02-16  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk/dynlink.scm (merge-compiled-code): Correctly call
	%sgtk-dlinit only when the library was actually loaded via
	%sgtk-dlopen.  Thanks to Mark Gritter.

1999-02-15  Marius Vollmer  <mvo@zagadka.ping.de>

	* Makefile.am (gtk-glue.c, gdk-glue.c): Use explicit variables
	instead of `$<'.

1999-02-14  Raja R Harinath  <harinath@cs.umn.edu>

	* Makefile.am (acinclude.m4): Get rid of ugly circular dependency
	caused by `aclocal -I .'.  

1999-02-14  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk/config.scm.in: New file.

	* configure.in: Do not output gtk/dynlink.scm and build-guile-gtk,
	do output gtk/config.scm.  Bump version number to 0.15a.
	Substitute myprefix and myexec_prefix.  Check wether the generated
	libtool contains "deplibs_check_method", and consider it winning
	when it does.
	
	* gtk/dynlink.scm.in: Removed.
	* gtk/dynlink.scm: No longer generated by configure, uses (gtk
	config) instead.
	(dlopen-libtool-library): Do not bother to track inter-library
	dependencies when gtkconf-libtool-is-winning is true.
	(init-dlopen-func): Always load the helper library from its known
	place, $(libdir)/lib/.
	
	* build-guile-gtk.in: Removed.
	* build-guile-gtk: No longer generated by configure, use (gtk
	config) instead.

	* Makefile.am (gtk-glue.c, gdk-glue.c, main.c): Take care to use
	the local version of gtk/config.scm when generating glue code.
	(install-data-local): Install gtk/config.scm.  Install
	gtk/dynlink.scm from the srcdir.
	(EXTRA_DIST): Distribute gtk/dynlink.scm instead of
	gtk/dynlink.scm.  Distribute gtk/config.scm.in and build-guile-gtk.
	
	* examples/test-gtk.scm: Provide ersatz definition for
	gtk-scrolled-window-add-with-viewport if it isn't defined.
	* examples/calc.scm: Provide ersatz definition for
	gtk-scrolled-window-add-with-viewport if it isn't defined.

	* gdk-1.0.defs: (gdk_draw_lines, gdk_draw_polygon): Copied from
	gdk-1.1.defs.
	
	* gtk-1.0.defs (gtk_text_set_word_wrap): New.
	* gtk-1.1.defs (gtk_text_set_word_wrap, gtk_text_set_line_wrap):
	New (thanks to Chris Bitmead).

1999-01-24  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.14.
	
	* guile-gtk.c (gtk_class_new): Initialize
	info.base_class_init_func only for Gtk versions greater than 1.0.
	(Setting it to NULL explicitely is redundant, but I want to have
	the clue in there that base_class_init_func isn't in 1.0 if I ever
	want to set it to something different than NULL).
	
1999-01-20  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (gtkobj_free): Do the right thing when removing
	proxy from all_proxies list.  There was one `=' too many in the
	condition of the `if'.  Apparently this bug crept in when someone
	(who doesn't provide ChangeLog entries) did some cleanup.  This
	bug was not in 0.12.

	* gtk-1.1.defs (gtk_container_block_resize,
	gtk_container_unblock_resize, gtk_container_need_resize): Removed.

1999-01-17  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.13.

	* Makefile.am: Install gtk/event-repl.scm in gtkmoduledir and not
	in sitedir.  Delete old installed copy in sitedir.
	* gtk/event-repl.scm: Moved from toplevel dir.  Changed module
	name to (gtk event-repl).
	* gtk-1.0/gtk.scm. gtk-1.1/gtk.scm: Use (gtk event-repl) instead of
	(event-repl).

	* configure.in (GUILEGTK_LIB): Added equivalent of -L$libdir in
	front of library.

1998-12-20  Marius Vollmer  <mvo@zagadka.ping.de>

	* examples/Makefile.am: Removed all traces of foo.defs.guile.
	* examples/foo.defs: Merged contents foo.defs.guile.

	* gtk-1.1.defs: Removed `(installed by guile-gtk)' marker.
	Merged contents of gtk-1.0.defs.guile file.
	* gdk-1.1.defs: Removed `(installed by guile-gtk)' marker.
	Merged contents of gdk-1.0.defs.guile file.
	(gdk_draw_lines): New.
	
	* gdk-1.0.defs: Removed `(installed by guile-gtk)' marker.
	Appended contents of gdk-1.0.defs.guile file at end.
	* gtk-1.0.defs: Removed `(installed by guile-gtk)' marker.
	Appended contents of gtk-1.0.defs.guile file at end.

	* build-guile-gtk.in (read-file): Do not read a *.defs.guile file
	after reading the regular *.defs file.
	(defsdir): Changed to $(datadir)/guile-gtk.

	* Makefile.am: Remove all traces of *.defs.guile files.  Install
	*.defs files in $(datadir)/guile-gtk/.  Remove old files in
	$(datadir)/gtk/ during install.

	* gtk-1.1/gtk.scm (gtk-idle-add): New.

	New cool stuff from Matthias Clasen:
	
	* gtk-1.1.defs (gtk_menu_popup_interp): Allow #f for
	parent_menu_shell and parent_menu_item.  Use "uint" for
	activate_time.
	(gtk_editable_get_chars): New.
	
	* examples/test-gtk.scm: New stuff.

1998-12-12  Marius Vollmer  <mvo@zagadka.ping.de>

	Bug reports from <nick@unclebob.ml.org>.
	
	* examples/configure.in (GUILEGTK_LIBLIBS): New subst.
	* examples/Makefile.am: Use it for libguilefoo_la_LIBADD.

	* build-guile-gtk.in (lib-link-flags): New function.
	(toplevel): Use it to implement the new "liblibs" command.
	
	* gtk-1.1.defs (gtk_timeout_add_interp, gtk_timeout_add_full): Use
	_full instead of _interp version.  No user visible changes.
	(gtk_idle_add_interp): Removed.
	(gtk_idle_add_full): New.  The _full suffix is also used for the
	Scheme name, since this is a different function from gtk_idle_add.
	(gtk_container_children_foreach_interp,
	gtk_container_children_foreach_full): Use _full instead of _interp
	version.  No user visible changes.
	
	* examples/hello-world.scm: Correctly use (gtk gtk) module.  Use
	gtk-standalone-main so that it works standalone.

	* examples/test-gtk.scm (create-progress-bar): Rewritten to not
	use gtk-progress-bar-percentage, which is gone.

	* configure.in (GUILEGTK_LIB): New subst.
	* build-guile-gtk.in (link-flags): Use it to get the right
	library.

	* gtk-1.1.defs (gtk_signal_connect_interp,
	gtk_signal_connect_full): Use gtk_signal_connect_full since
	gtk_signal_connect_interp is deprecated.  Unfortunately, this
	moves the AFTER argument.  Hopefully no existing code uses it.
	(gtk_signal_set_class_function_full): Add protection option.

	More stuff from Matthias Clasen.  Thanks!

	* gtk-compat.c (gtk_color_selection_set_color_interp,
	gtk_color_selection_get_color_interp): New.
	* guile-gtk.h (gtk_color_selection_set_color_interp,
	gtk_color_selection_get_color_interp): New prototypes.

	* gtk-1.1.defs (GtkFontSelectionDialog,
	gtk_font_selection_dialog_new,
	gtk_font_selection_dialog_get_font_name,
	gtk_font_selection_dialog_get_font,
	gtk_font_selection_dialog_set_font_name,
	gtk_font_selection_dialog_get_preview_text,
	gtk_font_selection_dialog_set_preview_text): New definitions.
	
	* examples/test-gtk.scm (gtk): Refined color selection dialog and
	added font selector.

	* guile-gtk.c (sgtk_scm2list): Keep a pointer to the tail node so
	that building the list has linear time complexity (thanks to
	Matthias Clasen).

1998-12-06  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (tc16_gtktype, gtktype_print, gtktype_equalp,
	gtktype_smob, sgtk_type_from_name, sgtk_valid_type, sgtk_scm2type,
	sgtk_type2scm): New.
	(sgtk_valid_arg): New.
	(sgtk_scm2arg): Don't check for valid types.  Instead, assume that
	sgtk_valid_arg has been called beforehand.
	(sgtk_find_object_info_from_type): Return NULL for
	GTK_TYPE_INVALID.  Construct a fresh sgtk_object_info for types
	that are known to Gtk+ but not included in the pre-compiled list
	of types.
	(sgtk_build_args): New argument SUBR, used for error messages.
	Removed unused "skip" label.  Use sgtk_valid_arg before calling
	sgtk_scm2arg.  Changed all callers.
	(sgtk_gtk_object_new): Use the builtin type "type" for the first
	argument.
	(gtk_class_new, gtk_signal_new_generic, sgtk_signal_emit): New.
	(sgtk_init_substrate): Register gtktype_smob.
	
	* guile-gtk.h (sgtk_valid_type, sgtk_scm2type, sgtk_type2scm,
	sgtk_valid_arg, gtk_type_get_info,
	gtk_signal_set_class_function_full): New prototypes.
	(sgtk_build_args): Update prototype.
	
        * gtk-1.1.defs (GtkSignalRunType): Removed GTK_RUN_MASK.  Added
	GTK_RUN_ACTION and GTK_RUN_NO_HOOKS.
	(gtk_type_name, gtk_type_from_name, gtk_class_new,
	gtk_signal_new_generic, gtk_signal_emit,
	gtk_signal_set_class_function_full): New.

	* configure.in: Check for gtk_type_get_info and
	gtk_signal_set_class_function_full.

	* gtk-compat.c (gtk_type_get_info,
	gtk_signal_set_class_function_full): New dummy definitions.

	* build-guile-gtk.in (realize-slist-type, realize-list-type): Use
	mode out for returned values.
	(emit-func): Deal with rest-arg option.
	(register-type 'type): New builtin type.

	* guiledlopenhelper.c (sgtk_dlinit): Produce message when function
	can't be found.
	
	Due to Matthias Clasen:

	* gtk-1.1.defs (gtk_clist_remove): Correctly use define-func.
	(gtk_scrolled_window_add_with_viewport): New.
	(GtkFileSelection): Added action_area field.

	* guile-gtk.c (sgtk_scm2list): Use g_list_concat to build up the
	list, not g_list_append.  g_list_append adds values not nodes.
	Work remains to be done here.

	* test-gtk.scm: Much new stuff.

1998-11-28  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-1.1.defs (gtk_widget_is_child): Removed.

	* build-guile-gtk.in (realize-type): Correctly use
	register-list-type for the list type, not register-slist-type.
	Bugger.  One more of these and I loose my hackers certificate.

	More work on composites.
	
	* build-guile-gtk.in (type-free): Replaced by type-finish
	throughout.
	(emit-composite-helpers): Correctly register emitted types.
	(mode-in?, mode-out?, mode-def, mode-helper-from, mode-helper-to):
	New.
	(realize-slist-type, realize-cvec-type, realize): Take mode
	argument.  Use mode-helper-from and mode-helper-to.
	(realize-list-type, realize-cvecr-type, realize-fvec-type): New.
	(realize-type): Handle new composite types list, cvecr and fvec.
	Pass mode argument to realizers.
	(register-type 'point): New.

	* gdk-1.1.defs (gdk-draw-polygon): New.
	* gtk-1.1.defs (GtkVisibility, GtkSortType,
	gtk_container_children, gtk_combo_set_popdown_strings): New.
	(GtkClist): General overhaul.  Should be useable now.
	* gtk-1.0.defs (gtk_container_children,
	gtk_combo_set_popdown_strings): New.

	* guile-gtk.c (sgtk_valid_point, sgtk_scm2point, sgtk_point2scm):
	New.
	(sgtk_valid_composite): Call sgtk_valid_complen to do the real
	work.
	(sgtk_valid_complen): Do the checks previously done by
	sgtk_valid_composite and optionally also check for a valid length.
	(sgtk_scm2slist): Correctly terminate the GSList.  (Thanks to
	Matthias Clasen)
	(sgtk_slist_finish): New.
	(sgtk_list2scm, sgtk_scm2list, sgtk_list_finish): New.  (Thanks to
	Matthias Clasen, but the bugs are mine)
	(sgtk_cvec_free): Removed.
	(sgtk_cvec_finish): New.

	* guile-gtk.h (sgtk_valid_point, sgtk_scm2point, sgtk_point2scm,
	sgtk_valid_complen, sgtk_slist_finish, sgtk_list2scm,
	sgtk_scm2list, sgtk_list_finish, sgtk_cvec_finish): New.

	* examples/test-gdk.scm: Much cooler now.

1998-11-27  Raja R Harinath  <harinath@cs.umn.edu>

	* gtk-1.1.defs (GtkWidgetFlags): Update from gtk+/gtk/gtk.defs.
	(gtk_widget_basic): Comment out (xref gtk+/ChangeLog: 
	Wed Nov 18 22:54:36 1998  Tim Janik  <timj@gtk.org>).
	(gtk_clist_set_policy): Comment out (xref gtk+/ChangeLog:
	Wed Nov 19 01:22:42 1998  Tim Janik  <timj@gtk.org>).
	(gtk_container_disable_resize): Likewise.
	(gtk_container_enable_resize): Likewise.

1998-11-17  Marius Vollmer  <mvo@zagadka.ping.de>

	* gnome-guile-checks.m4: Copied new version from ../macros.  This
	was already in 0.12.

1998-11-15  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.12.
	
	Being good friend with both gtk-1.0 and gtk-1.1.

	* configure.in (INSTALLED_DEFS_FILES): No longer used, removed all
	code to figure it out.
	(GTK_VERSION, GUILE_GTK_VERSION, LIBGUILEGTK_VERSION): New substs.
	(AC_OUTPUT): Added gtk/dynlink.scm.
	
	* Makefile.am (bin_PROGRAMS): Use GUILE_GTK_VERSION to set program
	name at configure time.
	(lib_LTLIBRARIES): Use LIBGUILEGTK_VERSION.
	(EXTRA_PROGRAMS, EXTRA_LTLIBRARIES): New.
	(guile_gtk_SOURCES, guile_gtk_LDFLAGS, guile_gtk_LDADD): Copied to
	both guile_gtk_1_0_* and guile_gtk_1_1_*.  Removed original.
	(libguilegtk_la_SOURCES, libguilegtk_la_LDFLAGS,
	libguilegtk_LIBADD): Copied to both libguilegtk_1_0_la_* and
	libguilegtk_1_1_la_*.  Removed original.
	(libguilegtk_la_1_0_LDFLAGS, libguilegtk_la_1_1_LDFLAGS): Added
	explicit -rpath.
	(toolkitsdir): Removed.
	(install-exec-local): New, make versioning symlink for guile-gtk.
	(vgtkmoduledir, vscmsrcdir): New, point to right module directory.
	(install-data-local): Use vgtkmoduledir and vscmsrcdir to install
	versioned Scheme files.  Don't install toolkits/ stuff.
	(gtkdefs, gdkdefs): New.
	(EXTRA_DATA): Removed.
	(defs_DATA): Use gtkdefs and gdkdefs to pick up the right
	versions.
	(CLEAN_FILES): Added gdk-glue.c, gtk-glue.c and main.c.
	(gtk-glue.c, gdk-glue.c, main.c): Use gtkdefs and gdkdefs to pick
	up the right versions.
	(EXTRA_DIST): Distribute new files.  Don't distribute
	toolkits/gtk.scm.
	(dist-hook): New.
	
	* build-guile-gtk.in (emit-glue): Emit code to register
	`other-inits' modules at initialization time.

	* gtk-1.0.defs: Copied from gtk.defs.  Import gdk-1.0.defs instead
	of gdk.defs.
	(GtkProgressBar): New field `percentage'.
	* gtk-1.0.defs.guile: Copied from gtk.defs.guile.  Added other-inits
	option.
	* gdk-1.0.defs: Copied from gdk.defs.
	* gdk-1.0.defs.guile: Copied from gdk.defs.guile.  Added other-inits
	option.
	
	* gtk-1.1.defs: Copied from gtk.defs.  Import gdk-1.1.defs instead
	of gdk.defs.
	* gtk-1.1.defs.guile: Copied from gtk.defs.guile.  Added other-inits
	option.
	* gdk-1.1.defs: Copied from gdk.defs.
	(GdkEventType): Reactivate GTK_DRAG_* and GTK_DROP_* members.
	* gdk-1.1.defs.guile: Copied from gdk.defs.guile.  Added other-inits
	option.

	* gtk/dynlink.scm.in: Copied from gtk/dynlink.scm.
	(sgtk-dlopen): New.
	(dlopen-libtool-library): Use sgtk-dlopen instead of %sgtk-dlopen.
	
	(default-module-prefix, module-prefix, gtk-version-set,
	gtk-version-alias): New.

	* gtk-1.0/gtk.scm: Copied from gtk/gtk.scm.  Call gtk-version set
	before merging the compiled code.
	(gtk_major_version, gtk_minor_version): New.
	* gtk-1.0/gdk.scm: Copied from gtk/gdk.scm.  Call gtk-version set
	before merging the compiled code.
	(gdk_major_version, gdk_minor_version): New.

	* gtk-1.1/gtk.scm: Copied from gtk/gtk.scm.  Call gtk-version set
	before merging the compiled code.
	(gtk_major_version, gtk_minor_version): New.
	* gtk-1.1/gdk.scm: Copied from gtk/gdk.scm.  Call gtk-version set
	before merging the compiled code.
	(gdk_major_version, gdk_minor_version): New.

	* gtk/gtk.scm, gtk/gdk.scm: Reduced to a single call to
	gtk-version-alias.

	* guile-gtk.c (sym_gtk_version): New.
	(sgtk_init_substrate): Use sym_gtk_version as the module prefix.

	* guile-gtk.h (GtkWidgetFlags): Only define for GTK_MAJOR_VERSION
	== 1 and GTK_MINOR_VERSION == 0.
	
1998-10-25  Marius Vollmer  <mvo@zagadka.ping.de>

	* gnome-guile-checks.m4: Copied new version from ../macros.
	
	* test-gdk.scm (arc-drawer-new): Corrected non-RnRS use of
	internal defines.

	* dynlink.scm: Added some comments and move others around to
	hopefully improve legibility.
	(find-soname): Removed unused definition of string-string.

	* gtk.scm (gtk-repl): Corrected non-RnRS use of internal defines.

	* gdk.defs (GdkEventType): Comment out GDK_DRAG_* and GDK_DROP_*
	members because they are not in Gtk 1.0.6.  See general comment
	about "Gtk versions" in README.

	* ChangeLog: fixed typo in the entry from 1998-10-12 that might
	have confused mechanical greps.

	* README: Tell them to run test-gtk.scm while the examples
	directory is current.  This enables it to find the test pixmap.

	* configure.in: Bumped version number to 0.12a.

	* guile-gtk.c (sgtk_find_missing_types, sgtk_try_missing_type):
	New.
	(sgtk_fillin_type_info): Call sgtk_try_missing_type when Gtk can't
	find it.  This allows us to patch minor discrepancies between our
	defs files and the Gtk run-time system.

1998-10-24  Martin Baulig  <martin@home-of-linux.org>

	We cannot rely upon the fact that dlopen () is doing the
	LD_LIBRARY_PATH search for us, this is not the fact on BSD-like
	systems.

	* guiledlopenhelper.c (sgtk_dlopen): This function now takes an
	additional parameter which is the full pathname of the library,
	it is only used	on systems where dlopen () requires a full path
	name. Otherwise we let dlopen () do the LD_LIBRARY_PATH search.

	* gtk/dynlink.scm (search-path-extended): New function.
	(search-path): First try to find the library without a version
	suffix, if this	fails we call `search-path-extended' to find things
	like /usr/lib/libm.so.2.0 when there's no /usr/lib/libm.so.
	(dlopen-libtool-library): Don't call %sgtk-dlopen () if the library
 	cannot be found.
	(init-dlopen-funcs): Call `find-soname' for "libguiledlopenhelper"
	and use the full pathname in the call to `dynamic-link'.

	* NEWS: Added note that dynamic linking is working on FreeBSD.

1998-10-24  Martin Baulig  <martin@home-of-linux.org>

	* gdk.defs (GdkEventType): Keep this in sync with gdktypes.h.
	
1998-10-12  Martin Baulig  <martin@home-of-linux.org>

	* Makefile.am: Let the `Makefile' depend upon $(BUILT_SOURCES).
	This is required to get dependencies correctly.

1998-10-11  Marius Vollmer  <mvo@zagadka.ping.de>

	* gnome-guile-checks.m4: Copied new version from
	gnome-guile/macros/

1998-10-03  Marius Vollmer  <mvo@zagadka.ping.de>

        Released 0.11.

	* guiledlopenhelper.c (sgtk_dlopen): Do not include name of
	library in error message, it is already included in the string
	from dlerror().

	* calc.scm: Invoke guile-gtk with "$0" "$@" for extra correctness.


1998-09-25  Christopher Blizzard  <blizzard@appliedtheory.com>

	* autogen.sh: use $ACLOCAL_FLAGS when running aclocal so that the
 	gnome .m4 files don't have to be installed in the normal path.

1998-08-21  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_fillin_type_info): Fix wrong logic in
	condition.  We need to fill when info->type is a fundamental type,
	but not GTK_TYPE_OBJECT or GTK_TYPE_INVALID.

	* build-guile-gtk.in (emit-defined-func): Use the scm-name option
	for the Scheme name of a function, if it exists.
	(emit-funcs): Register new type `full-callback' for the full
	variant of callbacks.

	* gtk.defs (gtk_input_add_full): New definition.
	* gtk.defs.guile: Use scm-name option to give gtk_input_add_full
	the Scheme name "gtk-input-add".
	
1998-08-20  Raja R Harinath  <harinath@cs.umn.edu>

	`gtk_input_add_interp' was removed in `gtk+' recently.
	* gtk-compat.h: Comment out gtk_input_add_interp.
	* gtk.defs: Likewise.
	* gtk.defs.guile: Likewise.

1998-07-25  Marius Vollmer  <mvo@zagadka.ping.de>

	Prevent guile-gtk from registering missing types with Gtk+.
	
	* guile-gtk.c (gtk_type_register_builtin): Removed.
	(sgtk_register_type_infos): Do nothing with the sgtk_type_infos
	except putting them on the ALL_TYPE_INFOS list.  Do not try to
	find them and do not create them when they are missing from Gtk+'s
	run-time type system.  Do not enter them into our type info table.
	(sgtk_fillin_type_info): New function to perform the things on
	demand that sgtk_register_type_infos used to do.
	(sgtk_find_type_info): Try to find the sgtk_type_info in
	ALL_TYPE_INFOS when it is not found in the table.
	(sgtk_boxed2scm): Call sgtk_fillin_type_info.
	(sgtk_find_object_info): Return NULL when the found type_info is
	not for an GTK_TYPE_OBJECT.
	
	* Makefile.am (EXTRA_DIST): Distribute "continuations.scm", not
	"continuations.h", silly me.  Distribute "gnome-guile-checks.m4".

Wed Jul 22 00:01:07 1998  Tom Tromey  <tromey@cygnus.com>

	* gnome-guile-checks.m4: If no build-guile, link against readline
	before termcap.

1998-07-21  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk.defs (GtkProgressBar): Removed "percentage" field so that it
	compiles again.

1998-07-12  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_valid_double, sgtk_double2scm,
	sgtk_scm2double): New functions.
	(sgtk_arg2scm, sgtk_scm2arg, sgtk_scm2ret): Use them for
	GTK_TYPE_DOUBLE.
	(sgtk_find_object_info_from_type, sgtk_find_object_info,
	sgtk_build_args): Made non-static.

	* guile-gtk.h (sgtk_valid_double, sgtk_double2scm,
	sgtk_scm2double, sgtk_find_object_info_from_type,
	sgtk_find_object_info, sgtk_build_args, gdk_event_button): New
	prototypes.

	* gtk-support.c (gdk_event_button): New function.
	* gdk.defs.guile (gdk_event_button): New definition.

	* build-guile-gtk.in (emit-funcs): Register "double" type.

1998-07-11  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_find_arg_info): Do not use
	gtk_object_get_arg_type for long names.  Instead, search the
	object_info of the class part of the name, and start the search
	for the short name there.

1998-07-03  Raja R Harinath  <harinath@cs.umn.edu>

	* guile-gtk.c (gtk_type_register_builtin): Improve fix.  Use
	`memset' to initialize all fields, known or unknown, named or
	renamed, to 0.

1998-07-01  Jens Lautenbacher  <jens@tellux.de>

	* gtk.defs: (GtkSpinButtonUpdatePolicy) Grr. Is a enum in gtk, not
 	a flag.

1998-06-30  Jens Lautenbacher  <jens@tellux.de>

	* guile-gtk.c (gtk_type_register_builtin): removed arg_set_func
 	and arg_get_func to make it compile against new gtk versions.

1998-06-24  Raja R Harinath  <harinath@cs.umn.edu>

	* Makefile.am (gtk-glue.c): Tell build-guile-gtk.in to look in
	$(srcdir) for files to (import ...).
	(gdk-glue.c): Likewise.
	(main.c): Likewise.

1998-06-24  Jens Lautenbacher  <jens@tellux.de>

	* gtk.defs: (GtkSpinButtonUpdatePolicy) Removed obsolete
 	GTK_UPDATE_SNAP_TO_TICKS flag.

1998-06-20  Marius Vollmer  <mvo@zagadka.ping.de>

	* README: Added pointers to simple-gtk and wickel.

	From lutterdc@cs.purdue.edu (David Lutterkort):
	* gtk.defs (GtkButton): Add `child' to field option.
	(gtk_file_selection_show_fileop_buttons,
	gtk_file_selection_hide_fileop_buttons): New definitions.

1998-06-16  Marius Vollmer  <mvo@zagadka.ping.de>

	* examples/continuations.scm: New file.
	* Makefile.am (EXTRA_DIST): Distribute it.

1998-06-14  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk/dynlink.scm (do-libtool-link): Beautify warning message when
	a library could not be loaded.

	* gtk.defs: Corrected first line to use the string expected by
	configure to decide whether to install gtk.defs or not.
	Inactivated all stuff that refers to accelerators.
	
	* guiledlopenhelper.c (sgtk_dlopen): Print dlerror message to
	stderr when dlopen returned NULL.

	* guile-gtk.c (enter_proxy): Cast arguments to g_hash_table_new to
	GHashFunc and GCompareFunc, respectively.
	(sgtk_valid_composite): Use scm_ilength to test whether OBJ is a
	list.  Simplify loop over all list elements accordingly.
	(sgtk_slist2scm): Changed "gpointer" to "void".
	(sgtk_scm2slist): Changed "gpointer" to "void".  Allow SCM_EOL to
	be a list, too.
	(sgtk_scm2cvec, sgtk_cvec_free): New.
	* guile-gtk.h (sgtk_slist2scm, sgtk_scm2slist): Changed "gpointer"
	to "void".
	(sgtk_cvec, sgtk_scm2cvec, sgtk_cvec_free): New.
	(GtkWidgetFlags): Only define if G_ENUM isn't defined.

	* build-guile-gtk.in (emit-composite-helpers): Changed "gpointer"
	to "void".
	(realize-slist-type): Only types that don't have the fit-for-list
	property can't be used in lists, not those where
	scm2c-does-type-checking.
	(realize-cvec-type): New.
	(realize-type): Added case for `cvec' types.
	(register-boxed-converter, register-object-type): Set fit-for-list
	property.
	(emit-funcs): Set fit-for-list property for string, static_string,
	int, uint types.
	
	* gnome-guile-checks.m4: Copied from "../macros/".
	* autogen.sh: Changed -I location from "../macros" to "."
	* Makefile.am: Added ACLOCAL_AMFLAGS variable to pass "-I ." to
	aclocal when run by make.
	(EXTRA_DIST): Distribute README.gnome-guile.

	* examples/calc.scm: Read and push all values that are in the
	entry, not just the first.

1998-06-11  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk.defs: Correctly specify GtkBin as the base of GtkEventBox.
	Thanks to Jeff Dike.

1998-06-07  Marius Vollmer  <mvo@zagadka.ping.de>

	* configure.in: Bump version number to `0.11a'.

1998-06-04  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* Makefile.am (EXTRA_DIST): Removed README.libtool rule, as there
	is no such file.

1998-06-03  Martin Baulig  <baulig@merkur.uni-trier.de>

	* configure.in: Using GNOME_CHECK_GUILE again; I improved this macro
	a little bit, it makes sure guile really works and has a failflag
	like GNOME_INIT. In general, I think it is better to use a macro
	from the `macros' directory since this can more easily be changed.

	* acconfig.h (HAVE_GUILE): New tag.

	* Makefile.am (INCLUDES): Added $(GUILE_INCS).

	* autogen.sh: Added `-I ../macros' to invocation of `aclocal'.

1998-06-02  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk-compat.c: Include <gdk/gdkx.h> for GDK_ROOT_PARENT.
	(gtk_pixmap_new_interp): Call gdk_pixmap_create_from_xpm with
	GDK_ROOT_PARENT as window.  This is probably not correct, is it?
	
1998-05-31  Marius Vollmer  <mvo@zagadka.ping.de>

	First traces of composite types (lists and arrays).
	
	* build-guile-gtk.in (printable): New function.
	(make-type): Replace optional c2args parameter with more general
	`props' mechanism.  Changed callers.
	(type-prop): New function.
	(type-scm2c-does-type-checking): New function to remove
	overloading of type-isa.  See comment.
	(type-c2args): Use type-prop.
	(type-free): New function.
	(emitted-helpers, emit-composite-helpers, realize-slist-type,
	realize-type): New
	(lookup-type): Use assoc instead of assq to make it work with
	types that have lists as names.
	(emit-func): Call realize-type for every parameter type and the
	return type.  Use type-scm2c-does-type-checking instead of
	type-isa to figure out whether scm2c does type checking. Emit code
	to cleanup the converted parameters after the C function has been
	called.
	(register-type 'int, register-type 'uint): Always emit a useable
	type checker. Use scm2c-does-type-checking to signal that, well,
	scm2c does type checking.

	* gtk.defs (gtk_radio_button_group): New function.

	* guile-gtk.h (sgtk_valid_composite, sgtk_slist2scm,
	sgtk_scm2slist): New prototypes.
	* guile-gtk.c (sgtk_valid_composite, sgtk_slist2scm,
	sgtk_scm2slist): New functions.
	

1998-05-30  Marius Vollmer  <mvo@zagadka.ping.de>

	* autogen.sh, cleanit.sh: New.

1998-05-24  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.10
	
	* guiledlopenhelper.c: New.

	* Makefile.am (lib_LTLIBRARIES): Add libguiledlopenhelper.la
	(libguiledlopenhelper_la_SOURCES,
	libguiledlopenhelper_la_LDFLAGS): New.
	(EXTRA_DIST): List new files from the examples/ directory.

	* build-guile-gtk.in (read-link-info): Convert init-func to a
	symbol before using it as a key.

	* example/Makefile.am, example/configure.in, example/foo.c,
	example/foo.h, example/foo.defs, example/foo.defs.guile,
	example/foo.scm, example/test-foo.scm: New.

	* gtk/dynlink.scm (pk, this-module, init-dlopen-funcs): New.
	(search-path): New function.
	(find-libtool-library): Use it.
	(default-lib-path): Search LD_LIBRARY_PATH before
	"/usr/local/lib".
	(find-soname): New.
	(dlopen-libtool-library): Use "libdir" from .la file for locating
	the real shared object.  Call init-dlopen-funcs.  Use %sgtk-dlopen
	instead of dynamic-link.  Use find-soname for the fallback case.
	Do not print warning here when fallback fails, too.
	(do-libtool-link): Print warning here, instead.
	(merge-compiled-code): Throw error when dlopen-libtool-library
	returns #f.  Use %sgtk-dlinit for dynamically linked functions.
	Still use dynamic-call for functions found in registered-modules.
	
1998-05-23  Marius Vollmer  <mvo@zagadka.ping.de>

	* Makefile.am (libguilegtk_la_LIBADD): Removed GUILE_LIBS.  The
	GUILE_LIBS are already provided by the guile executable and are
	likely to contain static libraries, which complicate dynamic
	linking.

	* gtk/dynlink.scm (find-libtool-library): Take path to search as
	parameter.  Return `#f' on failure instead of throwing.
	(default-lib-path): New function.
	(libtool-library-dlname): Removed (superseded by the following).
	(libtool-library-info): New function.
	(dlopen-libtool-library): Take optional path parameter.  Link all
	dependency_libs before linking this one.  Try ".so" lib when no
	".la" file could be found or it contains no dlname.  Merely print
	warning and return #f when library could not be linked.
	(make-word-scanner): New function.
	(do-libtool-link): New function.

	* gtk.defs (gtk_entry_new_with_max_length): Declare return type as
	GtkWidget, not none.

	* ltconfig: Remove inter-library dependency hack.  We are now back
	to using the official libtool.
	
1998-05-16  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.9

	* ltconfig, ltmain.sh, README.libtool: Upgraded to libtool 1.2a.
	ltconfig is patched to make inter-library dependencies appear to
	work on GNU/Linux.

	* Makefile.in: Upgraded to automake 1.3.
	
	* Makefile.am (main.c): Generate from gtk.defs and gdk.defs
	instead of from the *.defs.guile files.  Include gtk.defs and
	gdk.defs in dependencies.

	* build-guile-gtk.in (form-options): Handle `define-object' and
	`define-boxed'.
	(emit-boxed-info): Get copy, free and size from the form options.
	(emit-field-accessors): Emit setter function when requested.
	(emit-funcs): Emit field accessors of boxed types.
	(emit-main): Use SGTK_REGISTER_GLUE instead of explicit module
	magic.

	* configure.in: Signal error when the right version of Gtk+ could
	not be found.  Check for qt_abort, not qtabort.

	* gdk.defs: Changed all `define-boxed' statements to new syntax,
	so that they can have options.
	(GdkVisibilityState, GdkInputSource): New enum definitions.

	* gdk.defs.guile: Added large number of GdkEvent accessor
	functions.

	* gtk/gtk.scm (gtk-standalone-main): New function.

	* gtk-support.c: Added large number of GdkEvent accessor
	functions.

	* gtk.defs: Changed all `define-boxed' statements to new syntax,
	so that they can have options.

	* guile-gtk.c (sgtk_init_noargs, sgtk_init, sgtk_init_with_gtk,
	sgtk_init_argv, sgtk_init_with_args): Renamed sgtk_init_noargs to
	sgtk_init.  Renamed sgtk_init_with_gtk to sgtk_init_with_args.
	Removed sgtk_init_argv.  Changed all callers.
	(sgtk_register_glue): New function.

	* guile-gtk.h: Updated to reflect guile-gtk.c and gtk-support.c
	
Mon May 11 00:33:27 1998  Marius Vollmer  <mvo@diaspora>

        * Makefile.am (gtkmoduledir): New installation directory.
	(install-data-local): Make $(gtkmoduledir) and populate it.
	(BUILT_SOURCES): Removed "gtk-glue.x", "gdk-glue.x" and "main.x".
  	Added "gtk-support.x".
	(CLEANFILES): Removed "gtk-glue.x", "gdk-glue.x".  Added
 	"gtk-support.x".
	(EXTRA_DIST): Added "README.libtool", "gtk/gdk.scm" and
 	"gtk/dynlink.scm".
	(main.c): New target.  "main.c" is now generated by
 	build-guile-gtk, too.

	* build-guile-gtk.in (*imported-initfuncs*): New variable.
	(read-file): New argument BACKEND.  Code for processing all
 	statements except `import' and `include' removed, call BACKEND
 	instead to do the processing.
	(glue-backend): New function to perform the processing formerly
 	done by read-file.
	(*inits*, add-init): New toplevel definitions.
	(emit-func): Do not emit "SCM_PROC" directives.  Directly generate
 	its definition instead and remember an appropriate
 	"scm_make_gsubr" with add-init.  Renamed "c_ret" to "cr_ret"
 	throughout.
	(->c-identifier, module->cfunc, module->cname): New unused
 	functions.
	(emit-glue): New function.
	(read-link-info, init-func->module-name, emit-main, run-system,
 	link-flags, do-link): New functions.
	(maybe-next-arg, rest-args): New functions.
	(defs-file): Removed.
	(at toplevel): Do not read "defs-file".  Moved most of the code
 	for the "glue" command into emit-glue.  New commands "main",
 	"libs", "cflags" and "link".

	* gdk.defs.guile: Removed snarf-file option.  Changed
 	init-func option to "sgtk_init_gtk_gdk_glue".
	
	* gtk.defs.guile: Removed snarf-file option.  Changed init-func
 	option to "sgtk_init_gtk_gtk_glue".  Added extra-init-code option
 	for calling sgtk_init_gtk_support.

	* gtk-support.c: Moved SCM_PROCs from guile-gtk.c to here.
	(sgtk_init_gtk_support): New function.

	* guile-gtk.c: Move Guile compatabilityy stuff from guile-gtk.h to
	here. Moved all SCM_PROCs to gtk-support.c
	(get_type_info, sgtk_get_type_info): Renamed.  Changed all
	callers.
	(sgtk_register_type_infos): Call sgtk_init_noargs.
	(sgtk_string_conversion): Only call SCM_COERCE_SUBSTRING on proper
	strings.
	(sgtk_init, sgtk_init_substrate): Renamed sgtk_init to
	sgtk_init_substrate and made static. Do not call
	sgtk_init_gdk_defs and sgtk_init_gtk_defs.
	(sgtk_inited): New variable.
	(sgtk_init_with_gtk): Return immediatly when we have already been
	inited.  Set sgtk_inited to 1 after initiliazing.
	(sgtk_init_noargs): Made non-static.
	(hack_compiled_switches): Moved from "main.c".
	(sgtk_shell): Moved from "main.c".  Call sgtk_init_with_gtk.

	* guile-gtk.h: Moved Guile compatability stuff to "guile-gtk.c".
  	(sgtk_get_type_info, sgtk_callback_trampoline, sgtk_shell): New
 	prototypes.

	* libtool: Updated to version 1.2.  Read README.libtool.

	* toolkits/gtk.scm: Contents moved to "gtk/gtk.scm".  Throw error
 	when loaded.

	* gtk/gtk.scm: Moved contents of "toolkits/gtk.scm" here.  Renamed
 	to be the (gtk gtk) module.  Don't use (gtk gtkstubs) module.  Use
 	(gtk dynlink) module.  Call merge-compiled-code instead of
 	merge-exports.
	(merge-exports): Removed.
	(gtk-update): Made public.
	(gtk-show-error): Set text to `#f' when the window is destroyed.
	(gtk-standalone-main): New function.
	
	* gtk/gdk.scm: New file.
	* gtk/dynlink.scm: New file.
	
Wed May  6 01:01:16 1998  Marius Vollmer  <mvo@diaspora>

	* toolkits/gtk.scm (gtk-destroyed?): Removed.

Sat May  2 19:46:53 1998  Marius Vollmer  <mvo@diaspora>

	* build-guile-gtk.in (emit-object-info): Fixed typo in emitted
 	code.
	(register-enum-converter): Added optional argument to specify C
 	name of type.
	(emit-funcs): Use it to make string-enums use "gchar*".

	* configure.in: Use "test -f" instead of "test -e".
	Do not call AC_PROG_LN_S.

	* gtk.defs (gtk_events_pending): New definition.
	* toolkits/gtk.scm (gtk-update): New function.
	
Mon Apr 27 00:14:02 1998  Marius Vollmer  <mvo@diaspora>

	* build-guile-gtk.in (import-path, add-import-dir,
 	search-in-path): New variable/functions.
	(with-input-from-defs-file): Use search-in-path.  Do not change
 	current working directory while reading.  Call PROC with the full
 	name of the file, not just the basename.
	(read-file-2): Changed accordingly.
	(register-type 'string): Implement c2sm converter with
 	scm_take0str.
	(usage): put "[OPTIONS]" after "OP".
	(next-arg, peek-arg): New functions.
	(opsym, defs-file): Use next-arg to get the values.  Additionally,
 	handle "-I" options.

	* gtk.defs (GtkAdjustment): List all accessible fields.
	(GtkText): Added `hadj', `vadj' fields.

	* guile-gtk.c (sgtk_arg2scm): New argument `free_mem'.  When
 	free_mem is true, free memory of GtkArg value for GTK_TYPE_STRING.
	(callback_trampoline, sgtk_callback_trampoline): New
 	variabale/function.
	(inner_callback_marshal): Use callback_trampoline.
	(sgtk_find_arg_info): Do not return pointer to static GtkArg info
 	structure, instead fill in new `GtkArg *arg' parameter.  Changed
 	callers.  Use `gtk_object_get_arg_type' for long names.
	(sgtk_gtk_widget_new, sgtk_gtk_widget_set): Removed.  Use
 	sgtk_gtk_object_new/sgtk_gtk_object_set instead in the SCM_PROC
 	lines.
	(sgtk_gtk_object_get): New function.
	(sgtk_init): Initialize callback_trampoline.

	* guile-gtk.h (sgtk_arg2scm): Update prototype for new free_mem
 	argument.

	* gtk.scm (gtk-show-error): New function.
 	(call-with-error-catching): Removed label argument. Call
 	gtk-show-error instead of printing to current-error-port.
	(gtk-signal-connect*): Removed.
	(at toplevel): Set callback-trampoline to wrap callbacks with
 	`with-error-catching'.
	
Sat Apr 25 22:19:24 1998  Marius Vollmer  <mvo@diaspora>

	* Makefile.am (gdk-glue.c, gtk-glue.c): Depend on
 	build-guile-gtk.in.  Use build-guile-gtk.in instead of
 	build-guile-gtk.  The substitutions are not needed for this
 	package and depending on configure generated files causes the glue
 	code to be regenerated during make by mere users.
	(EXTRA_DIST): Do not list build-guile-gtk.  Include
 	examples/test-gdk.scm.

	* build-guile-gtk.in: Renamed main module to build-guile-gtk.
	(emit-object-info): New function.
	(emit-type-info): Call it and include object info in type_infos.
  	This object info is needed to make gtk-object-new work with named
 	types.
	(type-isa, type-scm2c): New rule: when type-isa return `#f' for a
 	type, expect type-scm2c to do type checking and pass it more args
 	to do this job.
	(emit-func): Perform scm->c conversion during type checking when
 	type-isa returns #f for a argument type.
	(register-type 'int): Use "gint" for C type, return #f for
 	type-isa, use scm_num2long, scm_long2num for conversion.
  	scm_num2long does type checking.
	(register-type 'uint): Likewise, for unsiggned ints.
	(register-object-type 'GtkObject): Removed.
	(emit-funcs): Correctly get object options from the cdddr.

	* configure.in (AM_PATH_GTK): Request version 1.0.0.

	* gtk-support (gdk_event_x, gdk_event_y): Support
 	GDK_BUTTON_RELEASE.

	* gtk.defs: Add definition of GtkObject.

	* guile-gtk.c (DEBUG_GC, DEBUG_PRINT): Renamed DEBUG_GC to
 	DEUG_PRINT thru out.
	(sgtk_register_type_infos): Ignore sgtk_object_infos while
 	preparing builtin types.
	(sgtk_arg2scm, sgtk_scm2arg, sgtk_scm2ret): Renamed old
 	sgtk_scm2arg to sgtk_scm2ret.  Changed all callers.  New function
 	sgtk_scm2arg that uses the GTK_VALUE_* macros.  Added support for
 	all useful fundamental types.
	(sgtk_find_object_info, sgtk_find_object_info_from_type, xstrndup,
 	sgtk_find_arg_info, sgtk_build_args, sgtk_gtk_oject_new,
 	sgtk_gtk_widget_new, sgtk_gtk_objectc_set, sgtk_gtk_widget_set):
 	New functions.

	* guile-gtk.h (sgtk_object_info): New structure type.
	(sgtk_scm2arg, sgtk_scm2ret): Updated prototypes.

	* toolkits/gtk.scm (call-with-error-catching, with-error-catching,
 	gtk-signal-connect*): New functions/macro.
	
Thu Apr 23 23:37:57 1998  Marius Vollmer  <mvo@diaspora>

	Almost complete rewrite of the inner workings and the code
 	generation process.

	* Makefile.am
	(schemedir): Removed.
	(sitedir): Use $prefix instead of GUILE_SCMDIR.
	(bin_SCRIPTS): Added build-guile-gtk.
	(guile_gtk_LDFLAGS): Removed $GTK_LDFLAGS.
	(libguilegtk_la_SOURCES): Removed guile-compat.h, gtk-compat.h,
 	gtk-funcs.c, gtk-types.c, gtk-types.h.  Added gtk-support.c
 	gdk-glue.c, gtk-glue.c instead.
	(install-data-local): New target to install toolkits/gtk.scm by
 	hand.
	(defsdir, defs_DATA): New install variable for installing the
 	`*.defs' files.
	(BUILT_SOURCES): Removed gtk-types.h,, gtk-types.c, gtk-funcs.c
 	and gtk-funcs.x.  Added gdk-glue.c, gdk-glue.x, gtk-glue.c and
 	gtk-glue.x.
	(CLEAN_FILES): Removed gtk-funcs.x.  Added gdk-glue.x, gtk-glue.x.
	(guile-gtk.x, gtk-funcs.x, main.x, gtk-funcs.c, gtk-types.c,
 	gtk-types.h, install-exec-hook): Removed these targets.
	(gdk-glue.c, gtk-glue.c): New targets.
	(EXTRA_DIST): Removed PROPOSAL, guile.details, gen-typeinfo,
 	gtk-interp.patch.  Added gdk.defs, gdk.defs.details,
 	gtk.defs.details, build-guile-gtk.  Correctly reflect new location
 	of calc.scm, test-gtk.scm, hellow-world.scm.  Added
 	examples/test-gdk.scm.

	* build-guile-gtk.in: Renamed from gen-typeinfo.  Include
 	mini-format module inline and avoid dependency on SLIB/format.
  	Put main code into `build-guile-gtk' module.
	(defsdir): New variable.
	(*extra-options*, register-extra-options, extra-options,
 	*global-options*): New definitions to deal with options.
	(dirname, basename): New functions.
	(read-file): Incorporated `read-import-file' functionality. Search
 	also in defsdir.  Change cwd to the directory of the defs file
 	that is being read.  Handle new `import', `include', `add-options'
 	and `options' statements.  Read *.defs.guile file if it exists.
	(@, @@): Use mini-format instead of format.
	(string-map): Removed.
	(string-upcase, string-downcase): Use string-copy and
 	string-upcase!/string-downcase! instead of string-map.
	(canonicalize): Do not convert syllables to lowercase.
	(funcname): Convert syllables to lowercase.
	(typename): Do not captialize syllables.
	(scmname): Convert syllables to lowercase.
	(short-name): Removed.
	(form-options): New function.
	(undeferred-functions, type-conversions, overridden-funcs,
 	read-detail-file, undeferred, overridden-func): Removed.
	(type-conversion): Use get-opt-val.
	(get-opt): Made global.  New argument to return as default value
 	when option is not found.  Do return cdr of option, not the
 	complete option.  Changed all users.
	(get-opt-val): Made global.
	(emit-enum/flags-info, emit-boxed-info): Generate individual
 	struct object for each type.  Generate "extern" declaration for
 	imported types.
	(emit-infomac, emit-idmacs, emit-ids, emit-idfuncproto,
 	emit-idfunc): Removed.
	(emit-type-info): New function.
	(type-c2scm): Take additional `copy' argument.  Changed all
 	callers and specialized definitions.
	(emit-func): Use options instead of `defer?` argument.  Changed
 	all callers.  Deal with `ret' having options.  Generated code: do
 	not copy return value when `ret' has (copy #f) option.  Do not use
 	`short-name'.
	(emit-defined-func): Set `cur-protection' according to options of
 	function.
	(emit-funcs): Do not emit static set of include directives and
 	initialization function.
	(cur-protection): New local variable of `emit-funcs'.
	(register-type 'bool): Accept every SCM value as a boolean.
	(register-type 'callback): Use `sgtk_protect' with
 	`cur-protection'.
	(register-type 'gpointer): Renamed to `dont-use-gpointer'.
	(usage): Output new usage information.
	(import-file, detail-file): Removed.
	(main actions at toplevel): Do not test for "-import" option.
  	Move reading of definition files into error catching section.
  	Handle only "glue" operation.  Emit include directives and and
 	initialization function here, using stuff from *global-options*.

	* configure.in: (INSTALLED_DEFS_FILES): New substitution.  Checkk
 	whether gtk.defs, gdk.defs should be installed by us and add them
 	to INSTALLED_DEFS_FILES if yes.
	(AC_ACLOCAL_INCLUDE): Removed reference to "../macros".
	(GNOME_INIT): Removed.
	(libqt): Use "qtabort" to check for libqt and not "main".
	(AC_FIND_GUILE_H, AC_FIND_GUILE_LIB, --with-guile-incs,
 	--with-guile-libs): Removed.  Making the compiler search the right
 	places should be handled external to configure, IMO.  And we have
 	build-guile.
	(AC_PATH_X, AC_PATH_XTRA, GTK_LDFLAGS, GTK_LIBS): Removed.  This
 	is handled by gtk-config now.
	(AC_CHECK_FUNCS for Gtk+): Check only for gdk_color_copy and
 	gtk_widget_peek_colormap.
	(GUILE_SCMDIR): Removed.
	(AC_OUTPUT): Generate build-guile-gtk form build-guile-gtk.in and
 	make it executable.

	* examples/calc.scm: Do not handle the "delete_event" on toplevel
 	window.  Only call gtk_exit and gtk_main when we are standalone.

	* examples/test-gtk.scm (create-tooltips): Install tooltips object
 	into global variable to protect it from being collected.  Only
 	call gtk_exit and gtk_main when we are standalone.

	* gtk-compat.c (gtk_radio_menu_item_new_with_label_interp):
 	Renamed to gtk_radio_menu_item_new_with_label_from_widget.
	(gtk_radio_menu_item_new_interp): Renamed to
 	gtk_radio_menu_item_new_from_widget.
	(gdk_colormap_ref, gdk_colormap_unref, gdk_visual_ref,
 	gdk_visual_unref, gdk_window_ref, gdk_window_unref,
 	gdk_event_copy, gdk_event_free, gtk_tooltips_ref,
 	gtk_tooltips_unref, callback_data, unmarshal_callback,
 	gtk_timeout_add_interp, gtk_idle_add_interp, interp_data,
 	remarshal, renotify, gtk_signal_connect_interp,
 	gtk_radio_button_new_interp,
 	gtk_radio_button_new_with_label_interp, gtk_invoke_input_function,
 	gtk_input_add_interp): Removed, phew.

	* guile-gtk.h: Removed prototypes of removed function. Merged
 	remaining contents into guile-gtk.h. Removed file "guile-gtk.h".

	* gtk-support.c: New file for additional hand-written glue code.
	(gdk_color_intern, gdk_font_intern, gtk_style_fg_gc,
 	gtk_style_bg_gc, gdk_event_type, gdk_event_window, gdk_event_x,
 	gdk_event_y): New functions.

	* gtk.defs: Mark as being `installed by guile-gtk'.  Moved all Gdk
 	related definitions to gdk.defs.  Import gdk.defs.
	(GtkWidgetFlags): Added `destroyed' member.
	(gtk_main_level, GTK_OBJECT_DESTROYED): New defintions.
	(GtkWidget): Added `window' field.
	(gtk_clist_clist_set_row_data, gtk_clist_get_row_data,
 	gtk_clist_get_row_data): Commented out. Type gpointer is a no-no.
	(gtk_radio_button_new_interp): Renamed to
 	gtk_radio_button_new_from_widget.
	(gtk_radio_button_new_with_label_interp): Renamed to
 	gtk_radio_button_new_with_label_from_widget.
	(gtk_radio_menu_item_new_with_label_from_widget): Renamed to
	gtk_radio_menu_item_new_from_widget.
	(gtk_radio_menu_item_new_with_label_interp): Renamed to
	gtk_radio_menu_item_new_with_label_from_widget.

	* guile-compat.c: Don't include guile-compat.h, include
 	guile-gtk.h instead.

	* guile-gtk.c: Include guile-gtk.h as <guile-gtk.h> and not
 	"guile-gtk.h" for consistency.  Do not include guile-compat.h,
 	gtk-types.h, gtk-compat.h.
	(DEBUG_GC): New macro to control debugging output during GC.
	(proxy_tab, gpointer_hash, gpointer_compare, enter_proxy,
 	get_proxy, forget_proxy): New variable/functions for associating
 	proxies with gpointers.
	(type_info_tab, n_type_info_tab, enter_type_info, get_type_info,
 	must_get_type_info, all_type_infos, gtk_type_register_builtin,,
 	sgtk_register_type_infos, sgtk_finnd_type_info): New
 	variables/functions for connecting sgtk_type_info structures to
 	GtkType values.
	(sgtk_object_proxy, all_proxies): New type/variables for wrapping
 	GtkObjects with a SCM value.
	(global_protects, mark_traced_ref, tc16_gtkobj_marker_hook,
 	count_traced_ref, gtkobj_marker_hook, gtkobj_marker_hook_print,
 	install_marker_hook): New variables/functions for merging the
 	tracing collector of Guile with thhe ref_counting of GtkObjects.
	(handle_key): Removed.
	(gtkobj_mark): Also mark children of GtkContainers.
	(gtkobj_print): Do not handle proxies whos GtkObject has
 	disappeared.  It wont happen anymore.
	(gtkobj_free): Call gtk_object_unref on the GtkObject and get rid
 	of the proxy structure.
	(sgtk_protect, sgtk_unprotect, sgtk_unprotect_1): Semi-new
 	functions; extensions of the old and removed sgtk_protect_scm and
 	sgtk_unprotect_scm.
	(make_gtkobj): Properly ref/sink the GtkObject but do not connect
 	to the "destroy" signal and do not attach the SCM smob with
 	gtk_object_data.
	(sgtk_wrap_gtkobj): Get the smob with get_proxy and not with
 	gtk_object_get_data.
	(sgtk_destroyed_p, protects, sgtk_protect_scm,
 	sgtk_unprotect_scm): Removed.
	(sgtk_valid_flags): Do not require all bits to have a literal.
	(boxed, boxed_pool, new_boxed, free_boxed): Removed.
	(BOXED_SEQNO): New macro.
	(boxed_equal): Removed.
	(sgtk_boxed2scm): Store the gpointer directly in the cdr and the
 	seqno of the type in the free bits of the car.
	(sgtk_find_boxed_info, sgtk_find_enum_info, sgtk_find_flags_info):
 	Removed.  Changed all callers to use sgtk_find_type_info and casts
 	instead.
	(inner_callback_marshall): Removed jmpbuf argument. This gives
 	warnings for older Guile versions, but they are harmless.
	(sgtk_callback_marshal): Do not invoke callback when the GC is
 	active.
	(sgtk_callback_destroy): Use sgtk_unprotect.
	(standalone_p, sgtk_set_standalone, sgtk_is_standalone,
 	sgtk_standalone_p): New variable/functions.  No idea why I did
 	them in C.
	(sgtk_init): Initialize gtkobj_marker_hook smob and
 	global_protects.  Call install_marker_hook.
	(dgtk_init_with_gtk): Call sgtk_init after gtk_init.

	* guile-gtk.h: Merged in gtk-compat.h and guile-compat.h.
 	(sgtk_type_info): New structure.
	(sgtk_enum_info, sgtk_senum_info, sgtk_boxed_info): Use
 	sgtk_type_info as header.
	(sgtk_enum_infos, sgtk_flags_infos, sgtk_boxed_infos,
 	sgtk_senum_infos): Removed `external' declaration because these
 	arrays are no longer generated.
	(sgtk_register_type_infos): New prototype.
	(sgtk_protect, sgtk_unprotect): New prototypes.
	(sgtk_protect_scm, sgtk_uprotect_scm): Removed.
	(sgtk_callback_marshall): Changed n_args argument to guint.
	(sgtk_set_standalone, sgtk_is_standalone, sgtk_standalone_p): New
 	prototypes.

	* main.c: Do not include guile-compat.h.
	(hack_compiled_switches): Call sgtk_set_standalone(0) when going
 	to start our own event loop.

	* toolkits/gtk.scm: Added some aliases:
	(gtk-radio-menu-item-new -> 
	   gtk-radio-menu-item-new-from-widget)
	(gtk-radio-menu-item-new-with-label ->
   	   gtk-radio-menu-item-new-with-label-from-widget)
	(gtk-radio-button-new ->
           gtk-radio-button-new-from-widget)
	(gtk-radio-button-new-with-label ->
           gtk-radio-button-new-with-label-from-widget)
	(gtk-destroyed? -> gtk-object-destroyed)
	
Sun Mar 29 15:55:55 1998  Tom Tromey  <tromey@cygnus.com>

	* gtk.defs (gtk_combo_disable_activate): New function.  From
 	Daniel Skarda <0rfelyus@atrey.karlin.mff.cuni.cz>.

1998-03-17  Marc Ewing  <marc@redhat.com>

	* removed ltmain.sh and ltconfig

1998-03-16  Marc Ewing  <marc@redhat.com>

	* Makefile.am: replace X_CFLAGS with GTK_CFLAGS
	* configure.in: added:
	  AM_ACLOCAL_INCLUDE(../macros)
	  AM_PATH_GTK
	  GNOME_INIT

Sun Mar 15 16:51:24 1998  Tom Tromey  <tromey@cygnus.com>

	* gen-typeinfo (emit-infomac): n-senums argument to loop comes
	after n-flags, not before.

	* gen-typeinfo (emit-lits): Handle define-string-enum.
	(emit-enum/flags-info): Emit string enum info.
	(emit-infomac): Handle define-string-enum.
	(emit-idmacs): Likewise.
	(emit-funcs): Likewise.
	(register-senum-converter): New function.

	* guile-gtk.h (sgtk_senum_literal, sgtk_senum_info): New types.
	* guile-gtk.c (sgtk_valid_senum): New function.
	(sgtk_senum2scm): Likewise.
	(sgtk_scm2senum): Likewise.

1998-03-15  Sascha Ziemann  <szi@aibon.ping.de>

	* configure.in: added --enable-debug

Sat Mar 14 01:48:24 1998  Tom Tromey  <tromey@cygnus.com>

	* Makefile.am (install-exec-hook): Make symlink, not hard link.

	* toolkits/gtk.scm (let-multi): Comment out.
	Don't require module (ice-9 syncase).

	* guile-gtk.h (sgtk_init_with_gtk): Declare.
	* gtk-guile.c (inner_main): Use sgtk_init_with_gtk.
	* guile-gtk.c (sgtk_init_with_gtk): New function.
	(sgtk_init): Changed interface.  Don't call gtk_init().
	(sgtk_init_noargs): Use sgtk_init_with_gtk.

1998-03-13   Marc Ewing <marc@redhat.com>

	* gtk-compat.h: update to reflect GTK.

Fri Mar 13 23:47:04 1998  Tom Tromey  <tromey@cygnus.com>

	* Makefile.am: Use ROOT to allow libgtkstubs to be relocated.  Use
	`rm -f', not $(RM).  Prefer a hard link over a soft link.

1998-03-11  Sascha Ziemann  <szi@aibon.ping.de>

	* guile-gtk.c (sgtk_init):
	* gen-typeinfo ((emit-funcs defs)):
	* Makefile.am (MKDEP): during MKDEP the .c file must not include the
	.x files either.

Tue Mar  3 10:08:33 1998  Tom Tromey  <tromey@cygnus.com>

	* Makefile.am (BUILT_SOURCES): Include main.x.

Mon Mar  2 00:00:24 1998  Tom Tromey  <tromey@cygnus.com>

	* gtk.defs (gtk_statusbar_push): Added context_id argument
	(gtk_statusbar_pop): Likewise.
	(gtk_statusbar_steal): Removed.
	(gtk_statusbar_get_context_id): New function.
	(gtk_statusbar_remove): Likewise.

	* gen-typeinfo (usage): New function.
	(imported-types): New define.
	(defs): Scan import file if required.
	(read-import-file): New function.
	(import-file): New define.
	(*imported-types*): New define.
	(imported-type?): New function.
	(emit-object-predicate): [emit-funcs] Only emit if not imported
	type.
	(emit-accessor): [emit-funcs] Likewise.

	* Makefile.am (gtk-funcs.c, gtk-types.c, gtk-types.h): Renamed tmp
	files to avoid problems with parallel builds.

1998-03-01  Sascha Ziemann  <szi@aibon.ping.de>

	* toolkits/gtk.scm (let-multi): Added a macro for multiple return
	values. Perhaps a call-with-values would be also usefull.

	* guile-gtk.c (sgtk_init):
	* gen-typeinfo ((emit-funcs defs)):
	* main.c (sgtk_init_main): Added a ifndef for guile-snarf to
	prevent including .x during creating the same

	* Makefile.am (EXTRA_DIST): Removed *.x files created by
	guile-snarf from dist. They depend on the local guile-snarf.

	* run-scheme: New shell script. This is a wrapper for different
	Scheme implementations. Probably usefull, if someone wants to port
	Guile-Gtk to another Scheme implementation.

Fri Feb 27 09:57:45 1998  Maciej Stachowiak  <mstachow@mit.edu>

	* gtk.defs: Update gtk.defs to the latest CVS gtk+ - all widgets
 	and almost all functions should be available. Some that could not
 	yet be added for various reasons are commented out.

1998-02-26  Lauri Alanko  <la@iki.fi>

	* gtk.defs: Added a couple of missing fields

Sat Feb 21 11:50:47 1998  Maciej Stachowiak  <mstachow@mit.edu>

	* gtk.defs: Replaced entry for gtk_tooltips_set_tips with one for
 	gtk_tooltips_set_tip, correcting the number of arguments.	

1998-02-03  Raja R Harinath  <harinath@cs.umn.edu>

	Update to latest CVS `gtk+' changes, enough to get it compiled.
	* gtk.defs (GtkTooltips): `define-object' instead of
	`define-boxed'.
	(GtkWidgetFlags): Comment out GTK_UNMAPPED, GTK_PROPAGATE_STATE,
	GTK_ANCHORED, and GTK_USER_STYLE.  `unmapped', and `anchored' were
	removed from gtk+, others became private.  New GTK_TOPLEVEL
	instead of GTK_ANCHORED.  New GTK_HAS_GRAB.

	* guile-gtk.h (GTK_WIDGET_FLAGS): Delete.  Now in `gtk+'.

1998-01-28  Raja R Harinath  <harinath@cs.umn.edu>

	* Makefile.am (INCLUDES): Add $(includedir).

1997-12-14  Tom Tromey  <tromey@cygnus.com>

	* gtk-compat.h (gtk_text_forward_delete): Define if
	gtk_text_forward_delete not found.
	* gtk.defs (gtk_text_forward_delete): Renamed from
	gtk_text_foreward_delete.
	* configure.in (LDFLAGS): Check for gtk_text_forward_delete.

1997-12-05  Tom Tromey  <tromey@cygnus.com>

	* guile-gtk.c (sgtk_font_conversion): Only run SCM_COERCE_SUBSTR
	once we know the font argument is a string.
	(sgtk_color_conversion): Likewise.
	
	* Makefile.am (SUFFIXES): New macro.
	(.c.x): Include DEFS, INCLUDES, CPPFLAGS on command line.

	* gtk.defs (GtkFileSelection, gtk_file_selection_new,
	gtk_file_selection_get_filename, gtk_file_selection_set_filename):
	New definitions.

1997-11-01  Marius Vollmer  <mvo@zagadka.ping.de>

	* configure.in: Don't touch LIBS while gathering GUILE_LIBS.
	(GTK_LIBS, GTK_LDFLAGS): New variables that contain all Gtk
	libraries and linker flags, including X.
	Use them while checking for Gtk features.
	* Makefile.am (all_xlibs, all_gtklibs): Removed.
	(guile_gtk_LDFLAGS, guile_gtk_LDADD): Use GTK_LDFLAGS and
	GTK_LIBS, respectively, instead of all_gtklibs and all_xlibs.
	(libguilegtk_la_LDFLAGS, libguilegtk_la_LDADD): Likewise.

1997-10-31  Marius Vollmer  <mvo@zagadka.ping.de>

	* gtk.defs (gtk_signal_disconnect): New definition.

1997-10-30  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-compat.c (scm_puts): New compatability function.
	* configure.in: Check whether it is needed.
	
	* configure.in: Don't check for -lX11, -lXext, -lgtk, -lgdk and
	-lgdk.  They simply are supposed to be there.  Set LIBS
	appropriately while checking for Gtk functions.
	* Makefile.am (all_xlibs, all_gtklibs): New variables to aid in
	constructing linker commands.
	(guile_gtk_LDFLAGS): Only include X_LIBS, which contains necessary
	linker flags (despite its name)
	(guile_LDADD): Use all_xlibs and all_gtklibs.
	(libguilegtk_la_LDFLAGS, libguilegtk_la_LIBADD): Likewise.

	* Makefile.am (toolkitdir, toolkit_DATA, schemedir, scheme_DATA):
	Include "toolkits" dir in installed file name, not in location.
	Rename variables accordingly.
	
1997-10-27  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c: Replace scm_gen_puts with scm_puts throughout.
	
	* gtk.defs (gtk_input_add_interp): Change `source' parameter to
	type `file-descriptor', because that is what it is.

	* guile.details: Type conversion for `string' removed.  Overriding
	function definition for gtk_input_add_interp removed.

	* gen-typeinfo (emit-funcs): hard-wire conversion for `string'
	type here.  Renamed `portfd' type to `file-descriptor'.
	
Sun Oct 26 10:49:33 1997  Tom Tromey  <tromey@cygnus.com>

	* configure.in (LDFLAGS): Don't set CFLAGS or LDFLAGS.
	* Makefile.am (INCLUDES): New macro.
	(guile_gtk_LDFLAGS): Added X_LIBS.

	* Makefile.am (sitedir): New macro.
	(toolkitdir): Likewise.
	(site_DATA): Likewise.
	(toolkit_DATA): Likewise.
	(.c.x): Changed from GNU make rule to traditional rule.
	(install-data-local): Removed.

1997-10-25  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_color_conversion, sgtk_font_conversion):
	Coerce argument to a regular string before using it.
	(sgtk_string_conversion): New function used to coerce every string
	argument to a regular string.
	* guile-gtk.h (sgtk_string_conversion): New prototype.

	* guile.details: Use sgtk_string_conversion for all `string'
	arguments.

1997-10-23  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (gtkobj_free): Don't forcibly destroy GtkObjects
	with ref_count of zero.  It is wrong for GtkWindows.  Print a
	warning instead.  The real fix is to correct the ref_counting of
	Gtk.

	* configure.in: Check for AC_PROG_LN_S.  Pass `--version' option
	while checking whether build-guile works.  Set GUILE_LIBS when
	manually checking for Guile libs, not LIBS.  Use AC_MSG_CHECKING
	and AC_MSG_RESULT instead of echo.

1997-10-13  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.7

	* gtk.defs (GtkJustification, GtkCurveType, GtkFundamentalType):
	new enums from Tim Janik.  Thanks!

1997-10-12  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_init_argv): New function.
	guile-gtk.h (sgtk_init_argv): New prototype.

	* gtk.defs (gtk_frame_new): Accept `#f' as the label.

1997-10-11  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c: Include <gdk/gdkprivate.h> to get at gdk_display.
	(sgtk_init): Call gtk_init only when gdk_display is still NULL.

	* gen-typeinfo (emit-funcs): New type `gpointer', but only for
	quick hacks.

	* main.c: Include <config.h> before every other header file.
	* guile-compat.h: Don't include <config.h>.

	* guile-gtk.c: Replace `//' comments with `/* */`

	* gtk.defs, guile.details: Converted to new define-func syntax
	that allows for better extensibility.
	* gen-typeinfo (emit-func): Handle new define-func syntax.

1997-10-10  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-compat.h: Include "config.h" to get the HAVE_SCM_REVERSE_X
	definition.

	* gtk.defs: Added GtkPaned, GtkHPaned, GtkVPaned widgets.

	We no longer link libguilegtk against the guile libs, on the
	assumption that they are already included in the base guile
	application.  In particular, the static libqt.a was causing
	problems on Solaris.
	
	* configure.in: Do not include GUILE_LIBS in LIBS.  Substitute
	GUILE_LIBS into Makefile.  Temporarily add GUILE_LIBS to LIBS
	while checking for libguile functions.

	* Makefile.am (guile_gtk_LDADD): Link against @GUILE_LIBS@.
	(EXTRA_DIST): Distribute hello.scm.

1997-10-09  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.6
	
	* main.c (sgtk_init_main): Include "main.x" instead of
	"gtk-guile.x", silly me.

Wed Oct  8 13:53:39 1997  Marius Vollmer  <mvo@zagadka.ping.de>

	* configure.in: Changed "test ==" to "test =".

1997-10-08  Marius Vollmer  <mvo@zagadka.ping.de>

	* configure.in: Check for scm_reverse_x.
	* guile-compat.h (scm_reverse_x): Define as alias for
	scm_list_reverse_x when not found during configure.

1997-10-07  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (xstrdup): New function.
	(make-argv): Use it for duplicating the strings.

	* guile-compat.h: Define SCM_LIST1 and SCM_LIST2 macros when they
	are not defined already.

	* configure.in: Check whether build-guile works before using it.

	* Makefile.am: Renamed gtk-guile.* to main.* in all places.

	Released 0.5
	
	* guile.details (gtk_input_add_interp): Override definition to use
	a port instead of the integer fd.

	* guile-gtk.c (sgtk_find_enum_info, sgtk_find_flags_info): New
	functions.
	(sgtk_arg2scm): Handle GTK_TYPE_FLAGS.
	(make_argv): New function.
	(sgtk_init_noargs): Use it to get argv back from Guile.
	
	* gtk.defs (gtk_input_add_interp, gtk_input_remove): New
	definitions.

	* gtk-interp.patch: Updated for gtk+970925.

	* gtk-guile.c (hack_compiled_switches, sgtk_shell,
	sgtk_init_main): New functions to start our own repl.
	(inner_main): Call sgtk_init_main.  Call sgtk_shell instead of
	scm_shell.
	
	* gtk-compat.c (gtk_input_add_interp, gtk_input_remove): New
	compatability functions.
	
	* gen-typeinfo: Add support for overriding function definitions in
	the detail file.  New type `portfd'.

	* event-repl.scm: New file.
	* toolkits/gtk.scm: New file.

	* configure.in: Use build-guile and guile to find out certain
	things about the guile installation.  Check for
	gtk_input_add_interp.

	* calc.scm: Use (toolkits gtk) module.

	* Makefile.am (guile_gtk_LDFLAGS): Changed -rdynamic to
	-export-dynamic.
	(libguilegtk_la_LDFLAGS): Removed -rpath, added -export-dynamic
	(gtk-guile.x): New dependency rule.
	(install-data-local): Install event-repl.scm into
	share/guile/site/ and toolkits/gtk.scm into share/guile/
	(install-exec-hook): Make symlink from libguilegtk.so into
	share/guile/toolkits/ so that it can be found for dynamic module
	linking.
	(EXTRA_DIST): Distribute toolkits/gtk.scm, event-repl and
	gtk-guile.x

1997-10-06  Marius Vollmer  <mvo@zagadka.ping.de>

	* guile-gtk.c (sgtk_init_noargs,
	scm_init_toolkits_gtkstubs_module): New functions.
	guile-gtk.h (scm_init_toolkits_gtkstubs_module): New prototype.
	
	* gtk-guile.c (inner_main): Register module instead of
	initializing.
	
1997-09-25  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.4
	
	* gtk.defs: Some additions and rearrangements.

	* guile-compat.c: Include <config.h>
	* gtk-compat.c: Include <config.h>
	(gtk_list_append_item, gtk_list_prepend_item): New interp helper
	functions.

	* gen-typeinfo (emit-funcs): Allow `#f' and NULL as strings.

	* configure.in:  Use AM_CONFIG_HEADER.

	* Makefile.am: Add calc.scm and calcrc to EXTRA_DIST.

1997-09-21  Marius Vollmer  <mvo@zagadka.ping.de>

	Released 0.3

	* guile-gtk.c: Include "gtk-types.h" and "gtk-compat.h".
	(sgtk_wrap_gtkobj): Return SCM_BOOL_F when wrapping a NULL
	pointer.
	(sgtk_main): Removed.
	(sgtk_color_conversion, sgtk_font_conversion): New functions.
	* guile-gtk.h: Add prototypes for them.
	
	* gtk-compat.c (gdk_color_parse_interp): Return NULL when the
	parsing failed.
	(gtk_style_get_white_interp): New function.
	(gtk_widget_peek_colormap): New function, approximation to the
	real gtk_widget_peek_colormap.
	* gtk-compat.h: Add prototypes for above two functions.

	* Makefile.am (EXTRA_DIST): Added guile.details.
	(gtk-funcs.c, gtk-types.c gtk-types.h): Use guile.details for
	generating them.

	* gen-typeinfo: Added support for detail file.  Moved
	SCM_DEFER_INTS before scm->c conversions.  Added support for type
	conversions and function invokation without deferred ints.

	* guile.details: New file to capture all Guile specific interface
	details.

	* configure.in: Check for gtk_widget_peek_colormap.

	* gtk.defs: Minor additions.

	* gtk-interp.patch: Updated for gtk+970916 and my current
	gtk+-interp source tree.
	
1997-09-20  Marius Vollmer  <mvo@zagadka.ping.de>

	* test-gtk.scm (yes-or-no?): New function.
	(create-main-window): Use it for a modal annoyance.

