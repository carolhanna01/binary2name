VERSION = @VERSION@

SHELL = @SHELL@

# This variable makes it possible to move the installation root to another
# directory. This is useful when you're creating a binary distribution of mc.
# If empty, normal root will be used.
# You can run e.g. 'make install DESTDIR=/packages/mc/5.0' to accomplish
# that.
# DESTDIR = /opt/apps/mc/$(VERSION)

# Installation target directories & other installation stuff
prefix = @prefix@
exec_prefix = @exec_prefix@
binprefix =
manprefix =

builddir   = @builddir@
bindir     = @bindir@
sysconfdir = @sysconfdir@
datadir    = @datadir@
libdir	   = @libdir@
mandir     = @mandir@
gnomeicondir = @gnomeicondir@
xv_bindir  = @xv_bindir@
corbadir   = $(sysconfdir)/CORBA/servers
mclibdir   = $(libdir)/mc
desktopdir = $(mclibdir)/desktop-scripts
idldir     = $(prefix)/share/idl
suppbindir = $(mclibdir)/bin
gnewdir	   = $(prefix)/share/mc/templates
tidir      = $(mclibdir)/term
extfsdir   = $(mclibdir)/extfs
confdir    = $(sysconfdir)
icondir    = $(datadir)/pixmaps/mc
syntaxdir  = $(mclibdir)/syntax
localedir  = $(datadir)/locale
man1dir    = $(mandir)/man1
manext     = 1
man8dir    = $(mandir)/man8
man8ext    = 8

top_srcdir = $(rootdir)

# Tools & program stuff
MKINSTALLDIRS = @MKINSTALLDIRS@
SEDCMD = @SEDCMD@
SEDCMD2 = @SEDCMD2@
STRIP = @STRIP@
@SET_MAKE@
CC = @CC@
CPP = @CPP@
AR = @AR@
RANLIB = @RANLIB@
RM = @RM@
RMF = @RM@ -f
MV = @MV@
CP = @CP@
LN_S = @LN_S@
AWK = @AWK@
AWK_VAR_OPTION = @AWK_VAR_OPTION@

# Flags & libs
# No way, to make make happy (except GNU), we cannot use := to append
# something to these, so that's why there is a leading _
XCFLAGS = @CFLAGS@
XCPPFLAGS = @CPPFLAGS@ @MCCPPFLAGS@ -I.. -DBINDIR=\""$(bindir)/"\" -DLIBDIR=\""$(mclibdir)/"\" -DICONDIR=\""$(icondir)/"\" $(XINC) -DLOCALEDIR=\""$(localedir)/"\" -DCONFDIR=\""$(confdir)/"\" -DDESKTOP_INIT_DIR=\""$(desktopdir)/"\"
XLDFLAGS = @LDFLAGS@
XDEFS = @DEFS@
XLIBS = @LIBS@

# Where do we have the sources?
# You shouldn't have to edit this :)
mcsrcdir    = $(rootdir)/src
docdir      = $(rootdir)/doc
mcsrclibdir = $(rootdir)/lib
slangdir    = $(rootdir)/slang
vfsdir      = $(rootdir)/vfs
xvdir       = $(rootdir)/xv
tkdir	    = $(rootdir)/tk
gnomedir    = $(rootdir)/gnome

hpath = -I$(mcsrcdir) -I$(slangdir) -I$(vfsdir) -I$(xvdir) -I$(xvdir)/support/xview_private -I$(tkdir)

# Rules
first_rule: all

@PHONY@ all check cross TAGS clean install uninstall distcopy depend dep
@PHONY@ fastdep fastdepslang fastdepvfs fastdeploc slowdep

@PCENTRULE@../slang/%.o : ../slang/%.c
@PCENTRULE@	cd ../slang; $(MAKE) libmcslang.a

@PCENTRULE@../vfs/%.o : ../vfs/%.c
@PCENTRULE@	cd ../vfs; $(MAKE) libvfs.a

fastdep: dummy
	if test x"`echo $(srcdir)/*.[ch]`" != x'$(srcdir)/*.[ch]'; then { cd $(srcdir); $(AWK) -f $(mcsrcdir)/depend.awk $(AWK_VAR_OPTION) hpath="$(hpath)" $(AWK_VAR_OPTION) srcdir="$(srcdir)" *.[ch];} > .depend; fi
	-$(MAKE) fastdeploc
	@WRITEDEP@

fastdepslang:
@PCENTRULE@	{ { { cd ../slang; $(MAKE) showlibdep;} | grep OBJS; cat .depend;} | { cd $(slangdir); $(AWK) -f $(mcsrcdir)/depend.awk $(AWK_VAR_OPTION) dolib="../slang libmcslang.a" $(AWK_VAR_OPTION) hpath="$(hpath)" $(AWK_VAR_OPTION) srcdir="$(slangdir)";};} >> .depend

fastdepvfs:
@PCENTRULE@	{ { { cd ../vfs; $(MAKE) showlibdep;} | grep OBJS; cat .depend;} | { cd $(vfsdir); $(AWK) -f $(mcsrcdir)/depend.awk $(AWK_VAR_OPTION) dolib="../vfs libvfs.a" $(AWK_VAR_OPTION) hpath="$(hpath)" $(AWK_VAR_OPTION) srcdir="$(vfsdir)";};} >> .depend

slowdep: dummy
	if test x"`echo $(srcdir)/*.[ch]`" != x'$(srcdir)/*.[ch]'; then \
	$(CPP) -M $(CPPFLAGS) $(DEFS) $(CFLAGS) $(srcdir)/*.c > .depend; fi
	@WRITEDEP@

mcdep: @dep@

dummy:

# End of Make.common
