\input texinfo   @c -*-texinfo-*-
@comment $Id@w{$}
@comment %**start of header
@setfilename fontopia.info
@settitle fontopia version 1.8
@syncodeindex pg cp
@comment %**end of header
@copying
This manual is for fontopia - the console font editor (version 1.8).

Copyright @copyright{} 2015, 2016, 2017, 2018 Mohammed Isam.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.7 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled
``GNU Free Documentation License''.

@end quotation
@end copying

@dircategory Individual utilities
@direntry
* fontopia: (fontopia).         Using the console font editor
@end direntry

@titlepage
@title fontopia - the console font editor
@subtitle for version 1.8
@author Mohammed Isam (@email{mohammed_isam1984@@yahoo.com})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top fontopia

This manual is for fontopia - the console font editor (version 1.8).

@end ifnottex

@menu
* fontopia:: the console font editor
* GNU Free Documentation License::
* Index::
@end menu

@node fontopia
@chapter fontopia: the console font editor
@cindex fontopia: the console font editor

@section About fontopia
@cindex About fontopia
Fontopia is an easy-to-use, text-based, console font editor.
What this means in simple English is that you can edit the fonts
that your GNU/Linux kernel is using to display your text on
text-based (vs graphical) terminals.
@*
Unlike other console text editors which usually work on one PSF
version, or work on unicode tables only, or allow very minimal glyph
editing, fontopia provides all these functions together:

@itemize @minus
@item
It works on both PSF 1 & 2, you can even change file type and save it to 
disk in the other version.
@item
It allows exporting and importing of unicode tables from external files.
@item
It provides a user-friendly, easy-to-use glyph editor.
@item
It can easily change font metrics, e.g. length, width, height...
@end itemize
@*

Console font files are commonly of PSF type (of which there are two
versions), or of CP type (legacy fonts). Fontopia works with PSF files
of both versions, as well as CP fonts, BDF files and raw font files.

@section What's new:
@cindex What's new:
@itemize @minus
@item
We added support for the PCF (Portable Compiled Format) fonts. Work 
is ongoing on Windows FON and FNT files.
@item
We added the Extended Glyph Operations window (accessed by pressing O) 
and the Glyph Info window (accessed by pressing G).
@end itemize

@section Supported formats:
@cindex Supported formats:
@itemize @minus
@item
PSF 1 and 2
@item
Linux Code pages (CP)
@item
Raw fonts
@item
BDF fonts (beta)
@item
PCF fonts
@item
Windows FON files support under development
@end itemize


@section WARNING:
@cindex WARNING:

@enumerate
@item
There is a major downside currently: fontopia doesn't work with unicode
sequences properly (at least not in all cases). If you export a unicode
table, edit it, and then import it to a font file, you should be safe.
@item
Note that if you changed the font version from CP to any other version,
only the ACTIVE font will be changed, as the other font formats (PSF,
Raw, BDF) don't support multiple fonts inside the same font file. In this
case, you will need to open the original CP file multiple times, every
time select a different font size (by using '1'-'4' number keys) and
convert to the new font version, then reopen the original CP file, select
another font size, convert it, and so on.
@end enumerate


@section Navigation
@cindex Navigation
Using the editor is very easy:

@enumerate
@item
Navigate the glyphs on the right side window using the arrow keys.
Edit a single glyph using ENTER (or TAB).
@item
Navigate the bits that form a single bit (on the left side window)
using arrow keys. Press ENTER or SPACE to set/unset the desired bit. Go 
back to right window (glyph list) using TAB.
@item
To zoom in (make the glyph on the left look bigger), press Z.
@item
To zoom out, press X.
@item
To open a new file, press CTRL+O.
@item
To create a new font from scratch, press CTRL+N.
@item
To save your work, press CTRL+S.
@item
To save with a new filename, press CTRL+D (aka Save As..).
@item
To quit the editor, press CTRL+Q.
@item
To show help, press CTRL+H.
@item
To copy a glyph, press CTRL+C.
@item
To cut a glyph, press CTRL+X.
@item
To paste a glyph, press CTRL+V.
@item
To show about dialog box, press A.
@item
To switch buffer mode (on/off), press CTRL+B.
@item
To clear a glyph (i.e. remove all bits), press C.
@item
To invert a glyph, press D.
@item
To export font unicode table (by default to a file with same original 
file name plus .tab extension), press E.
@item
To flip a glyph horizontally, press H.
@item
To import unicode table from another file, press I.
@item
To show these keys without the extra jargon, press K.
@item
To show font metrics window, press M.
@item
To show the extended glyph operations window, press O.
@item
To change codepage of a CP font, press P.
If font is in BDF format, P shows properties (or metadata).
@item
To remove unicode table from font, press CTRL+R.
@item
To set a glyph (i.e. set all bits), press S.
@item
To show font unicode table, press U.
@item
To flip a glyph vertically, press V.
@item
To export font glyphs in textual format (by default to a file with
same original file name plus .glyph extension), press W.
@item
If editing a CP font and you want to change the active font (e.g.
edit the 8x8 font instead of the 16x8 font you are currently editing)
press any key from '1' to '4' and the respective font will be the
active font to be edited. You can go back and forth by using the
number keys.
@end enumerate
@*

The unicode values that are mapped to a specific glyph are shown on the
status bar (the bottom strip) to the right side.
@*

That should make you ready to move around and edit your fonts. Have fun!.


@section Buffer mode
@cindex Buffer mode
We know editing font files is a delicate and error-prone task, more so when
working with small tiny fragile things like console fonts. For this we added
buffering functionality to fontopia.@*
What the buffer is, simply, a way to do all your work on your font, editing
and cutting and scaling and whatsoever, and saving the font with the same
name you intended to, but adding a tilde '~' to the end, same like backup
files used by other programs (like gedit for example).@*
When you are happy with your work and you want to transfer it to the final
font file, turn off buffering mode and hit ^S and your file will be saved.



@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl.texi

@node Index
@unnumbered Index

@printindex cp

@bye
