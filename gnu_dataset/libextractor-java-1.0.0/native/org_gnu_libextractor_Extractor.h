/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_gnu_libextractor_Extractor */

#ifndef _Included_org_gnu_libextractor_Extractor
#define _Included_org_gnu_libextractor_Extractor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    unloadPluginInternal
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_gnu_libextractor_Extractor_unloadPluginInternal
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    loadPluginInternal
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_gnu_libextractor_Extractor_loadPluginInternal
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    loadDefaultInternal
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_gnu_libextractor_Extractor_loadDefaultInternal
  (JNIEnv *, jclass);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    unloadAllInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_gnu_libextractor_Extractor_unloadAllInternal
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    extractInternal
 * Signature: (JLjava/lang/String;[BLjava/util/ArrayList;)J
 */
JNIEXPORT void JNICALL Java_org_gnu_libextractor_Extractor_extractInternal
  (JNIEnv *, jclass, jlong, jstring, jbyteArray, jobject);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    getVersionInternal
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_gnu_libextractor_Extractor_getVersionInternal
  (JNIEnv *, jclass);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    getTypeAsStringInternal
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_gnu_libextractor_Extractor_getTypeAsStringInternal
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_gnu_libextractor_Extractor
 * Method:    getMaxTypeInternal
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_gnu_libextractor_Extractor_getMaxTypeInternal
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
