@subheading shishi_principal_default_guess
@anchor{shishi_principal_default_guess}
@deftypefun {char *} {shishi_principal_default_guess} ( @var{void})

Guesses the principal name for the user, looking at environment
variables SHISHI_USER, USER and LOGNAME, or if that fails, returns
the string "user".

@strong{Return value:} Returns guessed default principal for user as a
string that has to be deallocated by the caller with @code{free()}.
@end deftypefun

@subheading shishi_principal_default
@anchor{shishi_principal_default}
@deftypefun {const char *} {shishi_principal_default} (Shishi * @var{handle})
@var{handle}: Shishi library handle created by @code{shishi_init()}.

The default principal name is the name in the environment variable
USER, or LOGNAME for some systems, but it can be overridden by
specifying the environment variable SHISHI_USER.

@strong{Return value:} Returns the default principal name used by the
library.  (Not a copy of it, so don't modify or deallocate it.)
@end deftypefun

@subheading shishi_principal_default_set
@anchor{shishi_principal_default_set}
@deftypefun {void} {shishi_principal_default_set} (Shishi * @var{handle}, const char * @var{principal})
@var{handle}: Shishi library handle created by @code{shishi_init()}.

@var{principal}: string with new default principal name, or NULL to
reset to default.

Set the default principal used by the library.  The string is copied
into the library, so you can dispose of the variable immediately
after calling this function.
@end deftypefun

@subheading shishi_parse_name
@anchor{shishi_parse_name}
@deftypefun {int} {shishi_parse_name} (Shishi * @var{handle}, const char * @var{name}, char ** @var{principal}, char ** @var{realm})
@var{handle}: Shishi library handle created by @code{shishi_init()}.

@var{name}: input principal name string, e.g. imap/mail.gnu.org\@code{GNU}.ORG.

@var{principal}: newly allocated output string with principal name.

@var{realm}: newly allocated output string with realm name.

Split principal name (e.g., "simon\@code{JOSEFSSON}.ORG") into two
newly allocated strings, the @code{principal} ("simon"), and the @code{realm}
("JOSEFSSON.ORG").  If there is no realm part in @code{name}, @code{realm} is set
to NULL.

@strong{Return value:} Returns SHISHI_INVALID_PRINCIPAL_NAME if @code{name} is NULL
or ends with the escape character "\", and SHISHI_OK if
successful.
@end deftypefun

@subheading shishi_principal_name
@anchor{shishi_principal_name}
@deftypefun {int} {shishi_principal_name} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, char ** @var{out}, size_t * @var{outlen})
@var{handle}: Shishi library handle created by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal in @code{namefield}.

@var{namefield}: name of field in @code{namenode} containing principal name.

@var{out}: pointer to newly allocated, null terminated, string containing
principal name.  May be @code{NULL} (to only populate @code{outlen}).

@var{outlen}: pointer to length of @code{out} on output, excluding terminating
null.  May be @code{NULL} (to only populate @code{out}).

Represent principal name in ASN.1 structure as null-terminated
string.  The string is allocated by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length @code{outlen} does not include the terminating null.

@strong{Return value:} Returns SHISHI_OK if successful.
@end deftypefun

@subheading shishi_principal_name_realm
@anchor{shishi_principal_name_realm}
@deftypefun {int} {shishi_principal_name_realm} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, Shishi_asn1 @var{realmnode}, const char * @var{realmfield}, char ** @var{out}, size_t * @var{outlen})
@var{handle}: Shishi library handle created by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal name in @code{namefield}.

@var{namefield}: name of field in @code{namenode} containing principal name.

@var{realmnode}: ASN.1 structure with principal realm in @code{realmfield}.

@var{realmfield}: name of field in @code{realmnode} containing principal realm.

@var{out}: pointer to newly allocated null terminated string containing
principal name.  May be @code{NULL} (to only populate @code{outlen}).

@var{outlen}: pointer to length of @code{out} on output, excluding terminating
null.  May be @code{NULL} (to only populate @code{out}).

Represent principal name and realm in ASN.1 structure as
null-terminated string.  The string is allocated by this function.
It is the responsibility of the caller to deallocate it.  Note
that the output length @code{outlen} does not include the terminating
null character.

@strong{Return value:} Returns SHISHI_OK if successful.
@end deftypefun

@subheading shishi_principal_name_set
@anchor{shishi_principal_name_set}
@deftypefun {int} {shishi_principal_name_set} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, Shishi_name_type @var{name_type}, const char * [] @var{name})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal in @code{namefield}.

@var{namefield}: name of field in @code{namenode} containing principal name.

@var{name_type}: type of principal, see Shishi_name_type, usually
SHISHI_NT_UNKNOWN.

@var{name}: null-terminated input array with principal name.

Set the given principal name field to the given name.

@strong{Return value:} Returns SHISHI_OK if successful.
@end deftypefun

@subheading shishi_principal_set
@anchor{shishi_principal_set}
@deftypefun {int} {shishi_principal_set} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, const char * @var{name})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal in @code{namefield}.

@var{namefield}: name of field in @code{namenode} containing principal name.

@var{name}: null-terminated string with principal name in RFC 1964 form.

Set principal name field in an ASN.1 structure to the given name.

@strong{Return value:} Returns SHISHI_OK if successful.
@end deftypefun

@subheading shishi_derive_default_salt
@anchor{shishi_derive_default_salt}
@deftypefun {int} {shishi_derive_default_salt} (Shishi * @var{handle}, const char * @var{name}, char ** @var{salt})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{name}: principal name of user.

@var{salt}: output variable with newly allocated salt string.

Derive the default salt from a principal.  The default salt is the
concatenation of the decoded realm and the principal.

@strong{Return value:} Return SHISHI_OK if successful.
@end deftypefun

@subheading shishi_server_for_local_service
@anchor{shishi_server_for_local_service}
@deftypefun {char *} {shishi_server_for_local_service} (Shishi * @var{handle}, const char * @var{service})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{service}: null terminated string with name of service, e.g., "host".

Construct a service principal (e.g., "imap/yxa.extuno.com") based
on supplied service name (i.e., "imap") and the system's hostname as
returned by @code{hostname()} (i.e., "yxa.extundo.com").  The string must
be deallocated by the caller.

@strong{Return value:} Return newly allocated service name string.
@end deftypefun

