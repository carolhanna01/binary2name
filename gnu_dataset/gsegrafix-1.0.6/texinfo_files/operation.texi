@node Operation
@unnumbered 5 Operation
@section 5.1 Running GSEGrafix from terminal window
As described in the Introduction GSEGrafix can be run from a terminal command line by using the gsegrafix command:

@example
$ gsegrafix &
@end example

The program can also be run by using either the gsegrafix or gsegraf command followed by the name of a parameter file:

@example
$ gsegrafix /home/sab/gsegrafix/param_files/sinc_param.txt &
@end example

or:

@example
$ gsegraf /home/sab/gsegrafix/param_files/sinc_param.txt &
@end example

This help file can be displayed by using either the gsegrafix or gsegraf command followed by -h:

@example
$ gsegrafix -h
@end example
or:

@example
$ gsegraf -h
@end example

@section 5.2 Running GSEGrafix from Octave program
GSEGrafix can be run from an Octave program by calling an Octave function such as @uref{./help_files/gsegraf_plot.txt, gsegraf_plot}. This function writes a parameter file and then uses gsegraf to create the corresponding plot. The first input to the function is the name of the parameter file to be created. The remaining inputs are keyword-argument pairs to be written to the parameter file. All inputs must be strings (enclosed in double quotes) and separated by commas. If all or part of an argument needs to be quoted in the parameter file, the double-quote escape sequence (\") must be used for these additional quotes. An example of how to call gsegraf_plot is:

@example
gsegraf_plot("./sinc_param.txt",
             "file_name     \"./sinc.txt\"",
             "file_format   \"%lf %lf\"",
             "plot_type     \"points\"",
             "plot_style    lk",
             "axis_type     \"linear\"",
             "grid          ls",
             "xlabel        \"x axis\"",
             "ylabel        \"y axis\"",
             "title         \"sin(x)/x\"");
@end example

@section 5.3 Running GSEGrafix from C program
GSEGrafix can be run from a C program by calling a C function such as @uref{./help_files/gsegraf_C_plot.txt, gsegraf_C_plot}. As described above for an Octave function, the C function writes a parameter file and then uses gsegraf to create the corresponding plot. The only difference for calling the C function is that the list of keyword-argument pairs must be terminated with a @code{NULL} pointer:

@example
gsegraf_C_plot("./sinc_param.txt",
               "file_name     \"./sinc.txt\"",
               "file_format   \"%lf %lf\"",
               "plot_type     \"points\"",
               "plot_style    lk",
               "axis_type     \"linear\"",
               "grid          ls",
               "xlabel        \"x axis\"",
               "ylabel        \"y axis\"",
               "title         \"sin(x)/x\"",
               NULL);
@end example

@section 5.4 Zoom capability
The zoom capability works for all two-dimensional rectangular plots and histograms. To use the zoom capability click the left mouse button at one corner of the area to be expanded and drag the mouse to the opposite corner of this area. The points within the zoom rectangle will be confined within the plot border. When the left mouse button is released, the plot will be redrawn showing at least the region defined by the zoom rectangle. "Nice" tick-mark labels will be chosen. To redraw the original plot click the right mouse button in the plot window.

@section 5.5 Save As menu button
To save a plot as an image file click the File menu button and then the Save As button. A file-chooser dialog box will appear and can be used to choose the image file name. The file name must have an extension which indicates the image file format. The supported image file formats are bmp (Windows Bitmap), jpeg (Joint Photographic Experts Group), and png (Portable Network Graphics). Sample image file names are:

@example
plot.bmp
plot.jpeg
plot.png
@end example

The quality parameter for jpeg files is 75.

@section 5.6 Axis Limits menu button
To change the axis limits for a plot click the View menu button and then the Axis Limits button. A dialog box can then be used to specify new axis limits. This method works for all plots. Only the r-axis limits can be changed in polar plots. To redraw the original plot click the right mouse button in the plot window.

@section 5.7 Rotate 3d Axes menu button
To change the orientation of three-dimensional plots click the View menu button and then the Rotate 3d Axes button. A dialog box can then be used to specify new azimuth and elevation angles. The reference line for the first angle, azimuth, is the projection in the x-y plane of a line out of the screen toward the viewer (perpendicular to the screen). Azimuth is the angle measured clockwise from the reference line to the positive x axis. The second angle, elevation, is the angle between a line out of the screen toward the viewer and the x-y plane. This definition results in points with positive x and y coordinates being closest to the viewer for azimuth values between 0 and 90 degrees. When both angles are zero, the positive x axis is perpendicular to the screen toward the viewer, the positive y axis is toward the right in the plane of the screen, and the positive z axis is up in the plane of the screen. Both angles are specified in degrees. To redraw the original plot click the right mouse button in the plot window.

@section 5.8 Label Contours menu button
To activate the contour-labeling function for two-dimensional contour plots click the View menu button and then the Label Contours button. The mouse cursor changes to a cross hair when this button is clicked the first time. As the mouse is moved interpolated values of the z coordinate at the mouse position are displayed in the upper left corner of the plot window when the mouse is within the area where z coordinates are available. The contour plot corresponding to the z-axis values is indicated above the z-axis values as shown below.

@example
contour plot 1
z = 1.23456
@end example

If there is more than one contour plot, the up-arrow key can be clicked to change to the next contour plot. Clicking the down-arrow key changes to an earlier plot. When the cursor is positioned on or near a contour line and the left mouse button is pressed, the contour value of the nearest contour line is drawn at the mouse position. The font size of contour labels is the same as that for text. The cursor is confined to the plot window in this mode. To leave this mode and return the mouse cursor to its default shape, click the Label Contours button a second time.

@section 5.9 Display Coordinates menu button
To activate the xy-coordinates display function click the View menu button and then the Display Coordinates button. The mouse cursor changes to a cross hair when this button is clicked the first time. Values of the x and y coordinates of the cursor are displayed in the lower left corner of the the plot window when the mouse is within the plot box. For two-dimensional color and contour plots, interpolated values of the z coordinate at the mouse position are displayed just below the cursor when the mouse is within the area where z coordinates are available. The font size of the coordinates display is the same as that for text. The cursor is confined to the plot window in this mode. To turn the coordinates display off and return the mouse cursor to its default shape, click the Display Coordinates button a second time. This function works for two-dimensional plots only.

@section 5.10 UTF-8 escape sequences
UTF-8 escape sequences can be used to specify characters which are not available on the keyboard for @code{xlabel}, @code{ylabel}, @code{zlabel}, @code{title}, @code{legend_string}, and @code{text string}. These codes can be found in the Unicode Character Map. The Unicode Character Map can be run with the command gucharmap. The codes can be specified with either hexadecimal or octal escape sequences. These codes are \xhh and \ooo, respectively. UTF-8 hexadecimal escape sequences for Greek letters and some common mathematical symbols are listed below.

@subsection 5.10.1 Greek letters

@image{./figures/greek_letters, , , greek_letters.png, .png}

@subsection 5.10.2 Math symbols

@image{./figures/math_symbols, , , math_symbols.png, .png}

See Examples 4, 5, and 7 for use of UTF-8 escape sequences. 

